

Microchip MPLAB XC8 Assembler V3.00 build 20241204225717 
                                                                                               Wed Sep 24 21:30:33 2025

Microchip MPLAB XC8 C Compiler v3.00 (Free license) build 20241204225717 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,space=0,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,space=0,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	text0,global,reloc=2,class=CODE,space=0,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,space=0,delta=1
    12                           	psect	text2,global,reloc=2,class=CODE,space=0,delta=1
    13                           	psect	text3,global,reloc=2,class=CODE,space=0,delta=1,group=3
    14                           	psect	text4,global,reloc=2,class=CODE,space=0,delta=1,group=1
    15                           	psect	text5,global,reloc=2,class=CODE,space=0,delta=1,group=1
    16                           	psect	text6,global,reloc=2,class=CODE,space=0,delta=1,group=3
    17                           	psect	text7,global,reloc=2,class=CODE,space=0,delta=1,group=3
    18                           	psect	text8,global,reloc=2,class=CODE,space=0,delta=1,group=3
    19                           	psect	text9,global,reloc=2,class=CODE,space=0,delta=1,group=2
    20                           	psect	text10,global,reloc=2,class=CODE,space=0,delta=1,group=2
    21                           	psect	text11,global,reloc=2,class=CODE,space=0,delta=1
    22                           	psect	text12,global,reloc=2,class=CODE,space=0,delta=1
    23                           	psect	text13,global,reloc=2,class=CODE,space=0,delta=1
    24                           	psect	text14,global,reloc=2,class=CODE,space=0,delta=1
    25                           	psect	text15,global,reloc=2,class=CODE,space=0,delta=1
    26                           	psect	text16,global,reloc=2,class=CODE,space=0,delta=1
    27                           	psect	text17,global,reloc=2,class=CODE,space=0,delta=1
    28                           	psect	text18,global,reloc=2,class=CODE,space=0,delta=1
    29                           	psect	text19,global,reloc=2,class=CODE,space=0,delta=1
    30                           	psect	text20,global,reloc=2,class=CODE,space=0,delta=1
    31                           	psect	intcodelo,global,reloc=2,class=CODE,space=0,delta=1
    32                           	psect	intcode,global,reloc=2,class=CODE,space=0,delta=1
    33                           	psect	intcode_body,global,reloc=2,class=CODE,space=0,delta=1
    34                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    35                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    36                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1,lowdata
    37                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    38   000000                     
    39                           ; Generated 17/01/2025 GMT
    40                           ; 
    41                           ; Copyright Â© 2025, Microchip Technology Inc. and its subsidiaries ("Microchip")
    42                           ; All rights reserved.
    43                           ; 
    44                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    45                           ; 
    46                           ; Redistribution and use in source and binary forms, with or without modification, are
    47                           ; permitted provided that the following conditions are met:
    48                           ; 
    49                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    50                           ;        conditions and the following disclaimer.
    51                           ; 
    52                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    53                           ;        of conditions and the following disclaimer in the documentation and/or other
    54                           ;        materials provided with the distribution. Publication is not required when
    55                           ;        this file is used in an embedded application.
    56                           ; 
    57                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    58                           ;        software without specific prior written permission.
    59                           ; 
    60                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    61                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    62                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    63                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    64                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    65                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    66                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    67                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    68                           ; 
    69                           ; 
    70                           ; Code-generator required, PIC18F4550 Definitions
    71                           ; 
    72                           ; SFR Addresses
    73   000FE0                     bsr             equ	4064
    74   000FE9                     fsr0            equ	4073
    75   000FEA                     fsr0h           equ	4074
    76   000FE9                     fsr0l           equ	4073
    77   000FE1                     fsr1            equ	4065
    78   000FE2                     fsr1h           equ	4066
    79   000FE1                     fsr1l           equ	4065
    80   000FD9                     fsr2            equ	4057
    81   000FDA                     fsr2h           equ	4058
    82   000FD9                     fsr2l           equ	4057
    83   000FEF                     indf0           equ	4079
    84   000FE7                     indf1           equ	4071
    85   000FDF                     indf2           equ	4063
    86   000FF2                     intcon          equ	4082
    87   000000                     nvmcon          equ	0
    88   000FF9                     pcl             equ	4089
    89   000FFA                     pclath          equ	4090
    90   000FFB                     pclatu          equ	4091
    91   000FEB                     plusw0          equ	4075
    92   000FE3                     plusw1          equ	4067
    93   000FDB                     plusw2          equ	4059
    94   000FED                     postdec0        equ	4077
    95   000FE5                     postdec1        equ	4069
    96   000FDD                     postdec2        equ	4061
    97   000FEE                     postinc0        equ	4078
    98   000FE6                     postinc1        equ	4070
    99   000FDE                     postinc2        equ	4062
   100   000FEC                     preinc0         equ	4076
   101   000FE4                     preinc1         equ	4068
   102   000FDC                     preinc2         equ	4060
   103   000FF3                     prod            equ	4083
   104   000FF4                     prodh           equ	4084
   105   000FF3                     prodl           equ	4083
   106   000FD8                     status          equ	4056
   107   000FF5                     tablat          equ	4085
   108   000FF6                     tblptr          equ	4086
   109   000FF7                     tblptrh         equ	4087
   110   000FF6                     tblptrl         equ	4086
   111   000FF8                     tblptru         equ	4088
   112   000FFD                     tosl            equ	4093
   113   000FE8                     wreg            equ	4072
   114   000F62                     SPPDATA         equ	3938	;# 
   115   000F63                     SPPCFG          equ	3939	;# 
   116   000F64                     SPPEPS          equ	3940	;# 
   117   000F65                     SPPCON          equ	3941	;# 
   118   000F66                     UFRM            equ	3942	;# 
   119   000F66                     UFRML           equ	3942	;# 
   120   000F67                     UFRMH           equ	3943	;# 
   121   000F68                     UIR             equ	3944	;# 
   122   000F69                     UIE             equ	3945	;# 
   123   000F6A                     UEIR            equ	3946	;# 
   124   000F6B                     UEIE            equ	3947	;# 
   125   000F6C                     USTAT           equ	3948	;# 
   126   000F6D                     UCON            equ	3949	;# 
   127   000F6E                     UADDR           equ	3950	;# 
   128   000F6F                     UCFG            equ	3951	;# 
   129   000F70                     UEP0            equ	3952	;# 
   130   000F71                     UEP1            equ	3953	;# 
   131   000F72                     UEP2            equ	3954	;# 
   132   000F73                     UEP3            equ	3955	;# 
   133   000F74                     UEP4            equ	3956	;# 
   134   000F75                     UEP5            equ	3957	;# 
   135   000F76                     UEP6            equ	3958	;# 
   136   000F77                     UEP7            equ	3959	;# 
   137   000F78                     UEP8            equ	3960	;# 
   138   000F79                     UEP9            equ	3961	;# 
   139   000F7A                     UEP10           equ	3962	;# 
   140   000F7B                     UEP11           equ	3963	;# 
   141   000F7C                     UEP12           equ	3964	;# 
   142   000F7D                     UEP13           equ	3965	;# 
   143   000F7E                     UEP14           equ	3966	;# 
   144   000F7F                     UEP15           equ	3967	;# 
   145   000F80                     PORTA           equ	3968	;# 
   146   000F81                     PORTB           equ	3969	;# 
   147   000F82                     PORTC           equ	3970	;# 
   148   000F83                     PORTD           equ	3971	;# 
   149   000F84                     PORTE           equ	3972	;# 
   150   000F89                     LATA            equ	3977	;# 
   151   000F8A                     LATB            equ	3978	;# 
   152   000F8B                     LATC            equ	3979	;# 
   153   000F8C                     LATD            equ	3980	;# 
   154   000F8D                     LATE            equ	3981	;# 
   155   000F92                     TRISA           equ	3986	;# 
   156   000F92                     DDRA            equ	3986	;# 
   157   000F93                     TRISB           equ	3987	;# 
   158   000F93                     DDRB            equ	3987	;# 
   159   000F94                     TRISC           equ	3988	;# 
   160   000F94                     DDRC            equ	3988	;# 
   161   000F95                     TRISD           equ	3989	;# 
   162   000F95                     DDRD            equ	3989	;# 
   163   000F96                     TRISE           equ	3990	;# 
   164   000F96                     DDRE            equ	3990	;# 
   165   000F9B                     OSCTUNE         equ	3995	;# 
   166   000F9D                     PIE1            equ	3997	;# 
   167   000F9E                     PIR1            equ	3998	;# 
   168   000F9F                     IPR1            equ	3999	;# 
   169   000FA0                     PIE2            equ	4000	;# 
   170   000FA1                     PIR2            equ	4001	;# 
   171   000FA2                     IPR2            equ	4002	;# 
   172   000FA6                     EECON1          equ	4006	;# 
   173   000FA7                     EECON2          equ	4007	;# 
   174   000FA8                     EEDATA          equ	4008	;# 
   175   000FA9                     EEADR           equ	4009	;# 
   176   000FAB                     RCSTA           equ	4011	;# 
   177   000FAB                     RCSTA1          equ	4011	;# 
   178   000FAC                     TXSTA           equ	4012	;# 
   179   000FAC                     TXSTA1          equ	4012	;# 
   180   000FAD                     TXREG           equ	4013	;# 
   181   000FAD                     TXREG1          equ	4013	;# 
   182   000FAE                     RCREG           equ	4014	;# 
   183   000FAE                     RCREG1          equ	4014	;# 
   184   000FAF                     SPBRG           equ	4015	;# 
   185   000FAF                     SPBRG1          equ	4015	;# 
   186   000FB0                     SPBRGH          equ	4016	;# 
   187   000FB1                     T3CON           equ	4017	;# 
   188   000FB2                     TMR3            equ	4018	;# 
   189   000FB2                     TMR3L           equ	4018	;# 
   190   000FB3                     TMR3H           equ	4019	;# 
   191   000FB4                     CMCON           equ	4020	;# 
   192   000FB5                     CVRCON          equ	4021	;# 
   193   000FB6                     ECCP1AS         equ	4022	;# 
   194   000FB6                     CCP1AS          equ	4022	;# 
   195   000FB7                     ECCP1DEL        equ	4023	;# 
   196   000FB7                     CCP1DEL         equ	4023	;# 
   197   000FB8                     BAUDCON         equ	4024	;# 
   198   000FB8                     BAUDCTL         equ	4024	;# 
   199   000FBA                     CCP2CON         equ	4026	;# 
   200   000FBB                     CCPR2           equ	4027	;# 
   201   000FBB                     CCPR2L          equ	4027	;# 
   202   000FBC                     CCPR2H          equ	4028	;# 
   203   000FBD                     CCP1CON         equ	4029	;# 
   204   000FBD                     ECCP1CON        equ	4029	;# 
   205   000FBE                     CCPR1           equ	4030	;# 
   206   000FBE                     CCPR1L          equ	4030	;# 
   207   000FBF                     CCPR1H          equ	4031	;# 
   208   000FC0                     ADCON2          equ	4032	;# 
   209   000FC1                     ADCON1          equ	4033	;# 
   210   000FC2                     ADCON0          equ	4034	;# 
   211   000FC3                     ADRES           equ	4035	;# 
   212   000FC3                     ADRESL          equ	4035	;# 
   213   000FC4                     ADRESH          equ	4036	;# 
   214   000FC5                     SSPCON2         equ	4037	;# 
   215   000FC6                     SSPCON1         equ	4038	;# 
   216   000FC7                     SSPSTAT         equ	4039	;# 
   217   000FC8                     SSPADD          equ	4040	;# 
   218   000FC9                     SSPBUF          equ	4041	;# 
   219   000FCA                     T2CON           equ	4042	;# 
   220   000FCB                     PR2             equ	4043	;# 
   221   000FCB                     MEMCON          equ	4043	;# 
   222   000FCC                     TMR2            equ	4044	;# 
   223   000FCD                     T1CON           equ	4045	;# 
   224   000FCE                     TMR1            equ	4046	;# 
   225   000FCE                     TMR1L           equ	4046	;# 
   226   000FCF                     TMR1H           equ	4047	;# 
   227   000FD0                     RCON            equ	4048	;# 
   228   000FD1                     WDTCON          equ	4049	;# 
   229   000FD2                     HLVDCON         equ	4050	;# 
   230   000FD2                     LVDCON          equ	4050	;# 
   231   000FD3                     OSCCON          equ	4051	;# 
   232   000FD5                     T0CON           equ	4053	;# 
   233   000FD6                     TMR0            equ	4054	;# 
   234   000FD6                     TMR0L           equ	4054	;# 
   235   000FD7                     TMR0H           equ	4055	;# 
   236   000FD8                     STATUS          equ	4056	;# 
   237   000FD9                     FSR2            equ	4057	;# 
   238   000FD9                     FSR2L           equ	4057	;# 
   239   000FDA                     FSR2H           equ	4058	;# 
   240   000FDB                     PLUSW2          equ	4059	;# 
   241   000FDC                     PREINC2         equ	4060	;# 
   242   000FDD                     POSTDEC2        equ	4061	;# 
   243   000FDE                     POSTINC2        equ	4062	;# 
   244   000FDF                     INDF2           equ	4063	;# 
   245   000FE0                     BSR             equ	4064	;# 
   246   000FE1                     FSR1            equ	4065	;# 
   247   000FE1                     FSR1L           equ	4065	;# 
   248   000FE2                     FSR1H           equ	4066	;# 
   249   000FE3                     PLUSW1          equ	4067	;# 
   250   000FE4                     PREINC1         equ	4068	;# 
   251   000FE5                     POSTDEC1        equ	4069	;# 
   252   000FE6                     POSTINC1        equ	4070	;# 
   253   000FE7                     INDF1           equ	4071	;# 
   254   000FE8                     WREG            equ	4072	;# 
   255   000FE9                     FSR0            equ	4073	;# 
   256   000FE9                     FSR0L           equ	4073	;# 
   257   000FEA                     FSR0H           equ	4074	;# 
   258   000FEB                     PLUSW0          equ	4075	;# 
   259   000FEC                     PREINC0         equ	4076	;# 
   260   000FED                     POSTDEC0        equ	4077	;# 
   261   000FEE                     POSTINC0        equ	4078	;# 
   262   000FEF                     INDF0           equ	4079	;# 
   263   000FF0                     INTCON3         equ	4080	;# 
   264   000FF1                     INTCON2         equ	4081	;# 
   265   000FF2                     INTCON          equ	4082	;# 
   266   000FF3                     PROD            equ	4083	;# 
   267   000FF3                     PRODL           equ	4083	;# 
   268   000FF4                     PRODH           equ	4084	;# 
   269   000FF5                     TABLAT          equ	4085	;# 
   270   000FF6                     TBLPTR          equ	4086	;# 
   271   000FF6                     TBLPTRL         equ	4086	;# 
   272   000FF7                     TBLPTRH         equ	4087	;# 
   273   000FF8                     TBLPTRU         equ	4088	;# 
   274   000FF9                     PCLAT           equ	4089	;# 
   275   000FF9                     PC              equ	4089	;# 
   276   000FF9                     PCL             equ	4089	;# 
   277   000FFA                     PCLATH          equ	4090	;# 
   278   000FFB                     PCLATU          equ	4091	;# 
   279   000FFC                     STKPTR          equ	4092	;# 
   280   000FFD                     TOS             equ	4093	;# 
   281   000FFD                     TOSL            equ	4093	;# 
   282   000FFE                     TOSH            equ	4094	;# 
   283   000FFF                     TOSU            equ	4095	;# 
   284   000F62                     SPPDATA         equ	3938	;# 
   285   000F63                     SPPCFG          equ	3939	;# 
   286   000F64                     SPPEPS          equ	3940	;# 
   287   000F65                     SPPCON          equ	3941	;# 
   288   000F66                     UFRM            equ	3942	;# 
   289   000F66                     UFRML           equ	3942	;# 
   290   000F67                     UFRMH           equ	3943	;# 
   291   000F68                     UIR             equ	3944	;# 
   292   000F69                     UIE             equ	3945	;# 
   293   000F6A                     UEIR            equ	3946	;# 
   294   000F6B                     UEIE            equ	3947	;# 
   295   000F6C                     USTAT           equ	3948	;# 
   296   000F6D                     UCON            equ	3949	;# 
   297   000F6E                     UADDR           equ	3950	;# 
   298   000F6F                     UCFG            equ	3951	;# 
   299   000F70                     UEP0            equ	3952	;# 
   300   000F71                     UEP1            equ	3953	;# 
   301   000F72                     UEP2            equ	3954	;# 
   302   000F73                     UEP3            equ	3955	;# 
   303   000F74                     UEP4            equ	3956	;# 
   304   000F75                     UEP5            equ	3957	;# 
   305   000F76                     UEP6            equ	3958	;# 
   306   000F77                     UEP7            equ	3959	;# 
   307   000F78                     UEP8            equ	3960	;# 
   308   000F79                     UEP9            equ	3961	;# 
   309   000F7A                     UEP10           equ	3962	;# 
   310   000F7B                     UEP11           equ	3963	;# 
   311   000F7C                     UEP12           equ	3964	;# 
   312   000F7D                     UEP13           equ	3965	;# 
   313   000F7E                     UEP14           equ	3966	;# 
   314   000F7F                     UEP15           equ	3967	;# 
   315   000F80                     PORTA           equ	3968	;# 
   316   000F81                     PORTB           equ	3969	;# 
   317   000F82                     PORTC           equ	3970	;# 
   318   000F83                     PORTD           equ	3971	;# 
   319   000F84                     PORTE           equ	3972	;# 
   320   000F89                     LATA            equ	3977	;# 
   321   000F8A                     LATB            equ	3978	;# 
   322   000F8B                     LATC            equ	3979	;# 
   323   000F8C                     LATD            equ	3980	;# 
   324   000F8D                     LATE            equ	3981	;# 
   325   000F92                     TRISA           equ	3986	;# 
   326   000F92                     DDRA            equ	3986	;# 
   327   000F93                     TRISB           equ	3987	;# 
   328   000F93                     DDRB            equ	3987	;# 
   329   000F94                     TRISC           equ	3988	;# 
   330   000F94                     DDRC            equ	3988	;# 
   331   000F95                     TRISD           equ	3989	;# 
   332   000F95                     DDRD            equ	3989	;# 
   333   000F96                     TRISE           equ	3990	;# 
   334   000F96                     DDRE            equ	3990	;# 
   335   000F9B                     OSCTUNE         equ	3995	;# 
   336   000F9D                     PIE1            equ	3997	;# 
   337   000F9E                     PIR1            equ	3998	;# 
   338   000F9F                     IPR1            equ	3999	;# 
   339   000FA0                     PIE2            equ	4000	;# 
   340   000FA1                     PIR2            equ	4001	;# 
   341   000FA2                     IPR2            equ	4002	;# 
   342   000FA6                     EECON1          equ	4006	;# 
   343   000FA7                     EECON2          equ	4007	;# 
   344   000FA8                     EEDATA          equ	4008	;# 
   345   000FA9                     EEADR           equ	4009	;# 
   346   000FAB                     RCSTA           equ	4011	;# 
   347   000FAB                     RCSTA1          equ	4011	;# 
   348   000FAC                     TXSTA           equ	4012	;# 
   349   000FAC                     TXSTA1          equ	4012	;# 
   350   000FAD                     TXREG           equ	4013	;# 
   351   000FAD                     TXREG1          equ	4013	;# 
   352   000FAE                     RCREG           equ	4014	;# 
   353   000FAE                     RCREG1          equ	4014	;# 
   354   000FAF                     SPBRG           equ	4015	;# 
   355   000FAF                     SPBRG1          equ	4015	;# 
   356   000FB0                     SPBRGH          equ	4016	;# 
   357   000FB1                     T3CON           equ	4017	;# 
   358   000FB2                     TMR3            equ	4018	;# 
   359   000FB2                     TMR3L           equ	4018	;# 
   360   000FB3                     TMR3H           equ	4019	;# 
   361   000FB4                     CMCON           equ	4020	;# 
   362   000FB5                     CVRCON          equ	4021	;# 
   363   000FB6                     ECCP1AS         equ	4022	;# 
   364   000FB6                     CCP1AS          equ	4022	;# 
   365   000FB7                     ECCP1DEL        equ	4023	;# 
   366   000FB7                     CCP1DEL         equ	4023	;# 
   367   000FB8                     BAUDCON         equ	4024	;# 
   368   000FB8                     BAUDCTL         equ	4024	;# 
   369   000FBA                     CCP2CON         equ	4026	;# 
   370   000FBB                     CCPR2           equ	4027	;# 
   371   000FBB                     CCPR2L          equ	4027	;# 
   372   000FBC                     CCPR2H          equ	4028	;# 
   373   000FBD                     CCP1CON         equ	4029	;# 
   374   000FBD                     ECCP1CON        equ	4029	;# 
   375   000FBE                     CCPR1           equ	4030	;# 
   376   000FBE                     CCPR1L          equ	4030	;# 
   377   000FBF                     CCPR1H          equ	4031	;# 
   378   000FC0                     ADCON2          equ	4032	;# 
   379   000FC1                     ADCON1          equ	4033	;# 
   380   000FC2                     ADCON0          equ	4034	;# 
   381   000FC3                     ADRES           equ	4035	;# 
   382   000FC3                     ADRESL          equ	4035	;# 
   383   000FC4                     ADRESH          equ	4036	;# 
   384   000FC5                     SSPCON2         equ	4037	;# 
   385   000FC6                     SSPCON1         equ	4038	;# 
   386   000FC7                     SSPSTAT         equ	4039	;# 
   387   000FC8                     SSPADD          equ	4040	;# 
   388   000FC9                     SSPBUF          equ	4041	;# 
   389   000FCA                     T2CON           equ	4042	;# 
   390   000FCB                     PR2             equ	4043	;# 
   391   000FCB                     MEMCON          equ	4043	;# 
   392   000FCC                     TMR2            equ	4044	;# 
   393   000FCD                     T1CON           equ	4045	;# 
   394   000FCE                     TMR1            equ	4046	;# 
   395   000FCE                     TMR1L           equ	4046	;# 
   396   000FCF                     TMR1H           equ	4047	;# 
   397   000FD0                     RCON            equ	4048	;# 
   398   000FD1                     WDTCON          equ	4049	;# 
   399   000FD2                     HLVDCON         equ	4050	;# 
   400   000FD2                     LVDCON          equ	4050	;# 
   401   000FD3                     OSCCON          equ	4051	;# 
   402   000FD5                     T0CON           equ	4053	;# 
   403   000FD6                     TMR0            equ	4054	;# 
   404   000FD6                     TMR0L           equ	4054	;# 
   405   000FD7                     TMR0H           equ	4055	;# 
   406   000FD8                     STATUS          equ	4056	;# 
   407   000FD9                     FSR2            equ	4057	;# 
   408   000FD9                     FSR2L           equ	4057	;# 
   409   000FDA                     FSR2H           equ	4058	;# 
   410   000FDB                     PLUSW2          equ	4059	;# 
   411   000FDC                     PREINC2         equ	4060	;# 
   412   000FDD                     POSTDEC2        equ	4061	;# 
   413   000FDE                     POSTINC2        equ	4062	;# 
   414   000FDF                     INDF2           equ	4063	;# 
   415   000FE0                     BSR             equ	4064	;# 
   416   000FE1                     FSR1            equ	4065	;# 
   417   000FE1                     FSR1L           equ	4065	;# 
   418   000FE2                     FSR1H           equ	4066	;# 
   419   000FE3                     PLUSW1          equ	4067	;# 
   420   000FE4                     PREINC1         equ	4068	;# 
   421   000FE5                     POSTDEC1        equ	4069	;# 
   422   000FE6                     POSTINC1        equ	4070	;# 
   423   000FE7                     INDF1           equ	4071	;# 
   424   000FE8                     WREG            equ	4072	;# 
   425   000FE9                     FSR0            equ	4073	;# 
   426   000FE9                     FSR0L           equ	4073	;# 
   427   000FEA                     FSR0H           equ	4074	;# 
   428   000FEB                     PLUSW0          equ	4075	;# 
   429   000FEC                     PREINC0         equ	4076	;# 
   430   000FED                     POSTDEC0        equ	4077	;# 
   431   000FEE                     POSTINC0        equ	4078	;# 
   432   000FEF                     INDF0           equ	4079	;# 
   433   000FF0                     INTCON3         equ	4080	;# 
   434   000FF1                     INTCON2         equ	4081	;# 
   435   000FF2                     INTCON          equ	4082	;# 
   436   000FF3                     PROD            equ	4083	;# 
   437   000FF3                     PRODL           equ	4083	;# 
   438   000FF4                     PRODH           equ	4084	;# 
   439   000FF5                     TABLAT          equ	4085	;# 
   440   000FF6                     TBLPTR          equ	4086	;# 
   441   000FF6                     TBLPTRL         equ	4086	;# 
   442   000FF7                     TBLPTRH         equ	4087	;# 
   443   000FF8                     TBLPTRU         equ	4088	;# 
   444   000FF9                     PCLAT           equ	4089	;# 
   445   000FF9                     PC              equ	4089	;# 
   446   000FF9                     PCL             equ	4089	;# 
   447   000FFA                     PCLATH          equ	4090	;# 
   448   000FFB                     PCLATU          equ	4091	;# 
   449   000FFC                     STKPTR          equ	4092	;# 
   450   000FFD                     TOS             equ	4093	;# 
   451   000FFD                     TOSL            equ	4093	;# 
   452   000FFE                     TOSH            equ	4094	;# 
   453   000FFF                     TOSU            equ	4095	;# 
   454   000F95                     _TRISDbits      set	3989
   455   000F8C                     _LATDbits       set	3980
   456   000F8D                     _LATEbits       set	3981
   457   000F81                     _PORTB          set	3969
   458   000F81                     _PORTBbits      set	3969
   459   000F89                     _LATAbits       set	3977
   460   000F82                     _PORTCbits      set	3970
   461   000FF1                     _INTCON2bits    set	4081
   462   000FD0                     _RCONbits       set	4048
   463   000FF2                     _INTCONbits     set	4082
   464   000F94                     _TRISC          set	3988
   465   000F8D                     _LATE           set	3981
   466   000F96                     _TRISEbits      set	3990
   467   000F96                     _TRISE          set	3990
   468   000F95                     _TRISD          set	3989
   469   000F89                     _LATA           set	3977
   470   000F92                     _TRISA          set	3986
   471   000F93                     _TRISB          set	3987
   472   000FC1                     _ADCON1bits     set	4033
   473                           
   474                           	psect	smallconst
   475   000800                     __psmallconst:
   476                           	callstack 0
   477   000800  00                 	db	0
   478   000801                     STR_3:
   479   000801  42                 	db	66	;'B'
   480   000802  6C                 	db	108	;'l'
   481   000803  61                 	db	97	;'a'
   482   000804  6E                 	db	110	;'n'
   483   000805  63                 	db	99	;'c'
   484   000806  61                 	db	97	;'a'
   485   000807  73                 	db	115	;'s'
   486   000808  3D                 	db	61	;'='
   487   000809  00                 	db	0
   488   00080A                     STR_2:
   489   00080A  4D                 	db	77	;'M'
   490   00080B  6F                 	db	111	;'o'
   491   00080C  64                 	db	100	;'d'
   492   00080D  75                 	db	117	;'u'
   493   00080E  6C                 	db	108	;'l'
   494   00080F  6F                 	db	111	;'o'
   495   000810  00                 	db	0
   496   000811                     STR_1:
   497   000811  25                 	db	37
   498   000812  64                 	db	100	;'d'
   499   000813  00                 	db	0
   500   000814  00                 	db	0	; dummy byte at the end
   501   000800                     __smallconst    set	__psmallconst
   502   000800                     __mediumconst   set	__psmallconst
   503   000002                     __activetblptr  equ	2
   504                           
   505                           ; #config settings
   506                           
   507                           	psect	cinit
   508   001144                     __pcinit:
   509                           	callstack 0
   510   001144                     start_initialization:
   511                           	callstack 0
   512   001144                     __initialization:
   513                           	callstack 0
   514                           
   515                           ; Clear objects allocated to BANK0 (32 bytes)
   516   001144  EE00  F060         	lfsr	0,__pbssBANK0
   517   001148  0E20               	movlw	32
   518   00114A                     clear_0:
   519   00114A  6AEE               	clrf	postinc0,c
   520   00114C  06E8               	decf	wreg,f,c
   521   00114E  E1FD               	bnz	clear_0
   522                           
   523                           ; Clear objects allocated to COMRAM (11 bytes)
   524   001150  EE00  F048         	lfsr	0,__pbssCOMRAM
   525   001154  0E0B               	movlw	11
   526   001156                     clear_1:
   527   001156  6AEE               	clrf	postinc0,c
   528   001158  06E8               	decf	wreg,f,c
   529   00115A  E1FD               	bnz	clear_1
   530   00115C                     end_of_initialization:
   531                           	callstack 0
   532   00115C                     __end_of__initialization:
   533                           	callstack 0
   534   00115C  9053               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   535   00115E  9253               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   536   001160  0E00               	movlw	low (__Lmediumconst shr (0+16))
   537   001162  6EF8               	movwf	tblptru,c
   538   001164  0100               	movlb	0
   539   001166  EFE7  F004         	goto	_main	;jump to C main() function
   540                           
   541                           	psect	bssCOMRAM
   542   000048                     __pbssCOMRAM:
   543                           	callstack 0
   544   000048                     _width:
   545                           	callstack 0
   546   000048                     	ds	2
   547   00004A                     _prec:
   548                           	callstack 0
   549   00004A                     	ds	2
   550   00004C                     _metalica:
   551                           	callstack 0
   552   00004C                     	ds	2
   553   00004E                     _negra:
   554                           	callstack 0
   555   00004E                     	ds	2
   556   000050                     _blanca:
   557                           	callstack 0
   558   000050                     	ds	2
   559   000052                     _flags:
   560                           	callstack 0
   561   000052                     	ds	1
   562                           
   563                           	psect	bssBANK0
   564   000060                     __pbssBANK0:
   565                           	callstack 0
   566   000060                     _dbuf:
   567                           	callstack 0
   568   000060                     	ds	32
   569                           
   570                           	psect	cstackCOMRAM
   571   000001                     __pcstackCOMRAM:
   572                           	callstack 0
   573   000001                     ??_LowISR:
   574                           
   575                           ; 1 bytes @ 0x0
   576   000001                     	ds	3
   577   000004                     LowISR@dummy:
   578                           	callstack 0
   579                           
   580                           ; 1 bytes @ 0x3
   581   000004                     	ds	1
   582   000005                     ?___awdiv:
   583                           	callstack 0
   584   000005                     ?___awmod:
   585                           	callstack 0
   586   000005                     Lcd_Port@a:
   587                           	callstack 0
   588   000005                     ___awdiv@dividend:
   589                           	callstack 0
   590   000005                     ___awmod@dividend:
   591                           	callstack 0
   592   000005                     fputc@c:
   593                           	callstack 0
   594   000005                     
   595                           ; 1 bytes @ 0x4
   596   000005                     	ds	1
   597   000006                     Lcd_Write_Char@temp:
   598                           	callstack 0
   599   000006                     ??_Lcd_Cmd:
   600   000006                     
   601                           ; 1 bytes @ 0x5
   602   000006                     	ds	1
   603   000007                     Lcd_Cmd@a:
   604                           	callstack 0
   605   000007                     Lcd_Write_Char@y:
   606                           	callstack 0
   607   000007                     fputc@fp:
   608                           	callstack 0
   609   000007                     ___awdiv@divisor:
   610                           	callstack 0
   611   000007                     ___awmod@divisor:
   612                           	callstack 0
   613                           
   614                           ; 2 bytes @ 0x6
   615   000007                     	ds	1
   616   000008                     Lcd_Set_Cursor@b:
   617                           	callstack 0
   618   000008                     Lcd_Write_Char@a:
   619                           	callstack 0
   620   000008                     ??_Lcd_Init:
   621   000008                     ??_fputc:
   622   000008                     
   623                           ; 1 bytes @ 0x7
   624   000008                     	ds	1
   625   000009                     Lcd_Set_Cursor@a:
   626                           	callstack 0
   627   000009                     ___awdiv@counter:
   628                           	callstack 0
   629   000009                     ___awmod@counter:
   630                           	callstack 0
   631   000009                     Lcd_Write_String@a:
   632                           	callstack 0
   633   000009                     
   634                           ; 1 bytes @ 0x8
   635   000009                     	ds	1
   636   00000A                     Lcd_Set_Cursor@z:
   637                           	callstack 0
   638   00000A                     ___awdiv@sign:
   639                           	callstack 0
   640   00000A                     ___awmod@sign:
   641                           	callstack 0
   642                           
   643                           ; 1 bytes @ 0x9
   644   00000A                     	ds	1
   645   00000B                     ?_abs:
   646                           	callstack 0
   647   00000B                     Lcd_Set_Cursor@y:
   648                           	callstack 0
   649   00000B                     ___awdiv@quotient:
   650                           	callstack 0
   651   00000B                     abs@a:
   652                           	callstack 0
   653   00000B                     ??_Lcd_Write_String:
   654                           
   655                           ; 1 bytes @ 0xA
   656   00000B                     	ds	1
   657   00000C                     Lcd_Set_Cursor@temp:
   658                           	callstack 0
   659                           
   660                           ; 1 bytes @ 0xB
   661   00000C                     	ds	1
   662   00000D                     Lcd_Write_String@i:
   663                           	callstack 0
   664   00000D                     ??_abs:
   665                           
   666                           ; 1 bytes @ 0xC
   667   00000D                     	ds	2
   668   00000F                     vfpfcnvrt@fp:
   669                           	callstack 0
   670                           
   671                           ; 1 bytes @ 0xE
   672   00000F                     	ds	1
   673   000010                     vfpfcnvrt@fmt:
   674                           	callstack 0
   675                           
   676                           ; 1 bytes @ 0xF
   677   000010                     	ds	1
   678   000011                     vfpfcnvrt@ap:
   679                           	callstack 0
   680                           
   681                           ; 1 bytes @ 0x10
   682   000011                     	ds	1
   683   000012                     ??_vfpfcnvrt:
   684                           
   685                           ; 1 bytes @ 0x11
   686   000012                     	ds	1
   687   000013                     vfpfcnvrt@done:
   688                           	callstack 0
   689                           
   690                           ; 1 bytes @ 0x12
   691   000013                     	ds	1
   692   000014                     vfpfcnvrt@cp:
   693                           	callstack 0
   694                           
   695                           ; 1 bytes @ 0x13
   696   000014                     	ds	1
   697   000015                     vfpfcnvrt@convarg:
   698                           	callstack 0
   699                           
   700                           ; 4 bytes @ 0x14
   701   000015                     	ds	4
   702   000019                     vfpfcnvrt@c:
   703                           	callstack 0
   704                           
   705                           ; 1 bytes @ 0x18
   706   000019                     	ds	1
   707   00001A                     ?_vfprintf:
   708                           	callstack 0
   709   00001A                     vfprintf@fp:
   710                           	callstack 0
   711                           
   712                           ; 1 bytes @ 0x19
   713   00001A                     	ds	1
   714   00001B                     vfprintf@fmt:
   715                           	callstack 0
   716                           
   717                           ; 1 bytes @ 0x1A
   718   00001B                     	ds	1
   719   00001C                     vfprintf@ap:
   720                           	callstack 0
   721                           
   722                           ; 1 bytes @ 0x1B
   723   00001C                     	ds	1
   724   00001D                     vfprintf@cfmt:
   725                           	callstack 0
   726   00001D                     
   727                           ; 1 bytes @ 0x1C
   728   00001D                     	ds	1
   729   00001E                     ?_sprintf:
   730                           	callstack 0
   731   00001E                     sprintf@s:
   732                           	callstack 0
   733                           
   734                           ; 1 bytes @ 0x1D
   735   00001E                     	ds	1
   736   00001F                     sprintf@fmt:
   737                           	callstack 0
   738                           
   739                           ; 1 bytes @ 0x1E
   740   00001F                     	ds	3
   741   000022                     sprintf@ap:
   742                           	callstack 0
   743   000022                     
   744                           ; 1 bytes @ 0x21
   745   000022                     	ds	1
   746   000023                     sprintf@f:
   747                           	callstack 0
   748                           
   749                           ; 11 bytes @ 0x22
   750   000023                     	ds	11
   751   00002E                     mostrar_variable@x:
   752                           	callstack 0
   753                           
   754                           ; 2 bytes @ 0x2D
   755   00002E                     	ds	2
   756   000030                     mostrar_variable@buffer:
   757                           	callstack 0
   758   000030                     
   759                           ; 1 bytes @ 0x2F
   760   000030                     	ds	20
   761   000044                     ??_main:
   762                           
   763                           ; 1 bytes @ 0x43
   764   000044                     	ds	2
   765   000046                     main@giro:
   766                           	callstack 0
   767                           
   768                           ; 2 bytes @ 0x45
   769   000046                     	ds	2
   770                           
   771 ;;
   772 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   773 ;;
   774 ;; *************** function _main *****************
   775 ;; Defined at:
   776 ;;		line 117 in file "Cinta.c"
   777 ;; Parameters:    Size  Location     Type
   778 ;;		None
   779 ;; Auto vars:     Size  Location     Type
   780 ;;  giro            2   69[COMRAM] int 
   781 ;; Return value:  Size  Location     Type
   782 ;;                  1    wreg      void 
   783 ;; Registers used:
   784 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   785 ;; Tracked objects:
   786 ;;		On entry : 0/0
   787 ;;		On exit  : 0/0
   788 ;;		Unchanged: 0/0
   789 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   790 ;;      Params:         0       0       0       0       0       0       0       0       0
   791 ;;      Locals:         2       0       0       0       0       0       0       0       0
   792 ;;      Temps:          2       0       0       0       0       0       0       0       0
   793 ;;      Totals:         4       0       0       0       0       0       0       0       0
   794 ;;Total ram usage:        4 bytes
   795 ;; Hardware stack levels required when called: 9
   796 ;; This function calls:
   797 ;;		_Lcd_Cmd
   798 ;;		_Lcd_Init
   799 ;;		_init_int
   800 ;;		_init_maqueta
   801 ;;		_init_ports
   802 ;;		_mostrar_conteo
   803 ;; This function is called by:
   804 ;;		Startup code after reset
   805 ;; This function uses a non-reentrant model
   806 ;;
   807                           
   808                           	psect	text0
   809   0009CE                     __ptext0:
   810                           	callstack 0
   811   0009CE                     _main:
   812                           	callstack 22
   813   0009CE                     
   814                           ;Cinta.c: 118:     int giro=0;
   815   0009CE  0E00               	movlw	0
   816   0009D0  6E47               	movwf	(main@giro+1)^0,c
   817   0009D2  0E00               	movlw	0
   818   0009D4  6E46               	movwf	main@giro^0,c
   819   0009D6                     
   820                           ;Cinta.c: 119:     init_int();
   821   0009D6  ECE0  F008         	call	_init_int	;wreg free
   822                           
   823                           ;Cinta.c: 120:     init_ports();
   824   0009DA  ECD5  F008         	call	_init_ports	;wreg free
   825                           
   826                           ;Cinta.c: 121:     Lcd_Init();
   827   0009DE  EC33  F007         	call	_Lcd_Init	;wreg free
   828                           
   829                           ;Cinta.c: 122:     Lcd_Cmd(0x00);
   830   0009E2  0E00               	movlw	0
   831   0009E4  ECC5  F008         	call	_Lcd_Cmd
   832   0009E8                     
   833                           ;Cinta.c: 123:     _delay((unsigned long)((10)*(4000000/4000.0)));
   834   0009E8  0E0D               	movlw	13
   835   0009EA  6E44               	movwf	??_main^0,c
   836   0009EC  0EFC               	movlw	252
   837   0009EE                     u1187:
   838   0009EE  2EE8               	decfsz	wreg,f,c
   839   0009F0  D7FE               	bra	u1187
   840   0009F2  2E44               	decfsz	??_main^0,f,c
   841   0009F4  D7FC               	bra	u1187
   842   0009F6                     
   843                           ;Cinta.c: 124:     Lcd_Cmd(0x0E);
   844   0009F6  0E0E               	movlw	14
   845   0009F8  ECC5  F008         	call	_Lcd_Cmd
   846   0009FC                     
   847                           ;Cinta.c: 125:     mostrar_conteo();
   848   0009FC  EC12  F008         	call	_mostrar_conteo	;wreg free
   849   000A00                     
   850                           ;Cinta.c: 126:     init_maqueta();
   851   000A00  ECB3  F007         	call	_init_maqueta	;wreg free
   852   000A04                     l98:
   853   000A04  A081               	btfss	129,0,c	;volatile
   854   000A06  EF07  F005         	goto	u1051
   855   000A0A  EF09  F005         	goto	u1050
   856   000A0E                     u1051:
   857   000A0E  EF02  F005         	goto	l98
   858   000A12                     u1050:
   859   000A12                     
   860                           ;Cinta.c: 128:     LATEbits.LATE1=1;
   861   000A12  828D               	bsf	141,1,c	;volatile
   862   000A14                     l101:
   863   000A14  A281               	btfss	129,1,c	;volatile
   864   000A16  EF0F  F005         	goto	u1061
   865   000A1A  EF11  F005         	goto	u1060
   866   000A1E                     u1061:
   867   000A1E  EF0A  F005         	goto	l101
   868   000A22                     u1060:
   869   000A22                     
   870                           ;Cinta.c: 130:     LATEbits.LATE1=0;
   871   000A22  928D               	bcf	141,1,c	;volatile
   872                           
   873                           ;Cinta.c: 131:     LATEbits.LATE2=1;
   874   000A24  848D               	bsf	141,2,c	;volatile
   875   000A26                     l104:
   876   000A26  A681               	btfss	129,3,c	;volatile
   877   000A28  EF18  F005         	goto	u1071
   878   000A2C  EF1A  F005         	goto	u1070
   879   000A30                     u1071:
   880   000A30  EF13  F005         	goto	l104
   881   000A34                     u1070:
   882   000A34                     
   883                           ;Cinta.c: 133:     LATEbits.LATE2=0;
   884   000A34  948D               	bcf	141,2,c	;volatile
   885   000A36                     
   886                           ;Cinta.c: 134:     _delay((unsigned long)((1500)*(4000000/4000.0)));
   887   000A36  0E08               	movlw	8
   888   000A38  6E45               	movwf	(??_main+1)^0,c
   889   000A3A  0E9D               	movlw	157
   890   000A3C  6E44               	movwf	??_main^0,c
   891   000A3E  0E06               	movlw	6
   892   000A40                     u1197:
   893   000A40  2EE8               	decfsz	wreg,f,c
   894   000A42  D7FE               	bra	u1197
   895   000A44  2E44               	decfsz	??_main^0,f,c
   896   000A46  D7FC               	bra	u1197
   897   000A48  2E45               	decfsz	(??_main+1)^0,f,c
   898   000A4A  D7FA               	bra	u1197
   899   000A4C                     
   900                           ;Cinta.c: 135:     LATAbits.LA1=1;
   901   000A4C  8289               	bsf	137,1,c	;volatile
   902                           
   903                           ;Cinta.c: 136:     _delay((unsigned long)((1000)*(4000000/4000.0)));
   904   000A4E  0E06               	movlw	6
   905   000A50  6E45               	movwf	(??_main+1)^0,c
   906   000A52  0E13               	movlw	19
   907   000A54  6E44               	movwf	??_main^0,c
   908   000A56  0EAE               	movlw	174
   909   000A58                     u1207:
   910   000A58  2EE8               	decfsz	wreg,f,c
   911   000A5A  D7FE               	bra	u1207
   912   000A5C  2E44               	decfsz	??_main^0,f,c
   913   000A5E  D7FC               	bra	u1207
   914   000A60  2E45               	decfsz	(??_main+1)^0,f,c
   915   000A62  D7FA               	bra	u1207
   916   000A64                     
   917                           ;Cinta.c: 137:     LATAbits.LA2=1;
   918   000A64  8489               	bsf	137,2,c	;volatile
   919   000A66                     l107:
   920   000A66  A282               	btfss	130,1,c	;volatile
   921   000A68  EF38  F005         	goto	u1081
   922   000A6C  EF3A  F005         	goto	u1080
   923   000A70                     u1081:
   924   000A70  EF33  F005         	goto	l107
   925   000A74                     u1080:
   926   000A74                     
   927                           ;Cinta.c: 139:     LATAbits.LA1=0;
   928   000A74  9289               	bcf	137,1,c	;volatile
   929   000A76                     l110:
   930   000A76  A881               	btfss	129,4,c	;volatile
   931   000A78  EF40  F005         	goto	u1091
   932   000A7C  EF42  F005         	goto	u1090
   933   000A80                     u1091:
   934   000A80  EF3B  F005         	goto	l110
   935   000A84                     u1090:
   936   000A84                     
   937                           ;Cinta.c: 141:     LATAbits.LA0=1;
   938   000A84  8089               	bsf	137,0,c	;volatile
   939   000A86                     l113:
   940   000A86  A481               	btfss	129,2,c	;volatile
   941   000A88  EF48  F005         	goto	u1101
   942   000A8C  EF4A  F005         	goto	u1100
   943   000A90                     u1101:
   944   000A90  EF43  F005         	goto	l113
   945   000A94                     u1100:
   946   000A94                     
   947                           ;Cinta.c: 143:     LATAbits.LA1=1;
   948   000A94  8289               	bsf	137,1,c	;volatile
   949                           
   950                           ;Cinta.c: 144:     LATAbits.LA0=0;
   951   000A96  9089               	bcf	137,0,c	;volatile
   952   000A98                     
   953                           ;Cinta.c: 145:     _delay((unsigned long)((2000)*(4000000/4000.0)));
   954   000A98  0E0B               	movlw	11
   955   000A9A  6E45               	movwf	(??_main+1)^0,c
   956   000A9C  0E26               	movlw	38
   957   000A9E  6E44               	movwf	??_main^0,c
   958   000AA0  0E5E               	movlw	94
   959   000AA2                     u1217:
   960   000AA2  2EE8               	decfsz	wreg,f,c
   961   000AA4  D7FE               	bra	u1217
   962   000AA6  2E44               	decfsz	??_main^0,f,c
   963   000AA8  D7FC               	bra	u1217
   964   000AAA  2E45               	decfsz	(??_main+1)^0,f,c
   965   000AAC  D7FA               	bra	u1217
   966   000AAE                     
   967                           ;Cinta.c: 146:     LATAbits.LA2=0;
   968   000AAE  9489               	bcf	137,2,c	;volatile
   969   000AB0                     l116:
   970   000AB0  B282               	btfsc	130,1,c	;volatile
   971   000AB2  EF5D  F005         	goto	u1111
   972   000AB6  EF5F  F005         	goto	u1110
   973   000ABA                     u1111:
   974   000ABA  EF58  F005         	goto	l116
   975   000ABE                     u1110:
   976   000ABE                     
   977                           ;Cinta.c: 148:     LATAbits.LA1=0;
   978   000ABE  9289               	bcf	137,1,c	;volatile
   979   000AC0                     l119:
   980   000AC0  A881               	btfss	129,4,c	;volatile
   981   000AC2  EF65  F005         	goto	u1121
   982   000AC6  EF67  F005         	goto	u1120
   983   000ACA                     u1121:
   984   000ACA  EF60  F005         	goto	l119
   985   000ACE                     u1120:
   986   000ACE                     
   987                           ;Cinta.c: 150:     LATAbits.LA3=1;
   988   000ACE  8689               	bsf	137,3,c	;volatile
   989   000AD0                     
   990                           ;Cinta.c: 151:     _delay((unsigned long)((50)*(4000000/4000.0)));
   991   000AD0  0E41               	movlw	65
   992   000AD2  6E44               	movwf	??_main^0,c
   993   000AD4  0EEE               	movlw	238
   994   000AD6                     u1227:
   995   000AD6  2EE8               	decfsz	wreg,f,c
   996   000AD8  D7FE               	bra	u1227
   997   000ADA  2E44               	decfsz	??_main^0,f,c
   998   000ADC  D7FC               	bra	u1227
   999   000ADE  D000               	nop2	
  1000                           
  1001                           ;Cinta.c: 152:     while (giro < 2) {
  1002   000AE0  EF82  F005         	goto	l1746
  1003   000AE4                     l124:
  1004   000AE4  B082               	btfsc	130,0,c	;volatile
  1005   000AE6  EF77  F005         	goto	u1131
  1006   000AEA  EF79  F005         	goto	u1130
  1007   000AEE                     u1131:
  1008   000AEE  EF72  F005         	goto	l124
  1009   000AF2                     u1130:
  1010   000AF2                     l127:
  1011   000AF2  A082               	btfss	130,0,c	;volatile
  1012   000AF4  EF7E  F005         	goto	u1141
  1013   000AF8  EF80  F005         	goto	u1140
  1014   000AFC                     u1141:
  1015   000AFC  EF79  F005         	goto	l127
  1016   000B00                     u1140:
  1017   000B00                     
  1018                           ;Cinta.c: 155:         giro++;
  1019   000B00  4A46               	infsnz	main@giro^0,f,c
  1020   000B02  2A47               	incf	(main@giro+1)^0,f,c
  1021   000B04                     l1746:
  1022                           
  1023                           ;Cinta.c: 152:     while (giro < 2) {
  1024   000B04  BE47               	btfsc	(main@giro+1)^0,7,c
  1025   000B06  EF8E  F005         	goto	u1151
  1026   000B0A  5047               	movf	(main@giro+1)^0,w,c
  1027   000B0C  E109               	bnz	u1150
  1028   000B0E  0E02               	movlw	2
  1029   000B10  5C46               	subwf	main@giro^0,w,c
  1030   000B12  A0D8               	btfss	status,0,c
  1031   000B14  EF8E  F005         	goto	u1151
  1032   000B18  EF90  F005         	goto	u1150
  1033   000B1C                     u1151:
  1034   000B1C  EF72  F005         	goto	l124
  1035   000B20                     u1150:
  1036   000B20                     
  1037                           ;Cinta.c: 157:     LATAbits.LA3=0;
  1038   000B20  9689               	bcf	137,3,c	;volatile
  1039                           
  1040                           ;Cinta.c: 158:     LATAbits.LA4=1;
  1041   000B22  8889               	bsf	137,4,c	;volatile
  1042   000B24                     l131:
  1043   000B24  A482               	btfss	130,2,c	;volatile
  1044   000B26  EF97  F005         	goto	u1161
  1045   000B2A  EF99  F005         	goto	u1160
  1046   000B2E                     u1161:
  1047   000B2E  EF92  F005         	goto	l131
  1048   000B32                     u1160:
  1049   000B32                     
  1050                           ;Cinta.c: 160:     LATAbits.LA4=0;
  1051   000B32  9889               	bcf	137,4,c	;volatile
  1052                           
  1053                           ;Cinta.c: 161:     LATAbits.LA6=1;
  1054   000B34  8C89               	bsf	137,6,c	;volatile
  1055   000B36                     
  1056                           ;Cinta.c: 162:     _delay((unsigned long)((2000)*(4000000/4000.0)));
  1057   000B36  0E0B               	movlw	11
  1058   000B38  6E45               	movwf	(??_main+1)^0,c
  1059   000B3A  0E26               	movlw	38
  1060   000B3C  6E44               	movwf	??_main^0,c
  1061   000B3E  0E5E               	movlw	94
  1062   000B40                     u1237:
  1063   000B40  2EE8               	decfsz	wreg,f,c
  1064   000B42  D7FE               	bra	u1237
  1065   000B44  2E44               	decfsz	??_main^0,f,c
  1066   000B46  D7FC               	bra	u1237
  1067   000B48  2E45               	decfsz	(??_main+1)^0,f,c
  1068   000B4A  D7FA               	bra	u1237
  1069   000B4C                     
  1070                           ;Cinta.c: 163:     LATAbits.LA5=1;
  1071   000B4C  8A89               	bsf	137,5,c	;volatile
  1072   000B4E                     l134:
  1073   000B4E  AC82               	btfss	130,6,c	;volatile
  1074   000B50  EFAC  F005         	goto	u1171
  1075   000B54  EFAE  F005         	goto	u1170
  1076   000B58                     u1171:
  1077   000B58  EFA7  F005         	goto	l134
  1078   000B5C                     u1170:
  1079   000B5C                     
  1080                           ;Cinta.c: 165:     LATAbits.LA5=0;
  1081   000B5C  9A89               	bcf	137,5,c	;volatile
  1082   000B5E                     
  1083                           ;Cinta.c: 166:     _delay((unsigned long)((500)*(4000000/4000.0)));
  1084   000B5E  0E03               	movlw	3
  1085   000B60  6E45               	movwf	(??_main+1)^0,c
  1086   000B62  0E8A               	movlw	138
  1087   000B64  6E44               	movwf	??_main^0,c
  1088   000B66  0E56               	movlw	86
  1089   000B68                     u1247:
  1090   000B68  2EE8               	decfsz	wreg,f,c
  1091   000B6A  D7FE               	bra	u1247
  1092   000B6C  2E44               	decfsz	??_main^0,f,c
  1093   000B6E  D7FC               	bra	u1247
  1094   000B70  2E45               	decfsz	(??_main+1)^0,f,c
  1095   000B72  D7FA               	bra	u1247
  1096   000B74                     
  1097                           ;Cinta.c: 167:     LATAbits.LA6=0;
  1098   000B74  9C89               	bcf	137,6,c	;volatile
  1099   000B76  EF38  F000         	goto	start
  1100   000B7A                     __end_of_main:
  1101                           	callstack 0
  1102                           
  1103 ;; *************** function _mostrar_conteo *****************
  1104 ;; Defined at:
  1105 ;;		line 84 in file "Cinta.c"
  1106 ;; Parameters:    Size  Location     Type
  1107 ;;		None
  1108 ;; Auto vars:     Size  Location     Type
  1109 ;;		None
  1110 ;; Return value:  Size  Location     Type
  1111 ;;                  1    wreg      void 
  1112 ;; Registers used:
  1113 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1114 ;; Tracked objects:
  1115 ;;		On entry : 0/0
  1116 ;;		On exit  : 0/0
  1117 ;;		Unchanged: 0/0
  1118 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1119 ;;      Params:         0       0       0       0       0       0       0       0       0
  1120 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1121 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1122 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1123 ;;Total ram usage:        0 bytes
  1124 ;; Hardware stack levels used: 1
  1125 ;; Hardware stack levels required when called: 8
  1126 ;; This function calls:
  1127 ;;		_Lcd_Set_Cursor
  1128 ;;		_Lcd_Write_String
  1129 ;;		_mostrar_variable
  1130 ;; This function is called by:
  1131 ;;		_main
  1132 ;; This function uses a non-reentrant model
  1133 ;;
  1134                           
  1135                           	psect	text1
  1136   001024                     __ptext1:
  1137                           	callstack 0
  1138   001024                     _mostrar_conteo:
  1139                           	callstack 22
  1140   001024                     
  1141                           ;Cinta.c: 85:     Lcd_Write_String("Modulo");
  1142   001024  0E0A               	movlw	low STR_2
  1143   001026  6E09               	movwf	Lcd_Write_String@a^0,c
  1144   001028  5009               	movf	Lcd_Write_String@a^0,w,c
  1145   00102A  A4D8               	btfss	status,2,c
  1146   00102C  0E08               	movlw	high __smallconst
  1147   00102E  6E0A               	movwf	(Lcd_Write_String@a+1)^0,c
  1148   001030  EC74  F007         	call	_Lcd_Write_String	;wreg free
  1149   001034                     
  1150                           ;Cinta.c: 86:     Lcd_Set_Cursor(2,1);
  1151   001034  0E01               	movlw	1
  1152   001036  6E08               	movwf	Lcd_Set_Cursor@b^0,c
  1153   001038  0E02               	movlw	2
  1154   00103A  ECBD  F005         	call	_Lcd_Set_Cursor
  1155   00103E                     
  1156                           ;Cinta.c: 87:     Lcd_Write_String("Blancas=");
  1157   00103E  0E01               	movlw	low STR_3
  1158   001040  6E09               	movwf	Lcd_Write_String@a^0,c
  1159   001042  5009               	movf	Lcd_Write_String@a^0,w,c
  1160   001044  A4D8               	btfss	status,2,c
  1161   001046  0E08               	movlw	high __smallconst
  1162   001048  6E0A               	movwf	(Lcd_Write_String@a+1)^0,c
  1163   00104A  EC74  F007         	call	_Lcd_Write_String	;wreg free
  1164   00104E                     
  1165                           ;Cinta.c: 88:     mostrar_variable(blanca);
  1166   00104E  0E00               	movlw	0
  1167   001050  6E2F               	movwf	(mostrar_variable@x+1)^0,c
  1168   001052  0E00               	movlw	0
  1169   001054  6E2E               	movwf	mostrar_variable@x^0,c
  1170   001056  ECB5  F008         	call	_mostrar_variable	;wreg free
  1171   00105A                     
  1172                           ;Cinta.c: 89:     Lcd_Set_Cursor(3,0);
  1173   00105A  0E00               	movlw	0
  1174   00105C  6E08               	movwf	Lcd_Set_Cursor@b^0,c
  1175   00105E  0E03               	movlw	3
  1176   001060  ECBD  F005         	call	_Lcd_Set_Cursor
  1177   001064  0012               	return		;funcret
  1178   001066                     __end_of_mostrar_conteo:
  1179                           	callstack 0
  1180                           
  1181 ;; *************** function _mostrar_variable *****************
  1182 ;; Defined at:
  1183 ;;		line 41 in file "Cinta.c"
  1184 ;; Parameters:    Size  Location     Type
  1185 ;;  x               2   45[COMRAM] int 
  1186 ;; Auto vars:     Size  Location     Type
  1187 ;;  buffer         20   47[COMRAM] unsigned char [20]
  1188 ;; Return value:  Size  Location     Type
  1189 ;;                  1    wreg      void 
  1190 ;; Registers used:
  1191 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1192 ;; Tracked objects:
  1193 ;;		On entry : 0/0
  1194 ;;		On exit  : 0/0
  1195 ;;		Unchanged: 0/0
  1196 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1197 ;;      Params:         2       0       0       0       0       0       0       0       0
  1198 ;;      Locals:        20       0       0       0       0       0       0       0       0
  1199 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1200 ;;      Totals:        22       0       0       0       0       0       0       0       0
  1201 ;;Total ram usage:       22 bytes
  1202 ;; Hardware stack levels used: 1
  1203 ;; Hardware stack levels required when called: 7
  1204 ;; This function calls:
  1205 ;;		_Lcd_Write_String
  1206 ;;		_sprintf
  1207 ;; This function is called by:
  1208 ;;		_mostrar_conteo
  1209 ;; This function uses a non-reentrant model
  1210 ;;
  1211                           
  1212                           	psect	text2
  1213   00116A                     __ptext2:
  1214                           	callstack 0
  1215   00116A                     _mostrar_variable:
  1216                           	callstack 22
  1217   00116A                     
  1218                           ;Cinta.c: 42:     char buffer[20];;Cinta.c: 43:      sprintf(buffer,"%d",x);
  1219   00116A  0E30               	movlw	low mostrar_variable@buffer
  1220   00116C  6E1E               	movwf	sprintf@s^0,c
  1221   00116E  0E11               	movlw	low STR_1
  1222   001170  6E1F               	movwf	sprintf@fmt^0,c
  1223   001172  C02E  F020         	movff	mostrar_variable@x,?_sprintf+2
  1224   001176  C02F  F021         	movff	mostrar_variable@x+1,?_sprintf+3
  1225   00117A  EC6E  F008         	call	_sprintf	;wreg free
  1226   00117E                     
  1227                           ;Cinta.c: 44:     Lcd_Write_String(buffer);
  1228   00117E  0E30               	movlw	low mostrar_variable@buffer
  1229   001180  6E09               	movwf	Lcd_Write_String@a^0,c
  1230   001182  6A0A               	clrf	(Lcd_Write_String@a+1)^0,c
  1231   001184  EC74  F007         	call	_Lcd_Write_String	;wreg free
  1232   001188  0012               	return		;funcret
  1233   00118A                     __end_of_mostrar_variable:
  1234                           	callstack 0
  1235                           
  1236 ;; *************** function _sprintf *****************
  1237 ;; Defined at:
  1238 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\nf_sprintf.c"
  1239 ;; Parameters:    Size  Location     Type
  1240 ;;  s               1   29[COMRAM] PTR unsigned char 
  1241 ;;		 -> mostrar_variable@buffer(20), 
  1242 ;;  fmt             1   30[COMRAM] PTR const unsigned char 
  1243 ;;		 -> STR_1(3), 
  1244 ;; Auto vars:     Size  Location     Type
  1245 ;;  f              11   34[COMRAM] struct _IO_FILE
  1246 ;;  ret             2    0        int 
  1247 ;;  ap              1   33[COMRAM] PTR void [1]
  1248 ;;		 -> ?_sprintf(2), 
  1249 ;; Return value:  Size  Location     Type
  1250 ;;                  2   29[COMRAM] int 
  1251 ;; Registers used:
  1252 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1253 ;; Tracked objects:
  1254 ;;		On entry : 0/0
  1255 ;;		On exit  : 0/0
  1256 ;;		Unchanged: 0/0
  1257 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1258 ;;      Params:         4       0       0       0       0       0       0       0       0
  1259 ;;      Locals:        12       0       0       0       0       0       0       0       0
  1260 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1261 ;;      Totals:        16       0       0       0       0       0       0       0       0
  1262 ;;Total ram usage:       16 bytes
  1263 ;; Hardware stack levels used: 1
  1264 ;; Hardware stack levels required when called: 6
  1265 ;; This function calls:
  1266 ;;		_vfprintf
  1267 ;; This function is called by:
  1268 ;;		_mostrar_variable
  1269 ;; This function uses a non-reentrant model
  1270 ;;
  1271                           
  1272                           	psect	text3
  1273   0010DC                     __ptext3:
  1274                           	callstack 0
  1275   0010DC                     _sprintf:
  1276                           	callstack 22
  1277   0010DC  0E20               	movlw	low (?_sprintf+2)
  1278   0010DE  6E22               	movwf	sprintf@ap^0,c
  1279   0010E0  C01E  F023         	movff	sprintf@s,sprintf@f
  1280   0010E4  0E00               	movlw	0
  1281   0010E6  6E26               	movwf	(sprintf@f+3)^0,c
  1282   0010E8  0E00               	movlw	0
  1283   0010EA  6E25               	movwf	(sprintf@f+2)^0,c
  1284   0010EC  0E00               	movlw	0
  1285   0010EE  6E2D               	movwf	(sprintf@f+10)^0,c
  1286   0010F0  0E00               	movlw	0
  1287   0010F2  6E2C               	movwf	(sprintf@f+9)^0,c
  1288   0010F4  0E23               	movlw	low sprintf@f
  1289   0010F6  6E1A               	movwf	vfprintf@fp^0,c
  1290   0010F8  C01F  F01B         	movff	sprintf@fmt,vfprintf@fmt
  1291   0010FC  0E22               	movlw	low sprintf@ap
  1292   0010FE  6E1C               	movwf	vfprintf@ap^0,c
  1293   001100  EC33  F008         	call	_vfprintf	;wreg free
  1294   001104  501E               	movf	sprintf@s^0,w,c
  1295   001106  2425               	addwf	(sprintf@f+2)^0,w,c
  1296   001108  6ED9               	movwf	fsr2l,c
  1297   00110A  6ADA               	clrf	fsr2h,c
  1298   00110C  6ADF               	clrf	indf2,c
  1299   00110E  0012               	return		;funcret
  1300   001110                     __end_of_sprintf:
  1301                           	callstack 0
  1302                           
  1303 ;; *************** function _vfprintf *****************
  1304 ;; Defined at:
  1305 ;;		line 1817 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c"
  1306 ;; Parameters:    Size  Location     Type
  1307 ;;  fp              1   25[COMRAM] PTR struct _IO_FILE
  1308 ;;		 -> sprintf@f(11), 
  1309 ;;  fmt             1   26[COMRAM] PTR const unsigned char 
  1310 ;;		 -> STR_1(3), 
  1311 ;;  ap              1   27[COMRAM] PTR PTR void 
  1312 ;;		 -> sprintf@ap(1), 
  1313 ;; Auto vars:     Size  Location     Type
  1314 ;;  cfmt            1   28[COMRAM] PTR unsigned char 
  1315 ;;		 -> STR_1(3), 
  1316 ;; Return value:  Size  Location     Type
  1317 ;;                  2   25[COMRAM] int 
  1318 ;; Registers used:
  1319 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1320 ;; Tracked objects:
  1321 ;;		On entry : 0/0
  1322 ;;		On exit  : 0/0
  1323 ;;		Unchanged: 0/0
  1324 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1325 ;;      Params:         3       0       0       0       0       0       0       0       0
  1326 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1327 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1328 ;;      Totals:         4       0       0       0       0       0       0       0       0
  1329 ;;Total ram usage:        4 bytes
  1330 ;; Hardware stack levels used: 1
  1331 ;; Hardware stack levels required when called: 5
  1332 ;; This function calls:
  1333 ;;		_vfpfcnvrt
  1334 ;; This function is called by:
  1335 ;;		_sprintf
  1336 ;; This function uses a non-reentrant model
  1337 ;;
  1338                           
  1339                           	psect	text4
  1340   001066                     __ptext4:
  1341                           	callstack 0
  1342   001066                     _vfprintf:
  1343                           	callstack 22
  1344   001066                     
  1345                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1817: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v3.00\pic\source
      +                          s\c99\common\doprnt.c: 1818: {;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\comm
      +                          on\doprnt.c: 1820:     char *cfmt;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\
      +                          common\doprnt.c: 1822:     cfmt = (char *)fmt;
  1346   001066  C01B  F01D         	movff	vfprintf@fmt,vfprintf@cfmt
  1347                           
  1348                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  1349   00106A  EF3F  F008         	goto	l1646
  1350   00106E                     l1644:
  1351                           
  1352                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1830:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  1353   00106E  C01A  F00F         	movff	vfprintf@fp,vfpfcnvrt@fp
  1354   001072  0E1D               	movlw	low vfprintf@cfmt
  1355   001074  6E10               	movwf	vfpfcnvrt@fmt^0,c
  1356   001076  C01C  F011         	movff	vfprintf@ap,vfpfcnvrt@ap
  1357   00107A  EC0B  F004         	call	_vfpfcnvrt	;wreg free
  1358   00107E                     l1646:
  1359                           
  1360                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  1361   00107E  C01D  FFF6         	movff	vfprintf@cfmt,tblptrl
  1362   001082                     	if	1	;There is more than 1 active tblptr byte
  1363   001082  0E08               	movlw	high __smallconst
  1364   001084  6EF7               	movwf	tblptrh,c
  1365   001086                     	endif
  1366   001086                     	if	0	;tblptru may be non-zero
  1367   001086                     	endif
  1368   001086                     	if	0	;tblptru may be non-zero
  1369   001086                     	endif
  1370   001086  0008               	tblrd		*
  1371   001088  50F5               	movf	tablat,w,c
  1372   00108A  0900               	iorlw	0
  1373   00108C  A4D8               	btfss	status,2,c
  1374   00108E  EF4B  F008         	goto	u971
  1375   001092  EF4D  F008         	goto	u970
  1376   001096                     u971:
  1377   001096  EF37  F008         	goto	l1644
  1378   00109A                     u970:
  1379   00109A                     
  1380                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1835:  return 0;
  1381   00109A  0E00               	movlw	0
  1382   00109C  6E1B               	movwf	(?_vfprintf+1)^0,c
  1383   00109E  0E00               	movlw	0
  1384   0010A0  6E1A               	movwf	?_vfprintf^0,c
  1385   0010A2  0012               	return		;funcret
  1386   0010A4                     __end_of_vfprintf:
  1387                           	callstack 0
  1388                           
  1389 ;; *************** function _vfpfcnvrt *****************
  1390 ;; Defined at:
  1391 ;;		line 1177 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c"
  1392 ;; Parameters:    Size  Location     Type
  1393 ;;  fp              1   14[COMRAM] PTR struct _IO_FILE
  1394 ;;		 -> sprintf@f(11), 
  1395 ;;  fmt             1   15[COMRAM] PTR PTR unsigned char 
  1396 ;;		 -> vfprintf@cfmt(1), 
  1397 ;;  ap              1   16[COMRAM] PTR PTR void 
  1398 ;;		 -> sprintf@ap(1), 
  1399 ;; Auto vars:     Size  Location     Type
  1400 ;;  convarg         4   20[COMRAM] struct .
  1401 ;;  c               1   24[COMRAM] unsigned char 
  1402 ;;  cp              1   19[COMRAM] PTR unsigned char 
  1403 ;;		 -> STR_1(3), 
  1404 ;;  done            1   18[COMRAM] _Bool 
  1405 ;; Return value:  Size  Location     Type
  1406 ;;                  1    wreg      void 
  1407 ;; Registers used:
  1408 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1409 ;; Tracked objects:
  1410 ;;		On entry : 0/0
  1411 ;;		On exit  : 0/0
  1412 ;;		Unchanged: 0/0
  1413 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1414 ;;      Params:         3       0       0       0       0       0       0       0       0
  1415 ;;      Locals:         7       0       0       0       0       0       0       0       0
  1416 ;;      Temps:          1       0       0       0       0       0       0       0       0
  1417 ;;      Totals:        11       0       0       0       0       0       0       0       0
  1418 ;;Total ram usage:       11 bytes
  1419 ;; Hardware stack levels used: 1
  1420 ;; Hardware stack levels required when called: 4
  1421 ;; This function calls:
  1422 ;;		___awdiv
  1423 ;;		___awmod
  1424 ;;		_abs
  1425 ;;		_fputc
  1426 ;; This function is called by:
  1427 ;;		_vfprintf
  1428 ;; This function uses a non-reentrant model
  1429 ;;
  1430                           
  1431                           	psect	text5
  1432   000816                     __ptext5:
  1433                           	callstack 0
  1434   000816                     _vfpfcnvrt:
  1435                           	callstack 22
  1436   000816                     
  1437                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1177: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\c
      +                          ommon\doprnt.c: 1178: {;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\dopr
      +                          nt.c: 1179:     char c, *cp;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common
      +                          \doprnt.c: 1180:     _Bool done;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\co
      +                          mmon\doprnt.c: 1188:  } convarg;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\co
      +                          mmon\doprnt.c: 1201:     if ((*fmt)[0] == '%') {
  1438   000816  5010               	movf	vfpfcnvrt@fmt^0,w,c
  1439   000818  6ED9               	movwf	fsr2l,c
  1440   00081A  6ADA               	clrf	fsr2h,c
  1441   00081C  CFDF FFF6          	movff	indf2,tblptrl
  1442   000820                     	if	1	;There is more than 1 active tblptr byte
  1443   000820  0E08               	movlw	high __smallconst
  1444   000822  6EF7               	movwf	tblptrh,c
  1445   000824                     	endif
  1446   000824                     	if	0	;tblptru may be non-zero
  1447   000824                     	endif
  1448   000824                     	if	0	;tblptru may be non-zero
  1449   000824                     	endif
  1450   000824  0008               	tblrd		*
  1451   000826  50F5               	movf	tablat,w,c
  1452   000828  0A25               	xorlw	37
  1453   00082A  A4D8               	btfss	status,2,c
  1454   00082C  EF1A  F004         	goto	u871
  1455   000830  EF1C  F004         	goto	u870
  1456   000834                     u871:
  1457   000834  EFD5  F004         	goto	l1636
  1458   000838                     u870:
  1459   000838                     
  1460                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1202:         ++*
      +                          fmt;
  1461   000838  5010               	movf	vfpfcnvrt@fmt^0,w,c
  1462   00083A  6ED9               	movwf	fsr2l,c
  1463   00083C  6ADA               	clrf	fsr2h,c
  1464   00083E  2ADF               	incf	indf2,f,c
  1465   000840                     
  1466                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1204:         fla
      +                          gs = width = 0;
  1467   000840  0E00               	movlw	0
  1468   000842  6E49               	movwf	(_width+1)^0,c
  1469   000844  0E00               	movlw	0
  1470   000846  6E48               	movwf	_width^0,c
  1471   000848  C048  F052         	movff	_width,_flags
  1472   00084C                     
  1473                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1205:         pre
      +                          c = -1;
  1474   00084C  684A               	setf	_prec^0,c
  1475   00084E  684B               	setf	(_prec+1)^0,c
  1476   000850                     
  1477                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1291:   cp = *fmt
      +                          ;
  1478   000850  5010               	movf	vfpfcnvrt@fmt^0,w,c
  1479   000852  6ED9               	movwf	fsr2l,c
  1480   000854  6ADA               	clrf	fsr2h,c
  1481   000856  50DF               	movf	indf2,w,c
  1482   000858  6E14               	movwf	vfpfcnvrt@cp^0,c
  1483   00085A                     
  1484                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1361:   if (*cp =
      +                          = 'd' || *cp == 'i') {
  1485   00085A  C014  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  1486   00085E                     	if	1	;There is more than 1 active tblptr byte
  1487   00085E  0E08               	movlw	high __smallconst
  1488   000860  6EF7               	movwf	tblptrh,c
  1489   000862                     	endif
  1490   000862                     	if	0	;tblptru may be non-zero
  1491   000862                     	endif
  1492   000862                     	if	0	;tblptru may be non-zero
  1493   000862                     	endif
  1494   000862  0008               	tblrd		*
  1495   000864  50F5               	movf	tablat,w,c
  1496   000866  0A64               	xorlw	100
  1497   000868  B4D8               	btfsc	status,2,c
  1498   00086A  EF39  F004         	goto	u881
  1499   00086E  EF3B  F004         	goto	u880
  1500   000872                     u881:
  1501   000872  EF49  F004         	goto	l1606
  1502   000876                     u880:
  1503   000876  C014  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  1504   00087A                     	if	1	;There is more than 1 active tblptr byte
  1505   00087A  0E08               	movlw	high __smallconst
  1506   00087C  6EF7               	movwf	tblptrh,c
  1507   00087E                     	endif
  1508   00087E                     	if	0	;tblptru may be non-zero
  1509   00087E                     	endif
  1510   00087E                     	if	0	;tblptru may be non-zero
  1511   00087E                     	endif
  1512   00087E  0008               	tblrd		*
  1513   000880  50F5               	movf	tablat,w,c
  1514   000882  0A69               	xorlw	105
  1515   000884  A4D8               	btfss	status,2,c
  1516   000886  EF47  F004         	goto	u891
  1517   00088A  EF49  F004         	goto	u890
  1518   00088E                     u891:
  1519   00088E  EFCF  F004         	goto	l1632
  1520   000892                     u890:
  1521   000892                     l1606:
  1522                           
  1523                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1404:    convarg.
      +                          sint = (vfpf_sint_t)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
  1524   000892  5011               	movf	vfpfcnvrt@ap^0,w,c
  1525   000894  6ED9               	movwf	fsr2l,c
  1526   000896  6ADA               	clrf	fsr2h,c
  1527   000898  0E02               	movlw	2
  1528   00089A  26DF               	addwf	indf2,f,c
  1529   00089C  5CDF               	subwf	indf2,w,c
  1530   00089E  6ED9               	movwf	fsr2l,c
  1531   0008A0  6ADA               	clrf	fsr2h,c
  1532   0008A2  CFDE F015          	movff	postinc2,vfpfcnvrt@convarg
  1533   0008A6  CFDE F016          	movff	postinc2,vfpfcnvrt@convarg+1
  1534   0008AA                     
  1535                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1406:    *fmt = c
      +                          p+1;
  1536   0008AA  5010               	movf	vfpfcnvrt@fmt^0,w,c
  1537   0008AC  6ED9               	movwf	fsr2l,c
  1538   0008AE  6ADA               	clrf	fsr2h,c
  1539   0008B0  2814               	incf	vfpfcnvrt@cp^0,w,c
  1540   0008B2  6EDF               	movwf	indf2,c
  1541   0008B4                     
  1542                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1408:    c = size
      +                          of(dbuf);
  1543   0008B4  0E20               	movlw	32
  1544   0008B6  6E19               	movwf	vfpfcnvrt@c^0,c
  1545                           
  1546                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1409:    done = c
      +                          onvarg.sint < 0;
  1547   0008B8  BE16               	btfsc	(vfpfcnvrt@convarg+1)^0,7,c
  1548   0008BA  EF61  F004         	goto	u901
  1549   0008BE  EF64  F004         	goto	u900
  1550   0008C2                     u901:
  1551   0008C2  0E01               	movlw	1
  1552   0008C4  EF65  F004         	goto	u910
  1553   0008C8                     u900:
  1554   0008C8  0E00               	movlw	0
  1555   0008CA                     u910:
  1556   0008CA  6E13               	movwf	vfpfcnvrt@done^0,c
  1557   0008CC                     l1612:
  1558                           
  1559                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1411:     dbuf[--
      +                          c] = abs(convarg.sint % 10) + '0';
  1560   0008CC  0619               	decf	vfpfcnvrt@c^0,f,c
  1561   0008CE  5019               	movf	vfpfcnvrt@c^0,w,c
  1562   0008D0  0F60               	addlw	low _dbuf
  1563   0008D2  6ED9               	movwf	fsr2l,c
  1564   0008D4  6ADA               	clrf	fsr2h,c
  1565   0008D6  C015  F005         	movff	vfpfcnvrt@convarg,___awmod@dividend
  1566   0008DA  C016  F006         	movff	vfpfcnvrt@convarg+1,___awmod@dividend+1
  1567   0008DE  0E00               	movlw	0
  1568   0008E0  6E08               	movwf	(___awmod@divisor+1)^0,c
  1569   0008E2  0E0A               	movlw	10
  1570   0008E4  6E07               	movwf	___awmod@divisor^0,c
  1571   0008E6  EC87  F006         	call	___awmod	;wreg free
  1572   0008EA  C005  F00B         	movff	?___awmod,abs@a
  1573   0008EE  C006  F00C         	movff	?___awmod+1,abs@a+1
  1574   0008F2  EC88  F008         	call	_abs	;wreg free
  1575   0008F6  500B               	movf	?_abs^0,w,c
  1576   0008F8  0F30               	addlw	48
  1577   0008FA  6EDF               	movwf	indf2,c
  1578   0008FC                     
  1579                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1412:     convarg
      +                          .sint /= 10;
  1580   0008FC  C015  F005         	movff	vfpfcnvrt@convarg,___awdiv@dividend
  1581   000900  C016  F006         	movff	vfpfcnvrt@convarg+1,___awdiv@dividend+1
  1582   000904  0E00               	movlw	0
  1583   000906  6E08               	movwf	(___awdiv@divisor+1)^0,c
  1584   000908  0E0A               	movlw	10
  1585   00090A  6E07               	movwf	___awdiv@divisor^0,c
  1586   00090C  EC26  F006         	call	___awdiv	;wreg free
  1587   000910  C005  F015         	movff	?___awdiv,vfpfcnvrt@convarg
  1588   000914  C006  F016         	movff	?___awdiv+1,vfpfcnvrt@convarg+1
  1589   000918                     
  1590                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1416:    } while 
      +                          (convarg.sint != 0 && c != 0);
  1591   000918  5015               	movf	vfpfcnvrt@convarg^0,w,c
  1592   00091A  1016               	iorwf	(vfpfcnvrt@convarg+1)^0,w,c
  1593   00091C  B4D8               	btfsc	status,2,c
  1594   00091E  EF93  F004         	goto	u921
  1595   000922  EF95  F004         	goto	u920
  1596   000926                     u921:
  1597   000926  EF9D  F004         	goto	l1620
  1598   00092A                     u920:
  1599   00092A  5019               	movf	vfpfcnvrt@c^0,w,c
  1600   00092C  A4D8               	btfss	status,2,c
  1601   00092E  EF9B  F004         	goto	u931
  1602   000932  EF9D  F004         	goto	u930
  1603   000936                     u931:
  1604   000936  EF66  F004         	goto	l1612
  1605   00093A                     u930:
  1606   00093A                     l1620:
  1607                           
  1608                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1417:    if (c !=
      +                           0 && done) {
  1609   00093A  5019               	movf	vfpfcnvrt@c^0,w,c
  1610   00093C  B4D8               	btfsc	status,2,c
  1611   00093E  EFA3  F004         	goto	u941
  1612   000942  EFA5  F004         	goto	u940
  1613   000946                     u941:
  1614   000946  EFC4  F004         	goto	l1630
  1615   00094A                     u940:
  1616   00094A  5013               	movf	vfpfcnvrt@done^0,w,c
  1617   00094C  B4D8               	btfsc	status,2,c
  1618   00094E  EFAB  F004         	goto	u951
  1619   000952  EFAD  F004         	goto	u950
  1620   000956                     u951:
  1621   000956  EFC4  F004         	goto	l1630
  1622   00095A                     u950:
  1623   00095A                     
  1624                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1418:     dbuf[--
      +                          c] = '-';
  1625   00095A  0619               	decf	vfpfcnvrt@c^0,f,c
  1626   00095C  5019               	movf	vfpfcnvrt@c^0,w,c
  1627   00095E  0F60               	addlw	low _dbuf
  1628   000960  6ED9               	movwf	fsr2l,c
  1629   000962  6ADA               	clrf	fsr2h,c
  1630   000964  0E2D               	movlw	45
  1631   000966  6EDF               	movwf	indf2,c
  1632   000968  EFC4  F004         	goto	l1630
  1633   00096C                     l1626:
  1634                           
  1635                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1424:     fputc(d
      +                          buf[c++], fp);
  1636   00096C  5019               	movf	vfpfcnvrt@c^0,w,c
  1637   00096E  0F60               	addlw	low _dbuf
  1638   000970  6ED9               	movwf	fsr2l,c
  1639   000972  6ADA               	clrf	fsr2h,c
  1640   000974  50DF               	movf	indf2,w,c
  1641   000976  6E12               	movwf	??_vfpfcnvrt^0,c
  1642   000978  5012               	movf	??_vfpfcnvrt^0,w,c
  1643   00097A  6E05               	movwf	fputc@c^0,c
  1644   00097C  6A06               	clrf	(fputc@c+1)^0,c
  1645   00097E  C00F  F007         	movff	vfpfcnvrt@fp,fputc@fp
  1646   000982  ECDE  F006         	call	_fputc	;wreg free
  1647   000986  2A19               	incf	vfpfcnvrt@c^0,f,c
  1648   000988                     l1630:
  1649                           
  1650                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1423:    while (c
      +                           != sizeof(dbuf)) {
  1651   000988  0E20               	movlw	32
  1652   00098A  1819               	xorwf	vfpfcnvrt@c^0,w,c
  1653   00098C  A4D8               	btfss	status,2,c
  1654   00098E  EFCB  F004         	goto	u961
  1655   000992  EFCD  F004         	goto	u960
  1656   000996                     u961:
  1657   000996  EFB6  F004         	goto	l1626
  1658   00099A                     u960:
  1659   00099A  EFE6  F004         	goto	l956
  1660   00099E                     l1632:
  1661                           
  1662                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1806:         ++*
      +                          fmt;
  1663   00099E  5010               	movf	vfpfcnvrt@fmt^0,w,c
  1664   0009A0  6ED9               	movwf	fsr2l,c
  1665   0009A2  6ADA               	clrf	fsr2h,c
  1666   0009A4  2ADF               	incf	indf2,f,c
  1667   0009A6  EFE6  F004         	goto	l956
  1668   0009AA                     l1636:
  1669                           
  1670                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1811:     fputc((
      +                          int)(*fmt)[0], fp);
  1671   0009AA  5010               	movf	vfpfcnvrt@fmt^0,w,c
  1672   0009AC  6ED9               	movwf	fsr2l,c
  1673   0009AE  6ADA               	clrf	fsr2h,c
  1674   0009B0  CFDF FFF6          	movff	indf2,tblptrl
  1675   0009B4                     	if	1	;There is more than 1 active tblptr byte
  1676   0009B4  0E08               	movlw	high __smallconst
  1677   0009B6  6EF7               	movwf	tblptrh,c
  1678   0009B8                     	endif
  1679   0009B8                     	if	0	;tblptru may be non-zero
  1680   0009B8                     	endif
  1681   0009B8                     	if	0	;tblptru may be non-zero
  1682   0009B8                     	endif
  1683   0009B8  0008               	tblrd		*
  1684   0009BA  50F5               	movf	tablat,w,c
  1685   0009BC  6E05               	movwf	fputc@c^0,c
  1686   0009BE  6A06               	clrf	(fputc@c+1)^0,c
  1687   0009C0  C00F  F007         	movff	vfpfcnvrt@fp,fputc@fp
  1688   0009C4  ECDE  F006         	call	_fputc	;wreg free
  1689   0009C8  EFCF  F004         	goto	l1632
  1690   0009CC                     l956:
  1691   0009CC  0012               	return		;funcret
  1692   0009CE                     __end_of_vfpfcnvrt:
  1693                           	callstack 0
  1694                           
  1695 ;; *************** function _fputc *****************
  1696 ;; Defined at:
  1697 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\nf_fputc.c"
  1698 ;; Parameters:    Size  Location     Type
  1699 ;;  c               2    4[COMRAM] int 
  1700 ;;  fp              1    6[COMRAM] PTR struct _IO_FILE
  1701 ;;		 -> sprintf@f(11), 
  1702 ;; Auto vars:     Size  Location     Type
  1703 ;;		None
  1704 ;; Return value:  Size  Location     Type
  1705 ;;                  2    4[COMRAM] int 
  1706 ;; Registers used:
  1707 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1708 ;; Tracked objects:
  1709 ;;		On entry : 0/0
  1710 ;;		On exit  : 0/0
  1711 ;;		Unchanged: 0/0
  1712 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1713 ;;      Params:         3       0       0       0       0       0       0       0       0
  1714 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1715 ;;      Temps:          5       0       0       0       0       0       0       0       0
  1716 ;;      Totals:         8       0       0       0       0       0       0       0       0
  1717 ;;Total ram usage:        8 bytes
  1718 ;; Hardware stack levels used: 1
  1719 ;; Hardware stack levels required when called: 3
  1720 ;; This function calls:
  1721 ;;		_putch
  1722 ;; This function is called by:
  1723 ;;		_vfpfcnvrt
  1724 ;; This function uses a non-reentrant model
  1725 ;;
  1726                           
  1727                           	psect	text6
  1728   000DBC                     __ptext6:
  1729                           	callstack 0
  1730   000DBC                     _fputc:
  1731                           	callstack 22
  1732   000DBC  5007               	movf	fputc@fp^0,w,c
  1733   000DBE  B4D8               	btfsc	status,2,c
  1734   000DC0  EFE4  F006         	goto	u821
  1735   000DC4  EFE6  F006         	goto	u820
  1736   000DC8                     u821:
  1737   000DC8  EFEE  F006         	goto	l1578
  1738   000DCC                     u820:
  1739   000DCC  5007               	movf	fputc@fp^0,w,c
  1740   000DCE  A4D8               	btfss	status,2,c
  1741   000DD0  EFEC  F006         	goto	u831
  1742   000DD4  EFEE  F006         	goto	u830
  1743   000DD8                     u831:
  1744   000DD8  EFF3  F006         	goto	l1580
  1745   000DDC                     u830:
  1746   000DDC                     l1578:
  1747   000DDC  5005               	movf	fputc@c^0,w,c
  1748   000DDE  ECF1  F008         	call	_putch
  1749   000DE2  EF32  F007         	goto	l981
  1750   000DE6                     l1580:
  1751   000DE6  5007               	movf	fputc@fp^0,w,c
  1752   000DE8  6ED9               	movwf	fsr2l,c
  1753   000DEA  6ADA               	clrf	fsr2h,c
  1754   000DEC  0E09               	movlw	9
  1755   000DEE  26D9               	addwf	fsr2l,f,c
  1756   000DF0  50DE               	movf	postinc2,w,c
  1757   000DF2  10DE               	iorwf	postinc2,w,c
  1758   000DF4  B4D8               	btfsc	status,2,c
  1759   000DF6  EFFF  F006         	goto	u841
  1760   000DFA  EF01  F007         	goto	u840
  1761   000DFE                     u841:
  1762   000DFE  EF1A  F007         	goto	l1584
  1763   000E02                     u840:
  1764   000E02  5007               	movf	fputc@fp^0,w,c
  1765   000E04  6ED9               	movwf	fsr2l,c
  1766   000E06  6ADA               	clrf	fsr2h,c
  1767   000E08  0E09               	movlw	9
  1768   000E0A  26D9               	addwf	fsr2l,f,c
  1769   000E0C  5007               	movf	fputc@fp^0,w,c
  1770   000E0E  6EE1               	movwf	fsr1l,c
  1771   000E10  6AE2               	clrf	fsr1h,c
  1772   000E12  0E02               	movlw	2
  1773   000E14  26E1               	addwf	fsr1l,f,c
  1774   000E16  50DE               	movf	postinc2,w,c
  1775   000E18  5CE6               	subwf	postinc1,w,c
  1776   000E1A  50E6               	movf	postinc1,w,c
  1777   000E1C  0A80               	xorlw	128
  1778   000E1E  6E0C               	movwf	(??_fputc+4)^0,c
  1779   000E20  50DE               	movf	postinc2,w,c
  1780   000E22  0A80               	xorlw	128
  1781   000E24  580C               	subwfb	(??_fputc+4)^0,w,c
  1782   000E26  B0D8               	btfsc	status,0,c
  1783   000E28  EF18  F007         	goto	u851
  1784   000E2C  EF1A  F007         	goto	u850
  1785   000E30                     u851:
  1786   000E30  EF32  F007         	goto	l981
  1787   000E34                     u850:
  1788   000E34                     l1584:
  1789   000E34  5007               	movf	fputc@fp^0,w,c
  1790   000E36  6ED9               	movwf	fsr2l,c
  1791   000E38  6ADA               	clrf	fsr2h,c
  1792   000E3A  0E02               	movlw	2
  1793   000E3C  26D9               	addwf	fsr2l,f,c
  1794   000E3E  50DF               	movf	indf2,w,c
  1795   000E40  6E08               	movwf	??_fputc^0,c
  1796   000E42  5007               	movf	fputc@fp^0,w,c
  1797   000E44  6ED9               	movwf	fsr2l,c
  1798   000E46  6ADA               	clrf	fsr2h,c
  1799   000E48  50DF               	movf	indf2,w,c
  1800   000E4A  2408               	addwf	??_fputc^0,w,c
  1801   000E4C  6ED9               	movwf	fsr2l,c
  1802   000E4E  6ADA               	clrf	fsr2h,c
  1803   000E50  C005  FFDF         	movff	fputc@c,indf2
  1804   000E54  5007               	movf	fputc@fp^0,w,c
  1805   000E56  6ED9               	movwf	fsr2l,c
  1806   000E58  6ADA               	clrf	fsr2h,c
  1807   000E5A  0E02               	movlw	2
  1808   000E5C  26D9               	addwf	fsr2l,f,c
  1809   000E5E  2ADE               	incf	postinc2,f,c
  1810   000E60  0E00               	movlw	0
  1811   000E62  22DD               	addwfc	postdec2,f,c
  1812   000E64                     l981:
  1813   000E64  0012               	return		;funcret
  1814   000E66                     __end_of_fputc:
  1815                           	callstack 0
  1816                           
  1817 ;; *************** function _putch *****************
  1818 ;; Defined at:
  1819 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\putch.c"
  1820 ;; Parameters:    Size  Location     Type
  1821 ;;  c               1    wreg     unsigned char 
  1822 ;; Auto vars:     Size  Location     Type
  1823 ;;  c               1    0[COMRAM] unsigned char 
  1824 ;; Return value:  Size  Location     Type
  1825 ;;                  1    wreg      void 
  1826 ;; Registers used:
  1827 ;;		wreg
  1828 ;; Tracked objects:
  1829 ;;		On entry : 0/0
  1830 ;;		On exit  : 0/0
  1831 ;;		Unchanged: 0/0
  1832 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1833 ;;      Params:         0       0       0       0       0       0       0       0       0
  1834 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1835 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1836 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1837 ;;Total ram usage:        0 bytes
  1838 ;; Hardware stack levels used: 1
  1839 ;; Hardware stack levels required when called: 2
  1840 ;; This function calls:
  1841 ;;		Nothing
  1842 ;; This function is called by:
  1843 ;;		_fputc
  1844 ;; This function uses a non-reentrant model
  1845 ;;
  1846                           
  1847                           	psect	text7
  1848   0011E2                     __ptext7:
  1849                           	callstack 0
  1850   0011E2                     _putch:
  1851                           	callstack 22
  1852   0011E2  0012               	return		;funcret
  1853   0011E4                     __end_of_putch:
  1854                           	callstack 0
  1855                           
  1856 ;; *************** function _abs *****************
  1857 ;; Defined at:
  1858 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\abs.c"
  1859 ;; Parameters:    Size  Location     Type
  1860 ;;  a               2   10[COMRAM] int 
  1861 ;; Auto vars:     Size  Location     Type
  1862 ;;		None
  1863 ;; Return value:  Size  Location     Type
  1864 ;;                  2   10[COMRAM] int 
  1865 ;; Registers used:
  1866 ;;		wreg, status,2, status,0
  1867 ;; Tracked objects:
  1868 ;;		On entry : 0/0
  1869 ;;		On exit  : 0/0
  1870 ;;		Unchanged: 0/0
  1871 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1872 ;;      Params:         2       0       0       0       0       0       0       0       0
  1873 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1874 ;;      Temps:          2       0       0       0       0       0       0       0       0
  1875 ;;      Totals:         4       0       0       0       0       0       0       0       0
  1876 ;;Total ram usage:        4 bytes
  1877 ;; Hardware stack levels used: 1
  1878 ;; Hardware stack levels required when called: 2
  1879 ;; This function calls:
  1880 ;;		Nothing
  1881 ;; This function is called by:
  1882 ;;		_vfpfcnvrt
  1883 ;; This function uses a non-reentrant model
  1884 ;;
  1885                           
  1886                           	psect	text8
  1887   001110                     __ptext8:
  1888                           	callstack 0
  1889   001110                     _abs:
  1890                           	callstack 23
  1891   001110  BE0C               	btfsc	(abs@a+1)^0,7,c
  1892   001112  EF8D  F008         	goto	u861
  1893   001116  EF8F  F008         	goto	u860
  1894   00111A                     u861:
  1895   00111A  EF95  F008         	goto	l966
  1896   00111E                     u860:
  1897   00111E  C00B  F00B         	movff	abs@a,?_abs
  1898   001122  C00C  F00C         	movff	abs@a+1,?_abs+1
  1899   001126  EFA1  F008         	goto	l969
  1900   00112A                     l966:
  1901   00112A  C00B  F00D         	movff	abs@a,??_abs
  1902   00112E  C00C  F00E         	movff	abs@a+1,??_abs+1
  1903   001132  1E0D               	comf	??_abs^0,f,c
  1904   001134  1E0E               	comf	(??_abs+1)^0,f,c
  1905   001136  4A0D               	infsnz	??_abs^0,f,c
  1906   001138  2A0E               	incf	(??_abs+1)^0,f,c
  1907   00113A  C00D  F00B         	movff	??_abs,?_abs
  1908   00113E  C00E  F00C         	movff	??_abs+1,?_abs+1
  1909   001142                     l969:
  1910   001142  0012               	return		;funcret
  1911   001144                     __end_of_abs:
  1912                           	callstack 0
  1913                           
  1914 ;; *************** function ___awmod *****************
  1915 ;; Defined at:
  1916 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\awmod.c"
  1917 ;; Parameters:    Size  Location     Type
  1918 ;;  dividend        2    4[COMRAM] int 
  1919 ;;  divisor         2    6[COMRAM] int 
  1920 ;; Auto vars:     Size  Location     Type
  1921 ;;  sign            1    9[COMRAM] unsigned char 
  1922 ;;  counter         1    8[COMRAM] unsigned char 
  1923 ;; Return value:  Size  Location     Type
  1924 ;;                  2    4[COMRAM] int 
  1925 ;; Registers used:
  1926 ;;		wreg, status,2, status,0
  1927 ;; Tracked objects:
  1928 ;;		On entry : 0/0
  1929 ;;		On exit  : 0/0
  1930 ;;		Unchanged: 0/0
  1931 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1932 ;;      Params:         4       0       0       0       0       0       0       0       0
  1933 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1934 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1935 ;;      Totals:         6       0       0       0       0       0       0       0       0
  1936 ;;Total ram usage:        6 bytes
  1937 ;; Hardware stack levels used: 1
  1938 ;; Hardware stack levels required when called: 2
  1939 ;; This function calls:
  1940 ;;		Nothing
  1941 ;; This function is called by:
  1942 ;;		_vfpfcnvrt
  1943 ;; This function uses a non-reentrant model
  1944 ;;
  1945                           
  1946                           	psect	text9
  1947   000D0E                     __ptext9:
  1948                           	callstack 0
  1949   000D0E                     ___awmod:
  1950                           	callstack 23
  1951   000D0E  6A0A               	clrf	___awmod@sign^0,c
  1952   000D10  BE06               	btfsc	(___awmod@dividend+1)^0,7,c
  1953   000D12  EF8F  F006         	goto	u760
  1954   000D16  EF8D  F006         	goto	u761
  1955   000D1A                     u761:
  1956   000D1A  EF95  F006         	goto	l1546
  1957   000D1E                     u760:
  1958   000D1E  6C05               	negf	___awmod@dividend^0,c
  1959   000D20  1E06               	comf	(___awmod@dividend+1)^0,f,c
  1960   000D22  B0D8               	btfsc	status,0,c
  1961   000D24  2A06               	incf	(___awmod@dividend+1)^0,f,c
  1962   000D26  0E01               	movlw	1
  1963   000D28  6E0A               	movwf	___awmod@sign^0,c
  1964   000D2A                     l1546:
  1965   000D2A  BE08               	btfsc	(___awmod@divisor+1)^0,7,c
  1966   000D2C  EF9C  F006         	goto	u770
  1967   000D30  EF9A  F006         	goto	u771
  1968   000D34                     u771:
  1969   000D34  EFA0  F006         	goto	l1550
  1970   000D38                     u770:
  1971   000D38  6C07               	negf	___awmod@divisor^0,c
  1972   000D3A  1E08               	comf	(___awmod@divisor+1)^0,f,c
  1973   000D3C  B0D8               	btfsc	status,0,c
  1974   000D3E  2A08               	incf	(___awmod@divisor+1)^0,f,c
  1975   000D40                     l1550:
  1976   000D40  5007               	movf	___awmod@divisor^0,w,c
  1977   000D42  1008               	iorwf	(___awmod@divisor+1)^0,w,c
  1978   000D44  B4D8               	btfsc	status,2,c
  1979   000D46  EFA7  F006         	goto	u781
  1980   000D4A  EFA9  F006         	goto	u780
  1981   000D4E                     u781:
  1982   000D4E  EFCD  F006         	goto	l1566
  1983   000D52                     u780:
  1984   000D52  0E01               	movlw	1
  1985   000D54  6E09               	movwf	___awmod@counter^0,c
  1986   000D56  EFB1  F006         	goto	l1556
  1987   000D5A                     l1554:
  1988   000D5A  90D8               	bcf	status,0,c
  1989   000D5C  3607               	rlcf	___awmod@divisor^0,f,c
  1990   000D5E  3608               	rlcf	(___awmod@divisor+1)^0,f,c
  1991   000D60  2A09               	incf	___awmod@counter^0,f,c
  1992   000D62                     l1556:
  1993   000D62  AE08               	btfss	(___awmod@divisor+1)^0,7,c
  1994   000D64  EFB6  F006         	goto	u791
  1995   000D68  EFB8  F006         	goto	u790
  1996   000D6C                     u791:
  1997   000D6C  EFAD  F006         	goto	l1554
  1998   000D70                     u790:
  1999   000D70                     l1558:
  2000   000D70  5007               	movf	___awmod@divisor^0,w,c
  2001   000D72  5C05               	subwf	___awmod@dividend^0,w,c
  2002   000D74  5008               	movf	(___awmod@divisor+1)^0,w,c
  2003   000D76  5806               	subwfb	(___awmod@dividend+1)^0,w,c
  2004   000D78  A0D8               	btfss	status,0,c
  2005   000D7A  EFC1  F006         	goto	u801
  2006   000D7E  EFC3  F006         	goto	u800
  2007   000D82                     u801:
  2008   000D82  EFC7  F006         	goto	l1562
  2009   000D86                     u800:
  2010   000D86  5007               	movf	___awmod@divisor^0,w,c
  2011   000D88  5E05               	subwf	___awmod@dividend^0,f,c
  2012   000D8A  5008               	movf	(___awmod@divisor+1)^0,w,c
  2013   000D8C  5A06               	subwfb	(___awmod@dividend+1)^0,f,c
  2014   000D8E                     l1562:
  2015   000D8E  90D8               	bcf	status,0,c
  2016   000D90  3208               	rrcf	(___awmod@divisor+1)^0,f,c
  2017   000D92  3207               	rrcf	___awmod@divisor^0,f,c
  2018   000D94  2E09               	decfsz	___awmod@counter^0,f,c
  2019   000D96  EFB8  F006         	goto	l1558
  2020   000D9A                     l1566:
  2021   000D9A  500A               	movf	___awmod@sign^0,w,c
  2022   000D9C  B4D8               	btfsc	status,2,c
  2023   000D9E  EFD3  F006         	goto	u811
  2024   000DA2  EFD5  F006         	goto	u810
  2025   000DA6                     u811:
  2026   000DA6  EFD9  F006         	goto	l1570
  2027   000DAA                     u810:
  2028   000DAA  6C05               	negf	___awmod@dividend^0,c
  2029   000DAC  1E06               	comf	(___awmod@dividend+1)^0,f,c
  2030   000DAE  B0D8               	btfsc	status,0,c
  2031   000DB0  2A06               	incf	(___awmod@dividend+1)^0,f,c
  2032   000DB2                     l1570:
  2033   000DB2  C005  F005         	movff	___awmod@dividend,?___awmod
  2034   000DB6  C006  F006         	movff	___awmod@dividend+1,?___awmod+1
  2035   000DBA  0012               	return		;funcret
  2036   000DBC                     __end_of___awmod:
  2037                           	callstack 0
  2038                           
  2039 ;; *************** function ___awdiv *****************
  2040 ;; Defined at:
  2041 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\awdiv.c"
  2042 ;; Parameters:    Size  Location     Type
  2043 ;;  dividend        2    4[COMRAM] int 
  2044 ;;  divisor         2    6[COMRAM] int 
  2045 ;; Auto vars:     Size  Location     Type
  2046 ;;  quotient        2   10[COMRAM] int 
  2047 ;;  sign            1    9[COMRAM] unsigned char 
  2048 ;;  counter         1    8[COMRAM] unsigned char 
  2049 ;; Return value:  Size  Location     Type
  2050 ;;                  2    4[COMRAM] int 
  2051 ;; Registers used:
  2052 ;;		wreg, status,2, status,0
  2053 ;; Tracked objects:
  2054 ;;		On entry : 0/0
  2055 ;;		On exit  : 0/0
  2056 ;;		Unchanged: 0/0
  2057 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2058 ;;      Params:         4       0       0       0       0       0       0       0       0
  2059 ;;      Locals:         4       0       0       0       0       0       0       0       0
  2060 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2061 ;;      Totals:         8       0       0       0       0       0       0       0       0
  2062 ;;Total ram usage:        8 bytes
  2063 ;; Hardware stack levels used: 1
  2064 ;; Hardware stack levels required when called: 2
  2065 ;; This function calls:
  2066 ;;		Nothing
  2067 ;; This function is called by:
  2068 ;;		_vfpfcnvrt
  2069 ;; This function uses a non-reentrant model
  2070 ;;
  2071                           
  2072                           	psect	text10
  2073   000C4C                     __ptext10:
  2074                           	callstack 0
  2075   000C4C                     ___awdiv:
  2076                           	callstack 23
  2077   000C4C  6A0A               	clrf	___awdiv@sign^0,c
  2078   000C4E  BE08               	btfsc	(___awdiv@divisor+1)^0,7,c
  2079   000C50  EF2E  F006         	goto	u700
  2080   000C54  EF2C  F006         	goto	u701
  2081   000C58                     u701:
  2082   000C58  EF34  F006         	goto	l1502
  2083   000C5C                     u700:
  2084   000C5C  6C07               	negf	___awdiv@divisor^0,c
  2085   000C5E  1E08               	comf	(___awdiv@divisor+1)^0,f,c
  2086   000C60  B0D8               	btfsc	status,0,c
  2087   000C62  2A08               	incf	(___awdiv@divisor+1)^0,f,c
  2088   000C64  0E01               	movlw	1
  2089   000C66  6E0A               	movwf	___awdiv@sign^0,c
  2090   000C68                     l1502:
  2091   000C68  BE06               	btfsc	(___awdiv@dividend+1)^0,7,c
  2092   000C6A  EF3B  F006         	goto	u710
  2093   000C6E  EF39  F006         	goto	u711
  2094   000C72                     u711:
  2095   000C72  EF41  F006         	goto	l1508
  2096   000C76                     u710:
  2097   000C76  6C05               	negf	___awdiv@dividend^0,c
  2098   000C78  1E06               	comf	(___awdiv@dividend+1)^0,f,c
  2099   000C7A  B0D8               	btfsc	status,0,c
  2100   000C7C  2A06               	incf	(___awdiv@dividend+1)^0,f,c
  2101   000C7E  0E01               	movlw	1
  2102   000C80  1A0A               	xorwf	___awdiv@sign^0,f,c
  2103   000C82                     l1508:
  2104   000C82  0E00               	movlw	0
  2105   000C84  6E0C               	movwf	(___awdiv@quotient+1)^0,c
  2106   000C86  0E00               	movlw	0
  2107   000C88  6E0B               	movwf	___awdiv@quotient^0,c
  2108   000C8A  5007               	movf	___awdiv@divisor^0,w,c
  2109   000C8C  1008               	iorwf	(___awdiv@divisor+1)^0,w,c
  2110   000C8E  B4D8               	btfsc	status,2,c
  2111   000C90  EF4C  F006         	goto	u721
  2112   000C94  EF4E  F006         	goto	u720
  2113   000C98                     u721:
  2114   000C98  EF76  F006         	goto	l1530
  2115   000C9C                     u720:
  2116   000C9C  0E01               	movlw	1
  2117   000C9E  6E09               	movwf	___awdiv@counter^0,c
  2118   000CA0  EF56  F006         	goto	l1516
  2119   000CA4                     l1514:
  2120   000CA4  90D8               	bcf	status,0,c
  2121   000CA6  3607               	rlcf	___awdiv@divisor^0,f,c
  2122   000CA8  3608               	rlcf	(___awdiv@divisor+1)^0,f,c
  2123   000CAA  2A09               	incf	___awdiv@counter^0,f,c
  2124   000CAC                     l1516:
  2125   000CAC  AE08               	btfss	(___awdiv@divisor+1)^0,7,c
  2126   000CAE  EF5B  F006         	goto	u731
  2127   000CB2  EF5D  F006         	goto	u730
  2128   000CB6                     u731:
  2129   000CB6  EF52  F006         	goto	l1514
  2130   000CBA                     u730:
  2131   000CBA                     l1518:
  2132   000CBA  90D8               	bcf	status,0,c
  2133   000CBC  360B               	rlcf	___awdiv@quotient^0,f,c
  2134   000CBE  360C               	rlcf	(___awdiv@quotient+1)^0,f,c
  2135   000CC0  5007               	movf	___awdiv@divisor^0,w,c
  2136   000CC2  5C05               	subwf	___awdiv@dividend^0,w,c
  2137   000CC4  5008               	movf	(___awdiv@divisor+1)^0,w,c
  2138   000CC6  5806               	subwfb	(___awdiv@dividend+1)^0,w,c
  2139   000CC8  A0D8               	btfss	status,0,c
  2140   000CCA  EF69  F006         	goto	u741
  2141   000CCE  EF6B  F006         	goto	u740
  2142   000CD2                     u741:
  2143   000CD2  EF70  F006         	goto	l1526
  2144   000CD6                     u740:
  2145   000CD6  5007               	movf	___awdiv@divisor^0,w,c
  2146   000CD8  5E05               	subwf	___awdiv@dividend^0,f,c
  2147   000CDA  5008               	movf	(___awdiv@divisor+1)^0,w,c
  2148   000CDC  5A06               	subwfb	(___awdiv@dividend+1)^0,f,c
  2149   000CDE  800B               	bsf	___awdiv@quotient^0,0,c
  2150   000CE0                     l1526:
  2151   000CE0  90D8               	bcf	status,0,c
  2152   000CE2  3208               	rrcf	(___awdiv@divisor+1)^0,f,c
  2153   000CE4  3207               	rrcf	___awdiv@divisor^0,f,c
  2154   000CE6  2E09               	decfsz	___awdiv@counter^0,f,c
  2155   000CE8  EF5D  F006         	goto	l1518
  2156   000CEC                     l1530:
  2157   000CEC  500A               	movf	___awdiv@sign^0,w,c
  2158   000CEE  B4D8               	btfsc	status,2,c
  2159   000CF0  EF7C  F006         	goto	u751
  2160   000CF4  EF7E  F006         	goto	u750
  2161   000CF8                     u751:
  2162   000CF8  EF82  F006         	goto	l1534
  2163   000CFC                     u750:
  2164   000CFC  6C0B               	negf	___awdiv@quotient^0,c
  2165   000CFE  1E0C               	comf	(___awdiv@quotient+1)^0,f,c
  2166   000D00  B0D8               	btfsc	status,0,c
  2167   000D02  2A0C               	incf	(___awdiv@quotient+1)^0,f,c
  2168   000D04                     l1534:
  2169   000D04  C00B  F005         	movff	___awdiv@quotient,?___awdiv
  2170   000D08  C00C  F006         	movff	___awdiv@quotient+1,?___awdiv+1
  2171   000D0C  0012               	return		;funcret
  2172   000D0E                     __end_of___awdiv:
  2173                           	callstack 0
  2174                           
  2175 ;; *************** function _Lcd_Write_String *****************
  2176 ;; Defined at:
  2177 ;;		line 104 in file "lcd.c"
  2178 ;; Parameters:    Size  Location     Type
  2179 ;;  a               2    8[COMRAM] PTR const unsigned char 
  2180 ;;		 -> STR_3(9), STR_2(7), mostrar_variable@buffer(20), 
  2181 ;; Auto vars:     Size  Location     Type
  2182 ;;  i               2   12[COMRAM] int 
  2183 ;; Return value:  Size  Location     Type
  2184 ;;                  1    wreg      void 
  2185 ;; Registers used:
  2186 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2187 ;; Tracked objects:
  2188 ;;		On entry : 0/0
  2189 ;;		On exit  : 0/0
  2190 ;;		Unchanged: 0/0
  2191 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2192 ;;      Params:         2       0       0       0       0       0       0       0       0
  2193 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2194 ;;      Temps:          2       0       0       0       0       0       0       0       0
  2195 ;;      Totals:         6       0       0       0       0       0       0       0       0
  2196 ;;Total ram usage:        6 bytes
  2197 ;; Hardware stack levels used: 1
  2198 ;; Hardware stack levels required when called: 4
  2199 ;; This function calls:
  2200 ;;		_Lcd_Write_Char
  2201 ;; This function is called by:
  2202 ;;		_mostrar_variable
  2203 ;;		_mostrar_conteo
  2204 ;; This function uses a non-reentrant model
  2205 ;;
  2206                           
  2207                           	psect	text11
  2208   000EE8                     __ptext11:
  2209                           	callstack 0
  2210   000EE8                     _Lcd_Write_String:
  2211                           	callstack 24
  2212   000EE8                     
  2213                           ;lcd.c: 104: void Lcd_Write_String(const char *a);lcd.c: 105: {;lcd.c: 106:     int i;;l
      +                          cd.c: 107:     for(i=0;a[i]!='\0';i++)
  2214   000EE8  0E00               	movlw	0
  2215   000EEA  6E0E               	movwf	(Lcd_Write_String@i+1)^0,c
  2216   000EEC  0E00               	movlw	0
  2217   000EEE  6E0D               	movwf	Lcd_Write_String@i^0,c
  2218   000EF0  EF94  F007         	goto	l1670
  2219   000EF4                     l1666:
  2220                           
  2221                           ;lcd.c: 108:         Lcd_Write_Char(a[i]);
  2222   000EF4  500D               	movf	Lcd_Write_String@i^0,w,c
  2223   000EF6  2409               	addwf	Lcd_Write_String@a^0,w,c
  2224   000EF8  6E0B               	movwf	??_Lcd_Write_String^0,c
  2225   000EFA  500E               	movf	(Lcd_Write_String@i+1)^0,w,c
  2226   000EFC  200A               	addwfc	(Lcd_Write_String@a+1)^0,w,c
  2227   000EFE  6E0C               	movwf	(??_Lcd_Write_String+1)^0,c
  2228   000F00  C00B  FFF6         	movff	??_Lcd_Write_String,tblptrl
  2229   000F04  C00C  FFF7         	movff	??_Lcd_Write_String+1,tblptrh
  2230   000F08  6AF8               	clrf	tblptru,c
  2231   000F0A  0E07               	movlw	(high __ramtop+-1)
  2232   000F0C  64F7               	cpfsgt	tblptrh,c
  2233   000F0E  D003               	bra	u987
  2234   000F10  0008               	tblrd		*
  2235   000F12  50F5               	movf	tablat,w,c
  2236   000F14  D005               	bra	u980
  2237   000F16                     u987:
  2238   000F16  CFF6 FFE1          	movff	tblptrl,fsr1l
  2239   000F1A  CFF7 FFE2          	movff	tblptrh,fsr1h
  2240   000F1E  50E7               	movf	indf1,w,c
  2241   000F20                     u980:
  2242   000F20  EC52  F008         	call	_Lcd_Write_Char
  2243   000F24  4A0D               	infsnz	Lcd_Write_String@i^0,f,c
  2244   000F26  2A0E               	incf	(Lcd_Write_String@i+1)^0,f,c
  2245   000F28                     l1670:
  2246   000F28  500D               	movf	Lcd_Write_String@i^0,w,c
  2247   000F2A  2409               	addwf	Lcd_Write_String@a^0,w,c
  2248   000F2C  6E0B               	movwf	??_Lcd_Write_String^0,c
  2249   000F2E  500E               	movf	(Lcd_Write_String@i+1)^0,w,c
  2250   000F30  200A               	addwfc	(Lcd_Write_String@a+1)^0,w,c
  2251   000F32  6E0C               	movwf	(??_Lcd_Write_String+1)^0,c
  2252   000F34  C00B  FFF6         	movff	??_Lcd_Write_String,tblptrl
  2253   000F38  C00C  FFF7         	movff	??_Lcd_Write_String+1,tblptrh
  2254   000F3C  6AF8               	clrf	tblptru,c
  2255   000F3E  0E07               	movlw	(high __ramtop+-1)
  2256   000F40  64F7               	cpfsgt	tblptrh,c
  2257   000F42  D003               	bra	u997
  2258   000F44  0008               	tblrd		*
  2259   000F46  50F5               	movf	tablat,w,c
  2260   000F48  D005               	bra	u990
  2261   000F4A                     u997:
  2262   000F4A  CFF6 FFE1          	movff	tblptrl,fsr1l
  2263   000F4E  CFF7 FFE2          	movff	tblptrh,fsr1h
  2264   000F52  50E7               	movf	indf1,w,c
  2265   000F54                     u990:
  2266   000F54  0900               	iorlw	0
  2267   000F56  A4D8               	btfss	status,2,c
  2268   000F58  EFB0  F007         	goto	u1001
  2269   000F5C  EFB2  F007         	goto	u1000
  2270   000F60                     u1001:
  2271   000F60  EF7A  F007         	goto	l1666
  2272   000F64                     u1000:
  2273   000F64  0012               	return		;funcret
  2274   000F66                     __end_of_Lcd_Write_String:
  2275                           	callstack 0
  2276                           
  2277 ;; *************** function _Lcd_Write_Char *****************
  2278 ;; Defined at:
  2279 ;;		line 88 in file "lcd.c"
  2280 ;; Parameters:    Size  Location     Type
  2281 ;;  a               1    wreg     unsigned char 
  2282 ;; Auto vars:     Size  Location     Type
  2283 ;;  a               1    7[COMRAM] unsigned char 
  2284 ;;  y               1    6[COMRAM] unsigned char 
  2285 ;;  temp            1    5[COMRAM] unsigned char 
  2286 ;; Return value:  Size  Location     Type
  2287 ;;                  1    wreg      void 
  2288 ;; Registers used:
  2289 ;;		wreg, status,2, status,0, cstack
  2290 ;; Tracked objects:
  2291 ;;		On entry : 0/0
  2292 ;;		On exit  : 0/0
  2293 ;;		Unchanged: 0/0
  2294 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2295 ;;      Params:         0       0       0       0       0       0       0       0       0
  2296 ;;      Locals:         3       0       0       0       0       0       0       0       0
  2297 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2298 ;;      Totals:         3       0       0       0       0       0       0       0       0
  2299 ;;Total ram usage:        3 bytes
  2300 ;; Hardware stack levels used: 1
  2301 ;; Hardware stack levels required when called: 3
  2302 ;; This function calls:
  2303 ;;		_Lcd_Port
  2304 ;; This function is called by:
  2305 ;;		_Lcd_Write_String
  2306 ;;		_Lcd_CGRAM_CreateChar
  2307 ;; This function uses a non-reentrant model
  2308 ;;
  2309                           
  2310                           	psect	text12
  2311   0010A4                     __ptext12:
  2312                           	callstack 0
  2313   0010A4                     _Lcd_Write_Char:
  2314                           	callstack 24
  2315                           
  2316                           ;incstack = 0
  2317                           ;Lcd_Write_Char@a stored from wreg
  2318   0010A4  6E08               	movwf	Lcd_Write_Char@a^0,c
  2319   0010A6                     
  2320                           ;lcd.c: 88: void Lcd_Write_Char(char a);lcd.c: 89: {;lcd.c: 90:     char temp,y;;lcd.c: 
      +                          91:     temp = a&0x0F;
  2321   0010A6  5008               	movf	Lcd_Write_Char@a^0,w,c
  2322   0010A8  0B0F               	andlw	15
  2323   0010AA  6E06               	movwf	Lcd_Write_Char@temp^0,c
  2324                           
  2325                           ;lcd.c: 92:     y = a&0xF0;
  2326   0010AC  5008               	movf	Lcd_Write_Char@a^0,w,c
  2327   0010AE  0BF0               	andlw	240
  2328   0010B0  6E07               	movwf	Lcd_Write_Char@y^0,c
  2329   0010B2                     
  2330                           ;lcd.c: 93:     LATDbits.LD2 = 1;
  2331   0010B2  848C               	bsf	140,2,c	;volatile
  2332   0010B4                     
  2333                           ;lcd.c: 94:     Lcd_Port(y>>4);
  2334   0010B4  3807               	swapf	Lcd_Write_Char@y^0,w,c
  2335   0010B6  0B0F               	andlw	15
  2336   0010B8  ECE4  F007         	call	_Lcd_Port
  2337   0010BC                     
  2338                           ;lcd.c: 95:     LATDbits.LD3 = 1;
  2339   0010BC  868C               	bsf	140,3,c	;volatile
  2340   0010BE                     
  2341                           ;lcd.c: 96:     _delay((unsigned long)((40)*(4000000/4000000.0)));
  2342   0010BE  0E0D               	movlw	13
  2343   0010C0                     u1257:
  2344   0010C0  2EE8               	decfsz	wreg,f,c
  2345   0010C2  D7FE               	bra	u1257
  2346   0010C4  0000               	nop	
  2347   0010C6                     
  2348                           ;lcd.c: 97:     LATDbits.LD3 = 0;
  2349   0010C6  968C               	bcf	140,3,c	;volatile
  2350   0010C8                     
  2351                           ;lcd.c: 98:     Lcd_Port(temp);
  2352   0010C8  5006               	movf	Lcd_Write_Char@temp^0,w,c
  2353   0010CA  ECE4  F007         	call	_Lcd_Port
  2354   0010CE                     
  2355                           ;lcd.c: 99:     LATDbits.LD3 = 1;
  2356   0010CE  868C               	bsf	140,3,c	;volatile
  2357   0010D0                     
  2358                           ;lcd.c: 100:     _delay((unsigned long)((40)*(4000000/4000000.0)));
  2359   0010D0  0E0D               	movlw	13
  2360   0010D2                     u1267:
  2361   0010D2  2EE8               	decfsz	wreg,f,c
  2362   0010D4  D7FE               	bra	u1267
  2363   0010D6  0000               	nop	
  2364   0010D8                     
  2365                           ;lcd.c: 101:     LATDbits.LD3 = 0;
  2366   0010D8  968C               	bcf	140,3,c	;volatile
  2367   0010DA  0012               	return		;funcret
  2368   0010DC                     __end_of_Lcd_Write_Char:
  2369                           	callstack 0
  2370                           
  2371 ;; *************** function _Lcd_Set_Cursor *****************
  2372 ;; Defined at:
  2373 ;;		line 26 in file "lcd.c"
  2374 ;; Parameters:    Size  Location     Type
  2375 ;;  a               1    wreg     unsigned char 
  2376 ;;  b               1    7[COMRAM] unsigned char 
  2377 ;; Auto vars:     Size  Location     Type
  2378 ;;  a               1    8[COMRAM] unsigned char 
  2379 ;;  temp            1   11[COMRAM] unsigned char 
  2380 ;;  y               1   10[COMRAM] unsigned char 
  2381 ;;  z               1    9[COMRAM] unsigned char 
  2382 ;; Return value:  Size  Location     Type
  2383 ;;                  1    wreg      void 
  2384 ;; Registers used:
  2385 ;;		wreg, status,2, status,0, cstack
  2386 ;; Tracked objects:
  2387 ;;		On entry : 0/0
  2388 ;;		On exit  : 0/0
  2389 ;;		Unchanged: 0/0
  2390 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2391 ;;      Params:         1       0       0       0       0       0       0       0       0
  2392 ;;      Locals:         4       0       0       0       0       0       0       0       0
  2393 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2394 ;;      Totals:         5       0       0       0       0       0       0       0       0
  2395 ;;Total ram usage:        5 bytes
  2396 ;; Hardware stack levels used: 1
  2397 ;; Hardware stack levels required when called: 4
  2398 ;; This function calls:
  2399 ;;		_Lcd_Cmd
  2400 ;; This function is called by:
  2401 ;;		_mostrar_conteo
  2402 ;; This function uses a non-reentrant model
  2403 ;;
  2404                           
  2405                           	psect	text13
  2406   000B7A                     __ptext13:
  2407                           	callstack 0
  2408   000B7A                     _Lcd_Set_Cursor:
  2409                           	callstack 25
  2410                           
  2411                           ;incstack = 0
  2412                           ;Lcd_Set_Cursor@a stored from wreg
  2413   000B7A  6E09               	movwf	Lcd_Set_Cursor@a^0,c
  2414   000B7C                     
  2415                           ;lcd.c: 26: void Lcd_Set_Cursor(char a, char b);lcd.c: 27: {;lcd.c: 28:     char temp,z,
      +                          y;;lcd.c: 29:     if(a == 1)
  2416   000B7C  0409               	decf	Lcd_Set_Cursor@a^0,w,c
  2417   000B7E  A4D8               	btfss	status,2,c
  2418   000B80  EFC4  F005         	goto	u1011
  2419   000B84  EFC6  F005         	goto	u1010
  2420   000B88                     u1011:
  2421   000B88  EFD7  F005         	goto	l1686
  2422   000B8C                     u1010:
  2423   000B8C                     
  2424                           ;lcd.c: 30:     {;lcd.c: 31:         temp = 0x80 + b - 1;
  2425   000B8C  5008               	movf	Lcd_Set_Cursor@b^0,w,c
  2426   000B8E  0F7F               	addlw	127
  2427   000B90  6E0C               	movwf	Lcd_Set_Cursor@temp^0,c
  2428                           
  2429                           ;lcd.c: 32:         z = temp>>4;
  2430   000B92  380C               	swapf	Lcd_Set_Cursor@temp^0,w,c
  2431   000B94  0B0F               	andlw	15
  2432   000B96  6E0A               	movwf	Lcd_Set_Cursor@z^0,c
  2433                           
  2434                           ;lcd.c: 33:         y = temp & 0x0F;
  2435   000B98  500C               	movf	Lcd_Set_Cursor@temp^0,w,c
  2436   000B9A  0B0F               	andlw	15
  2437   000B9C  6E0B               	movwf	Lcd_Set_Cursor@y^0,c
  2438   000B9E                     
  2439                           ;lcd.c: 34:         Lcd_Cmd(z);
  2440   000B9E  500A               	movf	Lcd_Set_Cursor@z^0,w,c
  2441   000BA0  ECC5  F008         	call	_Lcd_Cmd
  2442   000BA4                     
  2443                           ;lcd.c: 35:         Lcd_Cmd(y);
  2444   000BA4  500B               	movf	Lcd_Set_Cursor@y^0,w,c
  2445   000BA6  ECC5  F008         	call	_Lcd_Cmd
  2446                           
  2447                           ;lcd.c: 36:     }
  2448   000BAA  EF25  F006         	goto	l178
  2449   000BAE                     l1686:
  2450   000BAE  0E02               	movlw	2
  2451   000BB0  1809               	xorwf	Lcd_Set_Cursor@a^0,w,c
  2452   000BB2  A4D8               	btfss	status,2,c
  2453   000BB4  EFDE  F005         	goto	u1021
  2454   000BB8  EFE0  F005         	goto	u1020
  2455   000BBC                     u1021:
  2456   000BBC  EFF1  F005         	goto	l1694
  2457   000BC0                     u1020:
  2458   000BC0                     
  2459                           ;lcd.c: 38:     {;lcd.c: 39:         temp = 0xC0 + b - 1;
  2460   000BC0  5008               	movf	Lcd_Set_Cursor@b^0,w,c
  2461   000BC2  0FBF               	addlw	191
  2462   000BC4  6E0C               	movwf	Lcd_Set_Cursor@temp^0,c
  2463                           
  2464                           ;lcd.c: 40:         z = temp>>4;
  2465   000BC6  380C               	swapf	Lcd_Set_Cursor@temp^0,w,c
  2466   000BC8  0B0F               	andlw	15
  2467   000BCA  6E0A               	movwf	Lcd_Set_Cursor@z^0,c
  2468                           
  2469                           ;lcd.c: 41:         y = temp & 0x0F;
  2470   000BCC  500C               	movf	Lcd_Set_Cursor@temp^0,w,c
  2471   000BCE  0B0F               	andlw	15
  2472   000BD0  6E0B               	movwf	Lcd_Set_Cursor@y^0,c
  2473   000BD2                     
  2474                           ;lcd.c: 42:         Lcd_Cmd(z);
  2475   000BD2  500A               	movf	Lcd_Set_Cursor@z^0,w,c
  2476   000BD4  ECC5  F008         	call	_Lcd_Cmd
  2477   000BD8                     
  2478                           ;lcd.c: 43:         Lcd_Cmd(y);
  2479   000BD8  500B               	movf	Lcd_Set_Cursor@y^0,w,c
  2480   000BDA  ECC5  F008         	call	_Lcd_Cmd
  2481                           
  2482                           ;lcd.c: 44:     }
  2483   000BDE  EF25  F006         	goto	l178
  2484   000BE2                     l1694:
  2485   000BE2  0E03               	movlw	3
  2486   000BE4  1809               	xorwf	Lcd_Set_Cursor@a^0,w,c
  2487   000BE6  A4D8               	btfss	status,2,c
  2488   000BE8  EFF8  F005         	goto	u1031
  2489   000BEC  EFFA  F005         	goto	u1030
  2490   000BF0                     u1031:
  2491   000BF0  EF0B  F006         	goto	l1702
  2492   000BF4                     u1030:
  2493   000BF4                     
  2494                           ;lcd.c: 46:     {;lcd.c: 47:         temp = 0x94 + b - 1;
  2495   000BF4  5008               	movf	Lcd_Set_Cursor@b^0,w,c
  2496   000BF6  0F93               	addlw	147
  2497   000BF8  6E0C               	movwf	Lcd_Set_Cursor@temp^0,c
  2498                           
  2499                           ;lcd.c: 48:         z = temp>>4;
  2500   000BFA  380C               	swapf	Lcd_Set_Cursor@temp^0,w,c
  2501   000BFC  0B0F               	andlw	15
  2502   000BFE  6E0A               	movwf	Lcd_Set_Cursor@z^0,c
  2503                           
  2504                           ;lcd.c: 49:         y = temp & 0x0F;
  2505   000C00  500C               	movf	Lcd_Set_Cursor@temp^0,w,c
  2506   000C02  0B0F               	andlw	15
  2507   000C04  6E0B               	movwf	Lcd_Set_Cursor@y^0,c
  2508   000C06                     
  2509                           ;lcd.c: 50:         Lcd_Cmd(z);
  2510   000C06  500A               	movf	Lcd_Set_Cursor@z^0,w,c
  2511   000C08  ECC5  F008         	call	_Lcd_Cmd
  2512   000C0C                     
  2513                           ;lcd.c: 51:         Lcd_Cmd(y);
  2514   000C0C  500B               	movf	Lcd_Set_Cursor@y^0,w,c
  2515   000C0E  ECC5  F008         	call	_Lcd_Cmd
  2516                           
  2517                           ;lcd.c: 52:     }
  2518   000C12  EF25  F006         	goto	l178
  2519   000C16                     l1702:
  2520   000C16  0E04               	movlw	4
  2521   000C18  1809               	xorwf	Lcd_Set_Cursor@a^0,w,c
  2522   000C1A  A4D8               	btfss	status,2,c
  2523   000C1C  EF12  F006         	goto	u1041
  2524   000C20  EF14  F006         	goto	u1040
  2525   000C24                     u1041:
  2526   000C24  EF25  F006         	goto	l174
  2527   000C28                     u1040:
  2528   000C28                     
  2529                           ;lcd.c: 54:     {;lcd.c: 55:         temp = 0xD4 + b - 1;
  2530   000C28  5008               	movf	Lcd_Set_Cursor@b^0,w,c
  2531   000C2A  0FD3               	addlw	211
  2532   000C2C  6E0C               	movwf	Lcd_Set_Cursor@temp^0,c
  2533                           
  2534                           ;lcd.c: 56:         z = temp>>4;
  2535   000C2E  380C               	swapf	Lcd_Set_Cursor@temp^0,w,c
  2536   000C30  0B0F               	andlw	15
  2537   000C32  6E0A               	movwf	Lcd_Set_Cursor@z^0,c
  2538                           
  2539                           ;lcd.c: 57:         y = temp & 0x0F;
  2540   000C34  500C               	movf	Lcd_Set_Cursor@temp^0,w,c
  2541   000C36  0B0F               	andlw	15
  2542   000C38  6E0B               	movwf	Lcd_Set_Cursor@y^0,c
  2543   000C3A                     
  2544                           ;lcd.c: 58:         Lcd_Cmd(z);
  2545   000C3A  500A               	movf	Lcd_Set_Cursor@z^0,w,c
  2546   000C3C  ECC5  F008         	call	_Lcd_Cmd
  2547   000C40                     
  2548                           ;lcd.c: 59:         Lcd_Cmd(y);
  2549   000C40  500B               	movf	Lcd_Set_Cursor@y^0,w,c
  2550   000C42  ECC5  F008         	call	_Lcd_Cmd
  2551   000C46  EF25  F006         	goto	l178
  2552   000C4A                     l174:
  2553   000C4A                     l178:
  2554   000C4A  0012               	return		;funcret
  2555   000C4C                     __end_of_Lcd_Set_Cursor:
  2556                           	callstack 0
  2557                           
  2558 ;; *************** function _init_ports *****************
  2559 ;; Defined at:
  2560 ;;		line 47 in file "Cinta.c"
  2561 ;; Parameters:    Size  Location     Type
  2562 ;;		None
  2563 ;; Auto vars:     Size  Location     Type
  2564 ;;		None
  2565 ;; Return value:  Size  Location     Type
  2566 ;;                  1    wreg      void 
  2567 ;; Registers used:
  2568 ;;		wreg, status,2
  2569 ;; Tracked objects:
  2570 ;;		On entry : 0/0
  2571 ;;		On exit  : 0/0
  2572 ;;		Unchanged: 0/0
  2573 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2574 ;;      Params:         0       0       0       0       0       0       0       0       0
  2575 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2576 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2577 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2578 ;;Total ram usage:        0 bytes
  2579 ;; Hardware stack levels used: 1
  2580 ;; Hardware stack levels required when called: 2
  2581 ;; This function calls:
  2582 ;;		Nothing
  2583 ;; This function is called by:
  2584 ;;		_main
  2585 ;; This function uses a non-reentrant model
  2586 ;;
  2587                           
  2588                           	psect	text14
  2589   0011AA                     __ptext14:
  2590                           	callstack 0
  2591   0011AA                     _init_ports:
  2592                           	callstack 28
  2593   0011AA                     
  2594                           ;Cinta.c: 48:      ADCON1bits.PCFG=0x0F;
  2595   0011AA  0E0F               	movlw	15
  2596   0011AC  12C1               	iorwf	193,f,c	;volatile
  2597   0011AE                     
  2598                           ;Cinta.c: 49:      TRISB=0XFF;
  2599   0011AE  6893               	setf	147,c	;volatile
  2600   0011B0                     
  2601                           ;Cinta.c: 50:      TRISA=0X00;
  2602   0011B0  6A92               	clrf	146,c	;volatile
  2603   0011B2                     
  2604                           ;Cinta.c: 51:      LATA=0X00;
  2605   0011B2  6A89               	clrf	137,c	;volatile
  2606   0011B4                     
  2607                           ;Cinta.c: 52:      TRISD=0X00;
  2608   0011B4  6A95               	clrf	149,c	;volatile
  2609   0011B6                     
  2610                           ;Cinta.c: 53:      TRISE=0X00;
  2611   0011B6  6A96               	clrf	150,c	;volatile
  2612   0011B8                     
  2613                           ;Cinta.c: 54:      TRISEbits.RE0=1;
  2614   0011B8  8096               	bsf	150,0,c	;volatile
  2615   0011BA                     
  2616                           ;Cinta.c: 55:      LATE=0;
  2617   0011BA  6A8D               	clrf	141,c	;volatile
  2618   0011BC                     
  2619                           ;Cinta.c: 56:      TRISC=0XFF;
  2620   0011BC  6894               	setf	148,c	;volatile
  2621   0011BE  0012               	return		;funcret
  2622   0011C0                     __end_of_init_ports:
  2623                           	callstack 0
  2624                           
  2625 ;; *************** function _init_maqueta *****************
  2626 ;; Defined at:
  2627 ;;		line 67 in file "Cinta.c"
  2628 ;; Parameters:    Size  Location     Type
  2629 ;;		None
  2630 ;; Auto vars:     Size  Location     Type
  2631 ;;		None
  2632 ;; Return value:  Size  Location     Type
  2633 ;;                  1    wreg      void 
  2634 ;; Registers used:
  2635 ;;		None
  2636 ;; Tracked objects:
  2637 ;;		On entry : 0/0
  2638 ;;		On exit  : 0/0
  2639 ;;		Unchanged: 0/0
  2640 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2641 ;;      Params:         0       0       0       0       0       0       0       0       0
  2642 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2643 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2644 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2645 ;;Total ram usage:        0 bytes
  2646 ;; Hardware stack levels used: 1
  2647 ;; Hardware stack levels required when called: 2
  2648 ;; This function calls:
  2649 ;;		Nothing
  2650 ;; This function is called by:
  2651 ;;		_main
  2652 ;; This function uses a non-reentrant model
  2653 ;;
  2654                           
  2655                           	psect	text15
  2656   000F66                     __ptext15:
  2657                           	callstack 0
  2658   000F66                     _init_maqueta:
  2659                           	callstack 28
  2660   000F66                     
  2661                           ;Cinta.c: 68:     if(PORTCbits.RC0!=1){
  2662   000F66  B082               	btfsc	130,0,c	;volatile
  2663   000F68  EFB8  F007         	goto	u401
  2664   000F6C  EFBA  F007         	goto	u400
  2665   000F70                     u401:
  2666   000F70  EFC3  F007         	goto	l64
  2667   000F74                     u400:
  2668   000F74                     
  2669                           ;Cinta.c: 69:         LATAbits.LA3=1;
  2670   000F74  8689               	bsf	137,3,c	;volatile
  2671   000F76                     l65:
  2672   000F76  A082               	btfss	130,0,c	;volatile
  2673   000F78  EFC0  F007         	goto	u411
  2674   000F7C  EFC2  F007         	goto	u410
  2675   000F80                     u411:
  2676   000F80  EFBB  F007         	goto	l65
  2677   000F84                     u410:
  2678   000F84                     
  2679                           ;Cinta.c: 71:         LATAbits.LA3=0;
  2680   000F84  9689               	bcf	137,3,c	;volatile
  2681   000F86                     l64:
  2682                           
  2683                           ;Cinta.c: 73:     if(PORTBbits.RB2!=1){
  2684   000F86  B481               	btfsc	129,2,c	;volatile
  2685   000F88  EFC8  F007         	goto	u421
  2686   000F8C  EFCA  F007         	goto	u420
  2687   000F90                     u421:
  2688   000F90  EFD3  F007         	goto	l68
  2689   000F94                     u420:
  2690   000F94                     
  2691                           ;Cinta.c: 74:         LATAbits.LA0=1;
  2692   000F94  8089               	bsf	137,0,c	;volatile
  2693   000F96                     l69:
  2694   000F96  A481               	btfss	129,2,c	;volatile
  2695   000F98  EFD0  F007         	goto	u431
  2696   000F9C  EFD2  F007         	goto	u430
  2697   000FA0                     u431:
  2698   000FA0  EFCB  F007         	goto	l69
  2699   000FA4                     u430:
  2700   000FA4                     
  2701                           ;Cinta.c: 76:          LATAbits.LA0=0;
  2702   000FA4  9089               	bcf	137,0,c	;volatile
  2703   000FA6                     l68:
  2704                           
  2705                           ;Cinta.c: 78:     if(PORTCbits.RC6!=1){
  2706   000FA6  BC82               	btfsc	130,6,c	;volatile
  2707   000FA8  EFD8  F007         	goto	u441
  2708   000FAC  EFDA  F007         	goto	u440
  2709   000FB0                     u441:
  2710   000FB0  EFE3  F007         	goto	l76
  2711   000FB4                     u440:
  2712   000FB4                     
  2713                           ;Cinta.c: 79:         LATAbits.LA5=1;
  2714   000FB4  8A89               	bsf	137,5,c	;volatile
  2715   000FB6                     l73:
  2716   000FB6  AC82               	btfss	130,6,c	;volatile
  2717   000FB8  EFE0  F007         	goto	u451
  2718   000FBC  EFE2  F007         	goto	u450
  2719   000FC0                     u451:
  2720   000FC0  EFDB  F007         	goto	l73
  2721   000FC4                     u450:
  2722   000FC4                     
  2723                           ;Cinta.c: 81:         LATAbits.LA5=0;
  2724   000FC4  9A89               	bcf	137,5,c	;volatile
  2725   000FC6                     l76:
  2726   000FC6  0012               	return		;funcret
  2727   000FC8                     __end_of_init_maqueta:
  2728                           	callstack 0
  2729                           
  2730 ;; *************** function _init_int *****************
  2731 ;; Defined at:
  2732 ;;		line 59 in file "Cinta.c"
  2733 ;; Parameters:    Size  Location     Type
  2734 ;;		None
  2735 ;; Auto vars:     Size  Location     Type
  2736 ;;		None
  2737 ;; Return value:  Size  Location     Type
  2738 ;;                  1    wreg      void 
  2739 ;; Registers used:
  2740 ;;		None
  2741 ;; Tracked objects:
  2742 ;;		On entry : 0/0
  2743 ;;		On exit  : 0/0
  2744 ;;		Unchanged: 0/0
  2745 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2746 ;;      Params:         0       0       0       0       0       0       0       0       0
  2747 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2748 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2749 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2750 ;;Total ram usage:        0 bytes
  2751 ;; Hardware stack levels used: 1
  2752 ;; Hardware stack levels required when called: 2
  2753 ;; This function calls:
  2754 ;;		Nothing
  2755 ;; This function is called by:
  2756 ;;		_main
  2757 ;; This function uses a non-reentrant model
  2758 ;;
  2759                           
  2760                           	psect	text16
  2761   0011C0                     __ptext16:
  2762                           	callstack 0
  2763   0011C0                     _init_int:
  2764                           	callstack 28
  2765   0011C0                     
  2766                           ;Cinta.c: 60:     INTCONbits.GIEH=0;
  2767   0011C0  9EF2               	bcf	242,7,c	;volatile
  2768                           
  2769                           ;Cinta.c: 61:     INTCONbits.GIEL=0;
  2770   0011C2  9CF2               	bcf	242,6,c	;volatile
  2771                           
  2772                           ;Cinta.c: 62:     INTCONbits.RBIE=1;
  2773   0011C4  86F2               	bsf	242,3,c	;volatile
  2774                           
  2775                           ;Cinta.c: 63:     INTCONbits.RBIF=0;
  2776   0011C6  90F2               	bcf	242,0,c	;volatile
  2777                           
  2778                           ;Cinta.c: 64:     RCONbits.IPEN=1;
  2779   0011C8  8ED0               	bsf	208,7,c	;volatile
  2780                           
  2781                           ;Cinta.c: 65:     INTCON2bits.RBIP=0;
  2782   0011CA  90F1               	bcf	241,0,c	;volatile
  2783   0011CC  0012               	return		;funcret
  2784   0011CE                     __end_of_init_int:
  2785                           	callstack 0
  2786                           
  2787 ;; *************** function _Lcd_Init *****************
  2788 ;; Defined at:
  2789 ;;		line 63 in file "lcd.c"
  2790 ;; Parameters:    Size  Location     Type
  2791 ;;		None
  2792 ;; Auto vars:     Size  Location     Type
  2793 ;;		None
  2794 ;; Return value:  Size  Location     Type
  2795 ;;                  1    wreg      void 
  2796 ;; Registers used:
  2797 ;;		wreg, status,2, cstack
  2798 ;; Tracked objects:
  2799 ;;		On entry : 0/0
  2800 ;;		On exit  : 0/0
  2801 ;;		Unchanged: 0/0
  2802 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2803 ;;      Params:         0       0       0       0       0       0       0       0       0
  2804 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2805 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2806 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2807 ;;Total ram usage:        1 bytes
  2808 ;; Hardware stack levels used: 1
  2809 ;; Hardware stack levels required when called: 5
  2810 ;; This function calls:
  2811 ;;		_Lcd_Clear
  2812 ;;		_Lcd_Cmd
  2813 ;;		_Lcd_Port
  2814 ;; This function is called by:
  2815 ;;		_main
  2816 ;; This function uses a non-reentrant model
  2817 ;;
  2818                           
  2819                           	psect	text17
  2820   000E66                     __ptext17:
  2821                           	callstack 0
  2822   000E66                     _Lcd_Init:
  2823                           	callstack 25
  2824   000E66                     
  2825                           ;lcd.c: 65:  TRISDbits.TRISD2 = 0;
  2826   000E66  9495               	bcf	149,2,c	;volatile
  2827                           
  2828                           ;lcd.c: 66:  TRISDbits.TRISD3 = 0;
  2829   000E68  9695               	bcf	149,3,c	;volatile
  2830                           
  2831                           ;lcd.c: 67:  TRISDbits.TRISD4 = 0;
  2832   000E6A  9895               	bcf	149,4,c	;volatile
  2833                           
  2834                           ;lcd.c: 68:  TRISDbits.TRISD5 = 0;
  2835   000E6C  9A95               	bcf	149,5,c	;volatile
  2836                           
  2837                           ;lcd.c: 69:  TRISDbits.TRISD6 = 0;
  2838   000E6E  9C95               	bcf	149,6,c	;volatile
  2839                           
  2840                           ;lcd.c: 70:  TRISDbits.TRISD7 = 0;
  2841   000E70  9E95               	bcf	149,7,c	;volatile
  2842   000E72                     
  2843                           ;lcd.c: 71:     Lcd_Port(0x00);
  2844   000E72  0E00               	movlw	0
  2845   000E74  ECE4  F007         	call	_Lcd_Port
  2846   000E78                     
  2847                           ;lcd.c: 72:     _delay((unsigned long)((20)*(4000000/4000.0)));
  2848   000E78  0E1A               	movlw	26
  2849   000E7A  6E08               	movwf	??_Lcd_Init^0,c
  2850   000E7C  0EF8               	movlw	248
  2851   000E7E                     u1277:
  2852   000E7E  2EE8               	decfsz	wreg,f,c
  2853   000E80  D7FE               	bra	u1277
  2854   000E82  2E08               	decfsz	??_Lcd_Init^0,f,c
  2855   000E84  D7FC               	bra	u1277
  2856   000E86  D000               	nop2	
  2857   000E88                     
  2858                           ;lcd.c: 73:     Lcd_Cmd(0x03);
  2859   000E88  0E03               	movlw	3
  2860   000E8A  ECC5  F008         	call	_Lcd_Cmd
  2861   000E8E                     
  2862                           ;lcd.c: 74:     _delay((unsigned long)((5)*(4000000/4000.0)));
  2863   000E8E  0E07               	movlw	7
  2864   000E90  6E08               	movwf	??_Lcd_Init^0,c
  2865   000E92  0E7D               	movlw	125
  2866   000E94                     u1287:
  2867   000E94  2EE8               	decfsz	wreg,f,c
  2868   000E96  D7FE               	bra	u1287
  2869   000E98  2E08               	decfsz	??_Lcd_Init^0,f,c
  2870   000E9A  D7FC               	bra	u1287
  2871   000E9C  0000               	nop	
  2872   000E9E                     
  2873                           ;lcd.c: 75:     Lcd_Cmd(0x03);
  2874   000E9E  0E03               	movlw	3
  2875   000EA0  ECC5  F008         	call	_Lcd_Cmd
  2876   000EA4                     
  2877                           ;lcd.c: 76:     _delay((unsigned long)((11)*(4000000/4000.0)));
  2878   000EA4  0E0F               	movlw	15
  2879   000EA6  6E08               	movwf	??_Lcd_Init^0,c
  2880   000EA8  0E48               	movlw	72
  2881   000EAA                     u1297:
  2882   000EAA  2EE8               	decfsz	wreg,f,c
  2883   000EAC  D7FE               	bra	u1297
  2884   000EAE  2E08               	decfsz	??_Lcd_Init^0,f,c
  2885   000EB0  D7FC               	bra	u1297
  2886   000EB2                     
  2887                           ;lcd.c: 77:     Lcd_Cmd(0x03);
  2888   000EB2  0E03               	movlw	3
  2889   000EB4  ECC5  F008         	call	_Lcd_Cmd
  2890   000EB8                     
  2891                           ;lcd.c: 78:     Lcd_Cmd(0x02);
  2892   000EB8  0E02               	movlw	2
  2893   000EBA  ECC5  F008         	call	_Lcd_Cmd
  2894   000EBE                     
  2895                           ;lcd.c: 79:     Lcd_Cmd(0x02);
  2896   000EBE  0E02               	movlw	2
  2897   000EC0  ECC5  F008         	call	_Lcd_Cmd
  2898   000EC4                     
  2899                           ;lcd.c: 80:     Lcd_Cmd(0x08);
  2900   000EC4  0E08               	movlw	8
  2901   000EC6  ECC5  F008         	call	_Lcd_Cmd
  2902   000ECA                     
  2903                           ;lcd.c: 81:     Lcd_Cmd(0x00);
  2904   000ECA  0E00               	movlw	0
  2905   000ECC  ECC5  F008         	call	_Lcd_Cmd
  2906   000ED0                     
  2907                           ;lcd.c: 82:     Lcd_Cmd(0x0C);
  2908   000ED0  0E0C               	movlw	12
  2909   000ED2  ECC5  F008         	call	_Lcd_Cmd
  2910   000ED6                     
  2911                           ;lcd.c: 83:     Lcd_Cmd(0x00);
  2912   000ED6  0E00               	movlw	0
  2913   000ED8  ECC5  F008         	call	_Lcd_Cmd
  2914   000EDC                     
  2915                           ;lcd.c: 84:     Lcd_Cmd(0x06);
  2916   000EDC  0E06               	movlw	6
  2917   000EDE  ECC5  F008         	call	_Lcd_Cmd
  2918   000EE2                     
  2919                           ;lcd.c: 85:     Lcd_Clear();
  2920   000EE2  ECE7  F008         	call	_Lcd_Clear	;wreg free
  2921   000EE6  0012               	return		;funcret
  2922   000EE8                     __end_of_Lcd_Init:
  2923                           	callstack 0
  2924                           
  2925 ;; *************** function _Lcd_Clear *****************
  2926 ;; Defined at:
  2927 ;;		line 20 in file "lcd.c"
  2928 ;; Parameters:    Size  Location     Type
  2929 ;;		None
  2930 ;; Auto vars:     Size  Location     Type
  2931 ;;		None
  2932 ;; Return value:  Size  Location     Type
  2933 ;;                  1    wreg      void 
  2934 ;; Registers used:
  2935 ;;		wreg, status,2, cstack
  2936 ;; Tracked objects:
  2937 ;;		On entry : 0/0
  2938 ;;		On exit  : 0/0
  2939 ;;		Unchanged: 0/0
  2940 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2941 ;;      Params:         0       0       0       0       0       0       0       0       0
  2942 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2943 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2944 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2945 ;;Total ram usage:        0 bytes
  2946 ;; Hardware stack levels used: 1
  2947 ;; Hardware stack levels required when called: 4
  2948 ;; This function calls:
  2949 ;;		_Lcd_Cmd
  2950 ;; This function is called by:
  2951 ;;		_Lcd_Init
  2952 ;; This function uses a non-reentrant model
  2953 ;;
  2954                           
  2955                           	psect	text18
  2956   0011CE                     __ptext18:
  2957                           	callstack 0
  2958   0011CE                     _Lcd_Clear:
  2959                           	callstack 25
  2960   0011CE                     
  2961                           ;lcd.c: 22:     Lcd_Cmd(0);
  2962   0011CE  0E00               	movlw	0
  2963   0011D0  ECC5  F008         	call	_Lcd_Cmd
  2964                           
  2965                           ;lcd.c: 23:     Lcd_Cmd(1);
  2966   0011D4  0E01               	movlw	1
  2967   0011D6  ECC5  F008         	call	_Lcd_Cmd
  2968   0011DA  0012               	return		;funcret
  2969   0011DC                     __end_of_Lcd_Clear:
  2970                           	callstack 0
  2971                           
  2972 ;; *************** function _Lcd_Cmd *****************
  2973 ;; Defined at:
  2974 ;;		line 11 in file "lcd.c"
  2975 ;; Parameters:    Size  Location     Type
  2976 ;;  a               1    wreg     unsigned char 
  2977 ;; Auto vars:     Size  Location     Type
  2978 ;;  a               1    6[COMRAM] unsigned char 
  2979 ;; Return value:  Size  Location     Type
  2980 ;;                  1    wreg      void 
  2981 ;; Registers used:
  2982 ;;		wreg, status,2, cstack
  2983 ;; Tracked objects:
  2984 ;;		On entry : 0/0
  2985 ;;		On exit  : 0/0
  2986 ;;		Unchanged: 0/0
  2987 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2988 ;;      Params:         0       0       0       0       0       0       0       0       0
  2989 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2990 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2991 ;;      Totals:         2       0       0       0       0       0       0       0       0
  2992 ;;Total ram usage:        2 bytes
  2993 ;; Hardware stack levels used: 1
  2994 ;; Hardware stack levels required when called: 3
  2995 ;; This function calls:
  2996 ;;		_Lcd_Port
  2997 ;; This function is called by:
  2998 ;;		_main
  2999 ;;		_Lcd_Clear
  3000 ;;		_Lcd_Set_Cursor
  3001 ;;		_Lcd_Init
  3002 ;;		_Lcd_Shift_Right
  3003 ;;		_Lcd_Shift_Left
  3004 ;;		_Lcd_Blink
  3005 ;;		_Lcd_NoBlink
  3006 ;;		_Lcd_CGRAM_Init
  3007 ;;		_Lcd_CGRAM_Close
  3008 ;; This function uses a non-reentrant model
  3009 ;;
  3010                           
  3011                           	psect	text19
  3012   00118A                     __ptext19:
  3013                           	callstack 0
  3014   00118A                     _Lcd_Cmd:
  3015                           	callstack 25
  3016                           
  3017                           ;incstack = 0
  3018                           ;Lcd_Cmd@a stored from wreg
  3019   00118A  6E07               	movwf	Lcd_Cmd@a^0,c
  3020   00118C                     
  3021                           ;lcd.c: 11: void Lcd_Cmd(char a);lcd.c: 12: {;lcd.c: 13:     LATDbits.LD2 = 0;
  3022   00118C  948C               	bcf	140,2,c	;volatile
  3023   00118E                     
  3024                           ;lcd.c: 14:     Lcd_Port(a);
  3025   00118E  5007               	movf	Lcd_Cmd@a^0,w,c
  3026   001190  ECE4  F007         	call	_Lcd_Port
  3027   001194                     
  3028                           ;lcd.c: 15:     LATDbits.LD3 = 1;
  3029   001194  868C               	bsf	140,3,c	;volatile
  3030   001196                     
  3031                           ;lcd.c: 16:     _delay((unsigned long)((4)*(4000000/4000.0)));
  3032   001196  0E06               	movlw	6
  3033   001198  6E06               	movwf	??_Lcd_Cmd^0,c
  3034   00119A  0E30               	movlw	48
  3035   00119C                     u1307:
  3036   00119C  2EE8               	decfsz	wreg,f,c
  3037   00119E  D7FE               	bra	u1307
  3038   0011A0  2E06               	decfsz	??_Lcd_Cmd^0,f,c
  3039   0011A2  D7FC               	bra	u1307
  3040   0011A4  D000               	nop2	
  3041   0011A6                     
  3042                           ;lcd.c: 17:     LATDbits.LD3 = 0;
  3043   0011A6  968C               	bcf	140,3,c	;volatile
  3044   0011A8  0012               	return		;funcret
  3045   0011AA                     __end_of_Lcd_Cmd:
  3046                           	callstack 0
  3047                           
  3048 ;; *************** function _Lcd_Port *****************
  3049 ;; Defined at:
  3050 ;;		line 3 in file "lcd.c"
  3051 ;; Parameters:    Size  Location     Type
  3052 ;;  a               1    wreg     unsigned char 
  3053 ;; Auto vars:     Size  Location     Type
  3054 ;;  a               1    4[COMRAM] unsigned char 
  3055 ;; Return value:  Size  Location     Type
  3056 ;;                  1    wreg      void 
  3057 ;; Registers used:
  3058 ;;		wreg
  3059 ;; Tracked objects:
  3060 ;;		On entry : 0/0
  3061 ;;		On exit  : 0/0
  3062 ;;		Unchanged: 0/0
  3063 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3064 ;;      Params:         0       0       0       0       0       0       0       0       0
  3065 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3066 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3067 ;;      Totals:         1       0       0       0       0       0       0       0       0
  3068 ;;Total ram usage:        1 bytes
  3069 ;; Hardware stack levels used: 1
  3070 ;; Hardware stack levels required when called: 2
  3071 ;; This function calls:
  3072 ;;		Nothing
  3073 ;; This function is called by:
  3074 ;;		_Lcd_Cmd
  3075 ;;		_Lcd_Init
  3076 ;;		_Lcd_Write_Char
  3077 ;; This function uses a non-reentrant model
  3078 ;;
  3079                           
  3080                           	psect	text20
  3081   000FC8                     __ptext20:
  3082                           	callstack 0
  3083   000FC8                     _Lcd_Port:
  3084                           	callstack 24
  3085                           
  3086                           ;incstack = 0
  3087                           ;Lcd_Port@a stored from wreg
  3088   000FC8  6E05               	movwf	Lcd_Port@a^0,c
  3089   000FCA                     
  3090                           ;lcd.c: 3: void Lcd_Port(char a);lcd.c: 4: {;lcd.c: 5:     (a & 1) ? (LATDbits.LD4 = 1) 
      +                          : (LATDbits.LD4 = 0);
  3091   000FCA  A005               	btfss	Lcd_Port@a^0,0,c
  3092   000FCC  EFEA  F007         	goto	u181
  3093   000FD0  EFEC  F007         	goto	u180
  3094   000FD4                     u181:
  3095   000FD4  EFEF  F007         	goto	l147
  3096   000FD8                     u180:
  3097   000FD8  888C               	bsf	140,4,c	;volatile
  3098   000FDA  EFF0  F007         	goto	l1096
  3099   000FDE                     l147:
  3100   000FDE  988C               	bcf	140,4,c	;volatile
  3101   000FE0                     l1096:
  3102                           
  3103                           ;lcd.c: 6:     (a & 2) ? (LATDbits.LD5 = 1) : (LATDbits.LD5 = 0);
  3104   000FE0  A205               	btfss	Lcd_Port@a^0,1,c
  3105   000FE2  EFF5  F007         	goto	u191
  3106   000FE6  EFF7  F007         	goto	u190
  3107   000FEA                     u191:
  3108   000FEA  EFFA  F007         	goto	l151
  3109   000FEE                     u190:
  3110   000FEE  8A8C               	bsf	140,5,c	;volatile
  3111   000FF0  EFFB  F007         	goto	l1100
  3112   000FF4                     l151:
  3113   000FF4  9A8C               	bcf	140,5,c	;volatile
  3114   000FF6                     l1100:
  3115                           
  3116                           ;lcd.c: 7:     (a & 4) ? (LATDbits.LD6 = 1) : (LATDbits.LD6 = 0);
  3117   000FF6  A405               	btfss	Lcd_Port@a^0,2,c
  3118   000FF8  EF00  F008         	goto	u201
  3119   000FFC  EF02  F008         	goto	u200
  3120   001000                     u201:
  3121   001000  EF05  F008         	goto	l155
  3122   001004                     u200:
  3123   001004  8C8C               	bsf	140,6,c	;volatile
  3124   001006  EF06  F008         	goto	l1104
  3125   00100A                     l155:
  3126   00100A  9C8C               	bcf	140,6,c	;volatile
  3127   00100C                     l1104:
  3128                           
  3129                           ;lcd.c: 8:     (a & 8) ? (LATDbits.LD7 = 1) : (LATDbits.LD7 = 0);
  3130   00100C  A605               	btfss	Lcd_Port@a^0,3,c
  3131   00100E  EF0B  F008         	goto	u211
  3132   001012  EF0D  F008         	goto	u210
  3133   001016                     u211:
  3134   001016  EF10  F008         	goto	l159
  3135   00101A                     u210:
  3136   00101A  8E8C               	bsf	140,7,c	;volatile
  3137   00101C  EF11  F008         	goto	l162
  3138   001020                     l159:
  3139   001020  9E8C               	bcf	140,7,c	;volatile
  3140   001022                     l162:
  3141   001022  0012               	return		;funcret
  3142   001024                     __end_of_Lcd_Port:
  3143                           	callstack 0
  3144                           
  3145 ;; *************** function _LowISR *****************
  3146 ;; Defined at:
  3147 ;;		line 99 in file "Cinta.c"
  3148 ;; Parameters:    Size  Location     Type
  3149 ;;		None
  3150 ;; Auto vars:     Size  Location     Type
  3151 ;;  dummy           1    3[COMRAM] volatile unsigned char 
  3152 ;; Return value:  Size  Location     Type
  3153 ;;                  1    wreg      void 
  3154 ;; Registers used:
  3155 ;;		wreg, status,2, status,0
  3156 ;; Tracked objects:
  3157 ;;		On entry : 0/0
  3158 ;;		On exit  : 0/0
  3159 ;;		Unchanged: 0/0
  3160 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3161 ;;      Params:         0       0       0       0       0       0       0       0       0
  3162 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3163 ;;      Temps:          3       0       0       0       0       0       0       0       0
  3164 ;;      Totals:         4       0       0       0       0       0       0       0       0
  3165 ;;Total ram usage:        4 bytes
  3166 ;; Hardware stack levels used: 1
  3167 ;; Hardware stack levels required when called: 1
  3168 ;; This function calls:
  3169 ;;		Nothing
  3170 ;; This function is called by:
  3171 ;;		Interrupt level 1
  3172 ;; This function uses a non-reentrant model
  3173 ;;
  3174                           
  3175                           	psect	intcodelo
  3176   000018                     __pintcodelo:
  3177                           	callstack 0
  3178   000018                     _LowISR:
  3179                           	callstack 22
  3180                           
  3181                           ;incstack = 0
  3182   000018  8053               	bsf	int$flags,0,c	;set compiler interrupt flag (level 1)
  3183   00001A  CFD8 F001          	movff	status,??_LowISR
  3184   00001E  CFE8 F002          	movff	wreg,??_LowISR+1
  3185   000022  CFE0 F003          	movff	bsr,??_LowISR+2
  3186   000026                     
  3187                           ;Cinta.c: 100:      if (INTCONbits.RBIF){
  3188   000026  A0F2               	btfss	242,0,c	;volatile
  3189   000028  EF18  F000         	goto	i1u46_21
  3190   00002C  EF1A  F000         	goto	i1u46_20
  3191   000030                     i1u46_21:
  3192   000030  EF30  F000         	goto	i1l92
  3193   000034                     i1u46_20:
  3194   000034                     
  3195                           ;Cinta.c: 101:        volatile unsigned char dummy = PORTB;
  3196   000034  CF81 F004          	movff	3969,LowISR@dummy	;volatile
  3197                           
  3198                           ;Cinta.c: 102:         INTCONbits.RBIF=0;
  3199   000038  90F2               	bcf	242,0,c	;volatile
  3200                           
  3201                           ;Cinta.c: 103:         if(PORTBbits.RB5==1){
  3202   00003A  AA81               	btfss	129,5,c	;volatile
  3203   00003C  EF22  F000         	goto	i1u47_21
  3204   000040  EF24  F000         	goto	i1u47_20
  3205   000044                     i1u47_21:
  3206   000044  EF26  F000         	goto	i1l1338
  3207   000048                     i1u47_20:
  3208   000048                     
  3209                           ;Cinta.c: 104:             negra++;
  3210   000048  4A4E               	infsnz	_negra^0,f,c
  3211   00004A  2A4F               	incf	(_negra+1)^0,f,c
  3212   00004C                     i1l1338:
  3213                           
  3214                           ;Cinta.c: 107:          if(PORTBbits.RB7==1){
  3215   00004C  AE81               	btfss	129,7,c	;volatile
  3216   00004E  EF2B  F000         	goto	i1u48_21
  3217   000052  EF2D  F000         	goto	i1u48_20
  3218   000056                     i1u48_21:
  3219   000056  EF2F  F000         	goto	i1l91
  3220   00005A                     i1u48_20:
  3221   00005A  EF30  F000         	goto	i1l92
  3222   00005E                     i1l91:
  3223                           
  3224                           ;Cinta.c: 110:          if(PORTBbits.RB6==1){
  3225   00005E  5081               	movf	129,w,c	;volatile
  3226   000060                     i1l92:
  3227   000060  C003  FFE0         	movff	??_LowISR+2,bsr
  3228   000064  C002  FFE8         	movff	??_LowISR+1,wreg
  3229   000068  C001  FFD8         	movff	??_LowISR,status
  3230   00006C  9053               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  3231   00006E  0010               	retfie	
  3232   000070                     __end_of_LowISR:
  3233                           	callstack 0
  3234                           
  3235 ;; *************** function _HighISR *****************
  3236 ;; Defined at:
  3237 ;;		line 93 in file "Cinta.c"
  3238 ;; Parameters:    Size  Location     Type
  3239 ;;		None
  3240 ;; Auto vars:     Size  Location     Type
  3241 ;;		None
  3242 ;; Return value:  Size  Location     Type
  3243 ;;                  1    wreg      void 
  3244 ;; Registers used:
  3245 ;;		None
  3246 ;; Tracked objects:
  3247 ;;		On entry : 0/0
  3248 ;;		On exit  : 0/0
  3249 ;;		Unchanged: 0/0
  3250 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3251 ;;      Params:         0       0       0       0       0       0       0       0       0
  3252 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3253 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3254 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3255 ;;Total ram usage:        0 bytes
  3256 ;; Hardware stack levels used: 1
  3257 ;; This function calls:
  3258 ;;		Nothing
  3259 ;; This function is called by:
  3260 ;;		Interrupt level 2
  3261 ;; This function uses a non-reentrant model
  3262 ;;
  3263                           
  3264                           	psect	intcode
  3265   000008                     __pintcode:
  3266                           	callstack 0
  3267   000008                     _HighISR:
  3268                           	callstack 22
  3269                           
  3270                           ;incstack = 0
  3271   000008  8253               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  3272   00000A  EDEE  F008         	call	int_func,f	;refresh shadow registers
  3273                           
  3274                           	psect	intcode_body
  3275   0011DC                     __pintcode_body:
  3276                           	callstack 22
  3277   0011DC                     int_func:
  3278                           	callstack 22
  3279   0011DC  0006               	pop		; remove dummy address from shadow register refresh
  3280   0011DE  9253               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  3281   0011E0  0011               	retfie		f
  3282   0011E2                     __end_of_HighISR:
  3283                           	callstack 0
  3284                           
  3285                           	psect	rparam
  3286   000001                     ___rparam_used  equ	1
  3287   000000                     ___param_bank   equ	0
  3288   000000                     __Lparam        equ	__Lrparam
  3289   000000                     __Hparam        equ	__Hrparam
  3290                           
  3291                           	psect	temp
  3292   000053                     btemp:
  3293                           	callstack 0
  3294   000053                     	ds	1
  3295   000053                     int$flags       set	btemp
  3296   000054                     wtemp8          set	btemp+1
  3297   000054                     ttemp5          set	btemp+1
  3298   000057                     ttemp6          set	btemp+4
  3299   00005B                     ttemp7          set	btemp+8
  3300                           
  3301                           	psect	config
  3302                           
  3303                           ;Config register CONFIG1L @ 0x300000
  3304                           ;	PLL Prescaler Selection bits
  3305                           ;	PLLDIV = 1, No prescale (4 MHz oscillator input drives PLL directly)
  3306                           ;	System Clock Postscaler Selection bits
  3307                           ;	CPUDIV = OSC1_PLL2, [Primary Oscillator Src: /1][96 MHz PLL Src: /2]
  3308                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
  3309                           ;	USBDIV = 1, USB clock source comes directly from the primary oscillator block with no 
      +                          postscale
  3310   300000                     	org	3145728
  3311   300000  00                 	db	0
  3312                           
  3313                           ;Config register CONFIG1H @ 0x300001
  3314                           ;	Oscillator Selection bits
  3315                           ;	FOSC = INTOSCIO_EC, Internal oscillator, port function on RA6, EC used by USB (INTIO)
  3316                           ;	Fail-Safe Clock Monitor Enable bit
  3317                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  3318                           ;	Internal/External Oscillator Switchover bit
  3319                           ;	IESO = OFF, Oscillator Switchover mode disabled
  3320   300001                     	org	3145729
  3321   300001  08                 	db	8
  3322                           
  3323                           ;Config register CONFIG2L @ 0x300002
  3324                           ;	Power-up Timer Enable bit
  3325                           ;	PWRT = OFF, PWRT disabled
  3326                           ;	Brown-out Reset Enable bits
  3327                           ;	BOR = OFF, Brown-out Reset disabled in hardware and software
  3328                           ;	Brown-out Reset Voltage bits
  3329                           ;	BORV = 3, Minimum setting 2.05V
  3330                           ;	USB Voltage Regulator Enable bit
  3331                           ;	VREGEN = OFF, USB voltage regulator disabled
  3332   300002                     	org	3145730
  3333   300002  19                 	db	25
  3334                           
  3335                           ;Config register CONFIG2H @ 0x300003
  3336                           ;	Watchdog Timer Enable bit
  3337                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  3338                           ;	Watchdog Timer Postscale Select bits
  3339                           ;	WDTPS = 32768, 1:32768
  3340   300003                     	org	3145731
  3341   300003  1E                 	db	30
  3342                           
  3343                           ; Padding undefined space
  3344   300004                     	org	3145732
  3345   300004  FF                 	db	255
  3346                           
  3347                           ;Config register CONFIG3H @ 0x300005
  3348                           ;	CCP2 MUX bit
  3349                           ;	CCP2MX = OFF, CCP2 input/output is multiplexed with RB3
  3350                           ;	PORTB A/D Enable bit
  3351                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  3352                           ;	Low-Power Timer 1 Oscillator Enable bit
  3353                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  3354                           ;	MCLR Pin Enable bit
  3355                           ;	MCLRE = OFF, RE3 input pin enabled; MCLR pin disabled
  3356   300005                     	org	3145733
  3357   300005  00                 	db	0
  3358                           
  3359                           ;Config register CONFIG4L @ 0x300006
  3360                           ;	Stack Full/Underflow Reset Enable bit
  3361                           ;	STVREN = OFF, Stack full/underflow will not cause Reset
  3362                           ;	Single-Supply ICSP Enable bit
  3363                           ;	LVP = OFF, Single-Supply ICSP disabled
  3364                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
  3365                           ;	ICPRT = ON, ICPORT enabled
  3366                           ;	Extended Instruction Set Enable bit
  3367                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  3368                           ;	Background Debugger Enable bit
  3369                           ;	DEBUG = 0x1, unprogrammed default
  3370   300006                     	org	3145734
  3371   300006  A0                 	db	160
  3372                           
  3373                           ; Padding undefined space
  3374   300007                     	org	3145735
  3375   300007  FF                 	db	255
  3376                           
  3377                           ;Config register CONFIG5L @ 0x300008
  3378                           ;	Code Protection bit
  3379                           ;	CP0 = OFF, Block 0 (000800-001FFFh) is not code-protected
  3380                           ;	Code Protection bit
  3381                           ;	CP1 = OFF, Block 1 (002000-003FFFh) is not code-protected
  3382                           ;	Code Protection bit
  3383                           ;	CP2 = OFF, Block 2 (004000-005FFFh) is not code-protected
  3384                           ;	Code Protection bit
  3385                           ;	CP3 = OFF, Block 3 (006000-007FFFh) is not code-protected
  3386   300008                     	org	3145736
  3387   300008  0F                 	db	15
  3388                           
  3389                           ;Config register CONFIG5H @ 0x300009
  3390                           ;	Boot Block Code Protection bit
  3391                           ;	CPB = OFF, Boot block (000000-0007FFh) is not code-protected
  3392                           ;	Data EEPROM Code Protection bit
  3393                           ;	CPD = OFF, Data EEPROM is not code-protected
  3394   300009                     	org	3145737
  3395   300009  C0                 	db	192
  3396                           
  3397                           ;Config register CONFIG6L @ 0x30000A
  3398                           ;	Write Protection bit
  3399                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) is not write-protected
  3400                           ;	Write Protection bit
  3401                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) is not write-protected
  3402                           ;	Write Protection bit
  3403                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) is not write-protected
  3404                           ;	Write Protection bit
  3405                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) is not write-protected
  3406   30000A                     	org	3145738
  3407   30000A  0F                 	db	15
  3408                           
  3409                           ;Config register CONFIG6H @ 0x30000B
  3410                           ;	Configuration Register Write Protection bit
  3411                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
  3412                           ;	Boot Block Write Protection bit
  3413                           ;	WRTB = OFF, Boot block (000000-0007FFh) is not write-protected
  3414                           ;	Data EEPROM Write Protection bit
  3415                           ;	WRTD = OFF, Data EEPROM is not write-protected
  3416   30000B                     	org	3145739
  3417   30000B  E0                 	db	224
  3418                           
  3419                           ;Config register CONFIG7L @ 0x30000C
  3420                           ;	Table Read Protection bit
  3421                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) is not protected from table reads executed in ot
      +                          her blocks
  3422                           ;	Table Read Protection bit
  3423                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) is not protected from table reads executed in ot
      +                          her blocks
  3424                           ;	Table Read Protection bit
  3425                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) is not protected from table reads executed in ot
      +                          her blocks
  3426                           ;	Table Read Protection bit
  3427                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) is not protected from table reads executed in ot
      +                          her blocks
  3428   30000C                     	org	3145740
  3429   30000C  0F                 	db	15
  3430                           
  3431                           ;Config register CONFIG7H @ 0x30000D
  3432                           ;	Boot Block Table Read Protection bit
  3433                           ;	EBTRB = OFF, Boot block (000000-0007FFh) is not protected from table reads executed in
      +                           other blocks
  3434   30000D                     	org	3145741
  3435   30000D  40                 	db	64
  3436                           tosu	equ	0xFFF
  3437                           tosh	equ	0xFFE
  3438                           tosl	equ	0xFFD
  3439                           stkptr	equ	0xFFC
  3440                           pclatu	equ	0xFFB
  3441                           pclath	equ	0xFFA
  3442                           pcl	equ	0xFF9
  3443                           tblptru	equ	0xFF8
  3444                           tblptrh	equ	0xFF7
  3445                           tblptrl	equ	0xFF6
  3446                           tablat	equ	0xFF5
  3447                           prodh	equ	0xFF4
  3448                           prodl	equ	0xFF3
  3449                           indf0	equ	0xFEF
  3450                           postinc0	equ	0xFEE
  3451                           postdec0	equ	0xFED
  3452                           preinc0	equ	0xFEC
  3453                           plusw0	equ	0xFEB
  3454                           fsr0h	equ	0xFEA
  3455                           fsr0l	equ	0xFE9
  3456                           wreg	equ	0xFE8
  3457                           indf1	equ	0xFE7
  3458                           postinc1	equ	0xFE6
  3459                           postdec1	equ	0xFE5
  3460                           preinc1	equ	0xFE4
  3461                           plusw1	equ	0xFE3
  3462                           fsr1h	equ	0xFE2
  3463                           fsr1l	equ	0xFE1
  3464                           bsr	equ	0xFE0
  3465                           indf2	equ	0xFDF
  3466                           postinc2	equ	0xFDE
  3467                           postdec2	equ	0xFDD
  3468                           preinc2	equ	0xFDC
  3469                           plusw2	equ	0xFDB
  3470                           fsr2h	equ	0xFDA
  3471                           fsr2l	equ	0xFD9
  3472                           status	equ	0xFD8

Data Sizes:
    Strings     19
    Constant    0
    Data        0
    BSS         43
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     71      82
    BANK0           160      0      32
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    f$.$buffer	PTR unsigned char  size(1) Largest target is 20
		 -> mostrar_variable@buffer(COMRAM[20]), 

    f$.$source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(COMRAM[11]), 

    fputc@fp$.$buffer	PTR unsigned char  size(1) Largest target is 20
		 -> mostrar_variable@buffer(COMRAM[20]), 

    fputc@fp$.$source	PTR const unsigned char  size(2) Largest target is 0

    Lcd_Write_String@a	PTR const unsigned char  size(2) Largest target is 20
		 -> mostrar_variable@buffer(COMRAM[20]), STR_2(CODE[7]), STR_3(CODE[9]), 

    S1120$buffer	PTR unsigned char  size(1) Largest target is 20
		 -> mostrar_variable@buffer(COMRAM[20]), 

    S1120$source	PTR const unsigned char  size(2) Largest target is 0

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(COMRAM[2]), 

    sprintf@fmt	PTR const unsigned char  size(1) Largest target is 3
		 -> STR_1(CODE[3]), 

    sprintf@s	PTR unsigned char  size(1) Largest target is 20
		 -> mostrar_variable@buffer(COMRAM[20]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(COMRAM[1]), 

    vfpfcnvrt@cp	PTR unsigned char  size(1) Largest target is 3
		 -> STR_1(CODE[3]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 1
		 -> vfprintf@cfmt(COMRAM[1]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(COMRAM[11]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(COMRAM[1]), 

    vfprintf@cfmt	PTR unsigned char  size(1) Largest target is 3
		 -> STR_1(CODE[3]), 

    vfprintf@fmt	PTR const unsigned char  size(1) Largest target is 3
		 -> STR_1(CODE[3]), 

    vfprintf@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(COMRAM[11]), 


Critical Paths under _main in COMRAM

    _mostrar_conteo->_mostrar_variable
    _mostrar_variable->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_abs
    _abs->___awmod
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Clear->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port

Critical Paths under _LowISR in COMRAM

    None.

Critical Paths under _HighISR in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _LowISR in BANK0

    None.

Critical Paths under _HighISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _LowISR in BANK1

    None.

Critical Paths under _HighISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _LowISR in BANK2

    None.

Critical Paths under _HighISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _LowISR in BANK3

    None.

Critical Paths under _HighISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _LowISR in BANK4

    None.

Critical Paths under _HighISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _LowISR in BANK5

    None.

Critical Paths under _HighISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _LowISR in BANK6

    None.

Critical Paths under _HighISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _LowISR in BANK7

    None.

Critical Paths under _HighISR in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0    3213
                                             67 COMRAM     4     4      0
                            _Lcd_Cmd
                           _Lcd_Init
                           _init_int
                       _init_maqueta
                         _init_ports
                     _mostrar_conteo
 ---------------------------------------------------------------------------------
 (1) _mostrar_conteo                                       0     0      0    2904
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
                   _mostrar_variable
 ---------------------------------------------------------------------------------
 (2) _mostrar_variable                                    22    20      2    2046
                                             45 COMRAM    22    20      2
                   _Lcd_Write_String
                            _sprintf
 ---------------------------------------------------------------------------------
 (3) _sprintf                                             18    14      4    1760
                                             29 COMRAM    16    12      4
                           _vfprintf
 ---------------------------------------------------------------------------------
 (4) _vfprintf                                             4     1      3    1559
                                             25 COMRAM     4     1      3
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (5) _vfpfcnvrt                                           11     8      3    1434
                                             14 COMRAM    11     8      3
                            ___awdiv
                            ___awmod
                                _abs
                              _fputc
 ---------------------------------------------------------------------------------
 (6) _fputc                                                8     5      3     230
                                              4 COMRAM     8     5      3
                              _putch
 ---------------------------------------------------------------------------------
 (7) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (6) _abs                                                  4     2      2      67
                                             10 COMRAM     4     2      2
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (6) ___awmod                                              6     2      4     298
                                              4 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (6) ___awdiv                                              8     4      4     302
                                              4 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (3) _Lcd_Write_String                                     6     4      2     213
                                              8 COMRAM     6     4      2
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (4) _Lcd_Write_Char                                       3     3      0     120
                                              5 COMRAM     3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (2) _Lcd_Set_Cursor                                       5     4      1     645
                                              7 COMRAM     5     4      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _init_ports                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_maqueta                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_int                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             1     1      0     210
                                              7 COMRAM     1     1      0
                          _Lcd_Clear
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (2) _Lcd_Clear                                            0     0      0      75
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (3) _Lcd_Cmd                                              2     2      0      75
                                              5 COMRAM     2     2      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (5) _Lcd_Port                                             1     1      0      60
                                              4 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (8) _LowISR                                               4     4      0       0
                                              0 COMRAM     4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _HighISR                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Lcd_Cmd
     _Lcd_Port
   _Lcd_Init
     _Lcd_Clear
       _Lcd_Cmd
     _Lcd_Cmd
     _Lcd_Port
   _init_int
   _init_maqueta
   _init_ports
   _mostrar_conteo
     _Lcd_Set_Cursor
       _Lcd_Cmd
     _Lcd_Write_String
       _Lcd_Write_Char
         _Lcd_Port
     _mostrar_variable
       _Lcd_Write_String
       _sprintf
         _vfprintf
           _vfpfcnvrt
             ___awdiv
             ___awmod
             _abs
               ___awmod (ARG)
             _fputc
               _putch

 _LowISR (ROOT)

 _HighISR (ROOT)

Address spaces:
Name               Size   Autos  Total    Usage
BIGRAM            2047      0       0      0.0%
BITBANK7           256      0       0      0.0%
BANK7              256      0       0      0.0%
BITBANK6           256      0       0      0.0%
BANK6              256      0       0      0.0%
BITBANK5           256      0       0      0.0%
BANK5              256      0       0      0.0%
BITBANK4           256      0       0      0.0%
BANK4              256      0       0      0.0%
BITBANK3           256      0       0      0.0%
BANK3              256      0       0      0.0%
BITBANK2           256      0       0      0.0%
BANK2              256      0       0      0.0%
BITBANK1           256      0       0      0.0%
BANK1              256      0       0      0.0%
BITBANK0           160      0       0      0.0%
BANK0              160      0      32     20.0%
BITBIGSFRh         126      0       0      0.0%
BITCOMRAM           94      0       0      0.0%
COMRAM              94     71      82     87.2%
BITBIGSFRl          33      0       0      0.0%
STACK                0      0       0      0.0%
DATA                 0      0     114      0.0%


Microchip Technology PIC18 Macro Assembler V3.00 build 20241204225717 
Symbol Table                                                                                   Wed Sep 24 21:30:33 2025

                      l61 11CC                        l71 0FA4                        l55 1188  
                      l64 0F86                        l73 0FB6                        l65 0F76  
                      l58 11BE                        l75 0FC4                        l67 0F84  
                      l76 0FC6                        l68 0FA6                        l69 0F96  
                      l79 1064                        l98 0A04              ___awdiv@sign 000A  
                      bsr 0FE0                       l100 0A12                       l101 0A14  
                     l110 0A76                       l103 0A22                       l112 0A84  
                     l104 0A26                       l121 0ACE                       l113 0A86  
                     l130 0B20                       l106 0A34                       l131 0B24  
                     l115 0A94                       l107 0A66                       l124 0AE4  
                     l116 0AB0                       l133 0B32                       l109 0A74  
                     l134 0B4E                       l118 0ABE                       l151 0FF4  
                     l127 0AF2                       l119 0AC0                       l136 0B5C  
                     l137 0B76                       l162 1022                       l155 100A  
                     l147 0FDE                       l165 11A8                       l181 0EE6  
                     l174 0C4A                       l190 0F64                       l159 1020  
                     l168 11DA                       l184 10DA                       l178 0C4A  
                     l471 0D0C                       l484 0DBA                       l918 110E  
                     l962 10A2                       l956 09CC                       l981 0E64  
                     l966 112A                       l992 11E2                       l969 1142  
                     u200 1004                       u201 1000                       u210 101A  
                     u211 1016                       u400 0F74                       u401 0F70  
                     u410 0F84                       u411 0F80                       u180 0FD8  
                     u420 0F94                       u181 0FD4                       u421 0F90  
                     u190 0FEE                       u430 0FA4                       u191 0FEA  
                     u431 0FA0                       u440 0FB4                       u441 0FB0  
                     u450 0FC4                       u451 0FC0                       u700 0C5C  
                     u701 0C58                       u710 0C76                       u711 0C72  
                     u720 0C9C                       u800 0D86                       u721 0C98  
                     u801 0D82                       u730 0CBA                       u810 0DAA  
                     u731 0CB6                       u811 0DA6                       u740 0CD6  
                     u820 0DCC                       u900 08C8                       u741 0CD2  
                     u821 0DC8                       u901 08C2                       u750 0CFC  
                     u830 0DDC                       u910 08CA  __end_of_mostrar_variable 118A  
                     u751 0CF8                       u831 0DD8                       u760 0D1E  
                     u840 0E02                       u920 092A                       u761 0D1A  
                     u841 0DFE                       u921 0926                       u770 0D38  
                     u850 0E34                       u930 093A                       u771 0D34  
                     u851 0E30                       u931 0936                       u780 0D52  
                     u860 111E                       u940 094A                       u781 0D4E  
                     u861 111A                       u941 0946                       u790 0D70  
                     u950 095A                       u870 0838                       u791 0D6C  
                     u951 0956                       u871 0834                       u960 099A  
                     u880 0876                       u961 0996                       u881 0872  
                     u890 0892                       u970 109A                       u891 088E  
                     u971 1096                       u980 0F20                       u990 0F54  
                     u987 0F16                       u997 0F4A                       _abs 1110  
            ___awmod@sign 000A                       wreg 0FE8                      l1100 0FF6  
                    l1102 1004                      l1104 100C                      l1106 101A  
                    l1210 118E                      ?_abs 000B                      l1212 1194  
                    l1300 0E72                      l1214 1196                      l1310 0EA4  
                    l1302 0E78                      l1216 11A6                      l1208 118C  
                    l1320 0ECA                      l1312 0EB2                      l1304 0E88  
                    l1160 10B2                      l1322 0ED0                      l1314 0EB8  
                    l1306 0E8E                      l1170 10C8                      l1162 10B4  
                    l1092 0FCA                      l1324 0ED6                      l1316 0EBE  
                    l1308 0E9E                      l1260 11AE                      l1172 10CE  
                    l1164 10BC                      l1500 0C64                      l1094 0FD8  
                    l1326 0EDC                      l1318 0EC4                      l1270 11B8  
                    l1262 11B0                      l1174 10D0                      l1166 10BE  
                    l1158 10A6                      l1510 0C8A                      l1502 0C68  
                    l1096 0FE0                      l1256 11CE                      l1328 0EE2  
                    l1280 0F66                      l1272 11BA                      l1264 11B2  
                    l1176 10D8                      l1168 10C6                      l1520 0CC0  
                    l1512 0C9C                      l1504 0C76                      l1600 0850  
                    l1098 0FEE                      l1282 0F74                      l1274 11BC  
                    l1266 11B4                      l1258 11AA                      l1522 0CD6  
                    l1514 0CA4                      l1530 0CEC                      l1506 0C7E  
                    l1610 08B4                      l1602 085A                      l1284 0F94  
                    l1268 11B6                      l1700 0C0C                      l1532 0CFC  
                    l1524 0CDE                      l1516 0CAC                      l1508 0C82  
                    l1540 0D10                      l1620 093A                      l1612 08CC  
                    l1604 0876                      l1278 11C0                      l1286 0FB4  
                    l1702 0C16                      l1534 0D04                      l1526 0CE0  
                    l1518 0CBA                      l1550 0D40                      l1542 0D1E  
                    l1622 094A                      l1630 0988                      l1614 08FC  
                    l1606 0892                      l1710 1024                      l1704 0C28  
                    l1528 0CE6                      l1560 0D86                      l1552 0D52  
                    l1544 0D26                      l1624 095A                      l1616 0918  
                    l1608 08AA                      l1632 099E                      l1712 1034  
                    l1720 09CE                      l1298 0E66                      l1706 0C3A  
                    l1570 0DB2                      l1562 0D8E                      l1554 0D5A  
                    l1546 0D2A                      l1538 0D0E                      l1626 096C  
                    l1618 092A                      l1642 1066                      l1714 103E  
                    l1730 0A00                      l1722 09D6                      l1708 0C40  
                    l1564 0D94                      l1556 0D62                      l1548 0D38  
                    l1580 0DE6                      l1628 0986                      l1636 09AA  
                    l1644 106E                      l1660 1104                      l1652 10DC  
                    l1716 104E                      l1740 0AAE                      l1732 0A36  
                    l1724 09E8                      l1670 0F28                      l1494 0C4C  
                    l1558 0D70                      l1566 0D9A                      l1590 111E  
                    l1582 0E02                      l1574 0DBC                      l1646 107E  
                    l1654 10E4                      l1718 105A                      l1750 0B4C  
                    l1742 0AD0                      l1734 0A4C                      l1726 09F6  
                    l1680 0B8C                      l1664 0EE8                      l1496 0C4E  
                    l1568 0DAA                      l1584 0E34                      l1576 0DCC  
                    l1592 0816                      l1648 109A                      l1656 10EC  
                    l1672 116A                      l1752 0B5E                      l1744 0B00  
                    l1736 0A64                      l1728 09FC                      l1690 0BD2  
                    l1682 0B9E                      l1666 0EF4                      l1498 0C5C  
                    l1578 0DDC                      l1594 0838                      l1658 10F4  
                    l1674 117E                      l1754 0B74                      l1746 0B04  
                    l1738 0A98                      l1692 0BD8                      l1684 0BA4  
                    l1668 0F24                      l1588 1110                      l1596 0840  
                    l1748 0B36                      l1694 0BE2                      l1686 0BAE  
                    l1678 0B7C                      l1598 084C                      l1696 0BF4  
                    l1688 0BC0                      l1698 0C06                      STR_1 0811  
                    STR_2 080A                      STR_3 0801                      u1000 0F64  
                    u1001 0F60                      u1010 0B8C                      u1011 0B88  
                    u1020 0BC0                      u1100 0A94                      u1021 0BBC  
                    u1101 0A90                      u1030 0BF4                      u1110 0ABE  
                    u1031 0BF0                      u1111 0ABA                      u1040 0C28  
                    u1120 0ACE                      u1041 0C24                      u1121 0ACA  
                    u1130 0AF2                      u1050 0A12                      u1131 0AEE  
                    u1051 0A0E                      u1140 0B00                      u1060 0A22  
                    u1141 0AFC                      u1061 0A1E                      u1150 0B20  
                    u1070 0A34                      u1151 0B1C                      u1207 0A58  
                    u1071 0A30                      u1160 0B32                      u1080 0A74  
                    u1161 0B2E                      u1217 0AA2                      u1081 0A70  
                    u1170 0B5C                      u1090 0A84                      u1307 119C  
                    u1171 0B58                      u1227 0AD6                      u1091 0A80  
                    u1237 0B40                      _LATA 0F89                      u1247 0B68  
                    u1257 10C0                      _LATE 0F8D                      u1267 10D2  
                    u1187 09EE                      u1277 0E7E                      u1197 0A40  
                    u1287 0E94                      u1297 0EAA                      i1l91 005E  
                    i1l92 0060                      i2l84 11DE                      abs@a 000B  
       ?_Lcd_Write_String 0009                      _dbuf 0060                      _main 09CE  
                    _prec 004A                      fsr1h 0FE2                      fsr2h 0FDA  
                    indf1 0FE7                      indf2 0FDF                      fsr1l 0FE1  
                    fsr2l 0FD9                      btemp 0053                      start 0070  
      ??_Lcd_Write_String 000B           __end_of_Lcd_Cmd 11AA           __end_of_HighISR 11E2  
            ___param_bank 0000          ??_mostrar_conteo 0044                     ??_abs 000D  
                   ?_main 0001           __end_of___awdiv 0D0E           __end_of___awmod 0DBC  
         ___awdiv@divisor 0007           ___awdiv@counter 0009              vfpfcnvrt@fmt 0010  
                   _PORTB 0F81                     _TRISA 0F92                     _TRISB 0F93  
                   _TRISC 0F94                     _TRISD 0F95                     _TRISE 0F96  
                   _flags 0052                     _negra 004E                     _fputc 0DBC  
                   _width 0048                     _putch 11E2                     tablat 0FF5  
                   ttemp5 0054                     ttemp6 0057                     ttemp7 005B  
                   status 0FD8                     wtemp8 0054           __end_of_sprintf 1110  
             LowISR@dummy 0004          __end_of_Lcd_Init 0EE8          __end_of_Lcd_Port 1024  
         __initialization 1144              __end_of_main 0B7A                    ??_main 0044  
           __activetblptr 0002                    ?_fputc 0005          ___awdiv@dividend 0005  
                  ?_putch 0001                    i1l1332 0026                    i1l1334 0034  
                  i1l1336 0048                    i1l1338 004C                    i2l1330 11DE  
               ??_Lcd_Cmd 0006             vfpfcnvrt@done 0013                 ??_HighISR 0001  
           ?_init_maqueta 0001                    _LowISR 0018              vfprintf@cfmt 001D  
               ??___awdiv 0009                 ??___awmod 0009                    _blanca 0050  
        __end_of_init_int 11CE                    clear_0 114A                    clear_1 1156  
        ___awdiv@quotient 000B           ___awmod@divisor 0007                    isa$std 0001  
         ___awmod@counter 0009                    fputc@c 0005              __mediumconst 0800  
                  tblptrh 0FF7                    tblptrl 0FF6                    tblptru 0FF8  
                  putch@c 0001          __end_of_vfprintf 10A4                 ??_sprintf 0022  
         Lcd_Set_Cursor@a 0009           Lcd_Set_Cursor@b 0008           Lcd_Set_Cursor@y 000B  
         Lcd_Set_Cursor@z 000A            ??_init_maqueta 0005                __accesstop 0060  
 __end_of__initialization 115C         __end_of_Lcd_Clear 11DC             ___rparam_used 0001  
  mostrar_variable@buffer 0030            __pcstackCOMRAM 0001             __end_of_fputc 0E66  
           __end_of_putch 11E4            _Lcd_Set_Cursor 0B7A         ?_mostrar_variable 002E  
      ??_mostrar_variable 0030                 ?_Lcd_Init 0001                 ?_Lcd_Port 0001  
                 ??_fputc 0008                   ??_putch 0005                __pbssBANK0 0060  
                 ?_LowISR 0001    __end_of_Lcd_Set_Cursor 0C4C                   i1u46_20 0034  
                 i1u46_21 0030                   i1u47_20 0048                   i1u47_21 0044  
                 i1u48_20 005A                   i1u48_21 0056                ??_Lcd_Init 0008  
              ??_Lcd_Port 0005            _Lcd_Write_Char 10A4                   _Lcd_Cmd 118A  
                 _HighISR 0008                 ?_init_int 0001                   __Hparam 0000  
                 __Lparam 0000                   ___awdiv 0C4C                   ___awmod 0D0E  
               ?_vfprintf 001A              __psmallconst 0800                   __pcinit 1144  
              _init_ports 11AA                   __ramtop 0800           ?_Lcd_Set_Cursor 0008  
                 __ptext0 09CE                   __ptext1 1024                   __ptext2 116A  
                 __ptext3 10DC                   __ptext4 1066                   __ptext5 0816  
                 __ptext6 0DBC                   __ptext7 11E2                   __ptext8 1110  
                 __ptext9 0D0E      __end_of_init_maqueta 0FC8          ___awmod@dividend 0005  
                 _sprintf 10DC    __end_of_Lcd_Write_Char 10DC            __pintcode_body 11DC  
    end_of_initialization 115C                   fputc@fp 0007             __Lmediumconst 0000  
              ??_init_int 0005                   int_func 11DC         __end_of_vfpfcnvrt 09CE  
                 postdec2 0FDD                   postinc0 0FEE                   postinc1 0FE6  
                 postinc2 0FDE          vfpfcnvrt@convarg 0015                 Lcd_Port@a 0005  
              ??_vfprintf 001D         mostrar_variable@x 002E                 _PORTBbits 0F81  
               _PORTCbits 0F82                 _TRISDbits 0F95                 _TRISEbits 0F96  
         ?_Lcd_Write_Char 0001         Lcd_Write_String@a 0009         Lcd_Write_String@i 000D  
          __end_of_LowISR 0070                 _Lcd_Clear 11CE               vfpfcnvrt@ap 0011  
             vfpfcnvrt@cp 0014               vfpfcnvrt@fp 000F          _Lcd_Write_String 0EE8  
             ?_init_ports 0001       start_initialization 1144               __end_of_abs 1144  
                ??_LowISR 0001               vfprintf@fmt 001B                ?_Lcd_Clear 0001  
         Lcd_Write_Char@a 0008           Lcd_Write_Char@y 0007               __pbssCOMRAM 0048  
                ?_Lcd_Cmd 0001                  ?_HighISR 0001              _init_maqueta 0F66  
        ??_Lcd_Set_Cursor 0009                 __pintcode 0008                  ?___awdiv 0005  
                ?___awmod 0005               __pintcodelo 0018               __smallconst 0800  
          _mostrar_conteo 1024                  ?_sprintf 001E                  _LATAbits 0F89  
                _LATDbits 0F8C                  _LATEbits 0F8D                  Lcd_Cmd@a 0007  
             ??_Lcd_Clear 0008                  _RCONbits 0FD0                 _vfpfcnvrt 0816  
  __end_of_mostrar_conteo 1066                _ADCON1bits 0FC1          ??_Lcd_Write_Char 0006  
                _Lcd_Init 0E66                  _Lcd_Port 0FC8                vfpfcnvrt@c 0019  
             _INTCON2bits 0FF1  __end_of_Lcd_Write_String 0F66          _mostrar_variable 116A  
                __Hrparam 0000                vfprintf@ap 001C                  __Lrparam 0000  
              vfprintf@fp 001A                ?_vfpfcnvrt 000F              ??_init_ports 0005  
         ?_mostrar_conteo 0001                sprintf@fmt 001F                  __ptext10 0C4C  
                __ptext11 0EE8                  __ptext20 0FC8                  __ptext12 10A4  
                __ptext13 0B7A                  __ptext14 11AA                  __ptext15 0F66  
                __ptext16 11C0                  __ptext17 0E66                  __ptext18 11CE  
                __ptext19 118A                  _init_int 11C0                  _metalica 004C  
      __end_of_init_ports 11C0                  isa$xinst 0000                  int$flags 0053  
                _vfprintf 1066                  main@giro 0046                _INTCONbits 0FF2  
      Lcd_Write_Char@temp 0006                  intlevel1 0000                  intlevel2 0000  
               sprintf@ap 0022               ??_vfpfcnvrt 0012        Lcd_Set_Cursor@temp 000C  
                sprintf@f 0023                  sprintf@s 001E  
