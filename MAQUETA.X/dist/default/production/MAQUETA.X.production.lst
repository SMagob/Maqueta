

Microchip MPLAB XC8 Assembler V3.10 build 20250813170317 
                                                                                               Fri Sep 26 11:57:58 2025

Microchip MPLAB XC8 C Compiler v3.10 (Free license) build 20250813170317 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,space=0,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,space=0,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	text0,global,reloc=2,class=CODE,space=0,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,space=0,delta=1
    12                           	psect	text2,global,reloc=2,class=CODE,space=0,delta=1
    13                           	psect	text3,global,reloc=2,class=CODE,space=0,delta=1,group=3
    14                           	psect	text4,global,reloc=2,class=CODE,space=0,delta=1,group=1
    15                           	psect	text5,global,reloc=2,class=CODE,space=0,delta=1,group=1
    16                           	psect	text6,global,reloc=2,class=CODE,space=0,delta=1,group=3
    17                           	psect	text7,global,reloc=2,class=CODE,space=0,delta=1,group=3
    18                           	psect	text8,global,reloc=2,class=CODE,space=0,delta=1,group=3
    19                           	psect	text9,global,reloc=2,class=CODE,space=0,delta=1,group=2
    20                           	psect	text10,global,reloc=2,class=CODE,space=0,delta=1,group=2
    21                           	psect	text11,global,reloc=2,class=CODE,space=0,delta=1
    22                           	psect	text12,global,reloc=2,class=CODE,space=0,delta=1
    23                           	psect	text13,global,reloc=2,class=CODE,space=0,delta=1
    24                           	psect	text14,global,reloc=2,class=CODE,space=0,delta=1
    25                           	psect	text15,global,reloc=2,class=CODE,space=0,delta=1
    26                           	psect	text16,global,reloc=2,class=CODE,space=0,delta=1
    27                           	psect	text17,global,reloc=2,class=CODE,space=0,delta=1
    28                           	psect	text18,global,reloc=2,class=CODE,space=0,delta=1
    29                           	psect	text19,global,reloc=2,class=CODE,space=0,delta=1
    30                           	psect	intcode,global,reloc=2,class=CODE,space=0,delta=1
    31                           	psect	intcode_body,global,reloc=2,class=CODE,space=0,delta=1
    32                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    33                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    34                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    35                           	dabs	1,0x1,1
    36   000000                     
    37                           ; Generated 17/01/2025 GMT
    38                           ; 
    39                           ; Copyright Â© 2025, Microchip Technology Inc. and its subsidiaries ("Microchip")
    40                           ; All rights reserved.
    41                           ; 
    42                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    43                           ; 
    44                           ; Redistribution and use in source and binary forms, with or without modification, are
    45                           ; permitted provided that the following conditions are met:
    46                           ; 
    47                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    48                           ;        conditions and the following disclaimer.
    49                           ; 
    50                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    51                           ;        of conditions and the following disclaimer in the documentation and/or other
    52                           ;        materials provided with the distribution. Publication is not required when
    53                           ;        this file is used in an embedded application.
    54                           ; 
    55                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    56                           ;        software without specific prior written permission.
    57                           ; 
    58                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    59                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    60                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    61                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    62                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    63                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    64                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    65                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    66                           ; 
    67                           ; 
    68                           ; Code-generator required, PIC18F4550 Definitions
    69                           ; 
    70                           ; SFR Addresses
    71   000FE0                     bsr             equ	4064
    72   000FE9                     fsr0            equ	4073
    73   000FEA                     fsr0h           equ	4074
    74   000FE9                     fsr0l           equ	4073
    75   000FE1                     fsr1            equ	4065
    76   000FE2                     fsr1h           equ	4066
    77   000FE1                     fsr1l           equ	4065
    78   000FD9                     fsr2            equ	4057
    79   000FDA                     fsr2h           equ	4058
    80   000FD9                     fsr2l           equ	4057
    81   000FEF                     indf0           equ	4079
    82   000FE7                     indf1           equ	4071
    83   000FDF                     indf2           equ	4063
    84   000FF2                     intcon          equ	4082
    85   000000                     nvmcon          equ	0
    86   000FF9                     pcl             equ	4089
    87   000FFA                     pclath          equ	4090
    88   000FFB                     pclatu          equ	4091
    89   000FEB                     plusw0          equ	4075
    90   000FE3                     plusw1          equ	4067
    91   000FDB                     plusw2          equ	4059
    92   000FED                     postdec0        equ	4077
    93   000FE5                     postdec1        equ	4069
    94   000FDD                     postdec2        equ	4061
    95   000FEE                     postinc0        equ	4078
    96   000FE6                     postinc1        equ	4070
    97   000FDE                     postinc2        equ	4062
    98   000FEC                     preinc0         equ	4076
    99   000FE4                     preinc1         equ	4068
   100   000FDC                     preinc2         equ	4060
   101   000FF3                     prod            equ	4083
   102   000FF4                     prodh           equ	4084
   103   000FF3                     prodl           equ	4083
   104   000FD8                     status          equ	4056
   105   000FF5                     tablat          equ	4085
   106   000FF6                     tblptr          equ	4086
   107   000FF7                     tblptrh         equ	4087
   108   000FF6                     tblptrl         equ	4086
   109   000FF8                     tblptru         equ	4088
   110   000FFD                     tosl            equ	4093
   111   000FE8                     wreg            equ	4072
   112   000F62                     SPPDATA         equ	3938	;# 
   113   000F63                     SPPCFG          equ	3939	;# 
   114   000F64                     SPPEPS          equ	3940	;# 
   115   000F65                     SPPCON          equ	3941	;# 
   116   000F66                     UFRM            equ	3942	;# 
   117   000F66                     UFRML           equ	3942	;# 
   118   000F67                     UFRMH           equ	3943	;# 
   119   000F68                     UIR             equ	3944	;# 
   120   000F69                     UIE             equ	3945	;# 
   121   000F6A                     UEIR            equ	3946	;# 
   122   000F6B                     UEIE            equ	3947	;# 
   123   000F6C                     USTAT           equ	3948	;# 
   124   000F6D                     UCON            equ	3949	;# 
   125   000F6E                     UADDR           equ	3950	;# 
   126   000F6F                     UCFG            equ	3951	;# 
   127   000F70                     UEP0            equ	3952	;# 
   128   000F71                     UEP1            equ	3953	;# 
   129   000F72                     UEP2            equ	3954	;# 
   130   000F73                     UEP3            equ	3955	;# 
   131   000F74                     UEP4            equ	3956	;# 
   132   000F75                     UEP5            equ	3957	;# 
   133   000F76                     UEP6            equ	3958	;# 
   134   000F77                     UEP7            equ	3959	;# 
   135   000F78                     UEP8            equ	3960	;# 
   136   000F79                     UEP9            equ	3961	;# 
   137   000F7A                     UEP10           equ	3962	;# 
   138   000F7B                     UEP11           equ	3963	;# 
   139   000F7C                     UEP12           equ	3964	;# 
   140   000F7D                     UEP13           equ	3965	;# 
   141   000F7E                     UEP14           equ	3966	;# 
   142   000F7F                     UEP15           equ	3967	;# 
   143   000F80                     PORTA           equ	3968	;# 
   144   000F81                     PORTB           equ	3969	;# 
   145   000F82                     PORTC           equ	3970	;# 
   146   000F83                     PORTD           equ	3971	;# 
   147   000F84                     PORTE           equ	3972	;# 
   148   000F89                     LATA            equ	3977	;# 
   149   000F8A                     LATB            equ	3978	;# 
   150   000F8B                     LATC            equ	3979	;# 
   151   000F8C                     LATD            equ	3980	;# 
   152   000F8D                     LATE            equ	3981	;# 
   153   000F92                     TRISA           equ	3986	;# 
   154   000F92                     DDRA            equ	3986	;# 
   155   000F93                     TRISB           equ	3987	;# 
   156   000F93                     DDRB            equ	3987	;# 
   157   000F94                     TRISC           equ	3988	;# 
   158   000F94                     DDRC            equ	3988	;# 
   159   000F95                     TRISD           equ	3989	;# 
   160   000F95                     DDRD            equ	3989	;# 
   161   000F96                     TRISE           equ	3990	;# 
   162   000F96                     DDRE            equ	3990	;# 
   163   000F9B                     OSCTUNE         equ	3995	;# 
   164   000F9D                     PIE1            equ	3997	;# 
   165   000F9E                     PIR1            equ	3998	;# 
   166   000F9F                     IPR1            equ	3999	;# 
   167   000FA0                     PIE2            equ	4000	;# 
   168   000FA1                     PIR2            equ	4001	;# 
   169   000FA2                     IPR2            equ	4002	;# 
   170   000FA6                     EECON1          equ	4006	;# 
   171   000FA7                     EECON2          equ	4007	;# 
   172   000FA8                     EEDATA          equ	4008	;# 
   173   000FA9                     EEADR           equ	4009	;# 
   174   000FAB                     RCSTA           equ	4011	;# 
   175   000FAB                     RCSTA1          equ	4011	;# 
   176   000FAC                     TXSTA           equ	4012	;# 
   177   000FAC                     TXSTA1          equ	4012	;# 
   178   000FAD                     TXREG           equ	4013	;# 
   179   000FAD                     TXREG1          equ	4013	;# 
   180   000FAE                     RCREG           equ	4014	;# 
   181   000FAE                     RCREG1          equ	4014	;# 
   182   000FAF                     SPBRG           equ	4015	;# 
   183   000FAF                     SPBRG1          equ	4015	;# 
   184   000FB0                     SPBRGH          equ	4016	;# 
   185   000FB1                     T3CON           equ	4017	;# 
   186   000FB2                     TMR3            equ	4018	;# 
   187   000FB2                     TMR3L           equ	4018	;# 
   188   000FB3                     TMR3H           equ	4019	;# 
   189   000FB4                     CMCON           equ	4020	;# 
   190   000FB5                     CVRCON          equ	4021	;# 
   191   000FB6                     ECCP1AS         equ	4022	;# 
   192   000FB6                     CCP1AS          equ	4022	;# 
   193   000FB7                     ECCP1DEL        equ	4023	;# 
   194   000FB7                     CCP1DEL         equ	4023	;# 
   195   000FB8                     BAUDCON         equ	4024	;# 
   196   000FB8                     BAUDCTL         equ	4024	;# 
   197   000FBA                     CCP2CON         equ	4026	;# 
   198   000FBB                     CCPR2           equ	4027	;# 
   199   000FBB                     CCPR2L          equ	4027	;# 
   200   000FBC                     CCPR2H          equ	4028	;# 
   201   000FBD                     CCP1CON         equ	4029	;# 
   202   000FBD                     ECCP1CON        equ	4029	;# 
   203   000FBE                     CCPR1           equ	4030	;# 
   204   000FBE                     CCPR1L          equ	4030	;# 
   205   000FBF                     CCPR1H          equ	4031	;# 
   206   000FC0                     ADCON2          equ	4032	;# 
   207   000FC1                     ADCON1          equ	4033	;# 
   208   000FC2                     ADCON0          equ	4034	;# 
   209   000FC3                     ADRES           equ	4035	;# 
   210   000FC3                     ADRESL          equ	4035	;# 
   211   000FC4                     ADRESH          equ	4036	;# 
   212   000FC5                     SSPCON2         equ	4037	;# 
   213   000FC6                     SSPCON1         equ	4038	;# 
   214   000FC7                     SSPSTAT         equ	4039	;# 
   215   000FC8                     SSPADD          equ	4040	;# 
   216   000FC9                     SSPBUF          equ	4041	;# 
   217   000FCA                     T2CON           equ	4042	;# 
   218   000FCB                     PR2             equ	4043	;# 
   219   000FCB                     MEMCON          equ	4043	;# 
   220   000FCC                     TMR2            equ	4044	;# 
   221   000FCD                     T1CON           equ	4045	;# 
   222   000FCE                     TMR1            equ	4046	;# 
   223   000FCE                     TMR1L           equ	4046	;# 
   224   000FCF                     TMR1H           equ	4047	;# 
   225   000FD0                     RCON            equ	4048	;# 
   226   000FD1                     WDTCON          equ	4049	;# 
   227   000FD2                     HLVDCON         equ	4050	;# 
   228   000FD2                     LVDCON          equ	4050	;# 
   229   000FD3                     OSCCON          equ	4051	;# 
   230   000FD5                     T0CON           equ	4053	;# 
   231   000FD6                     TMR0            equ	4054	;# 
   232   000FD6                     TMR0L           equ	4054	;# 
   233   000FD7                     TMR0H           equ	4055	;# 
   234   000FD8                     STATUS          equ	4056	;# 
   235   000FD9                     FSR2            equ	4057	;# 
   236   000FD9                     FSR2L           equ	4057	;# 
   237   000FDA                     FSR2H           equ	4058	;# 
   238   000FDB                     PLUSW2          equ	4059	;# 
   239   000FDC                     PREINC2         equ	4060	;# 
   240   000FDD                     POSTDEC2        equ	4061	;# 
   241   000FDE                     POSTINC2        equ	4062	;# 
   242   000FDF                     INDF2           equ	4063	;# 
   243   000FE0                     BSR             equ	4064	;# 
   244   000FE1                     FSR1            equ	4065	;# 
   245   000FE1                     FSR1L           equ	4065	;# 
   246   000FE2                     FSR1H           equ	4066	;# 
   247   000FE3                     PLUSW1          equ	4067	;# 
   248   000FE4                     PREINC1         equ	4068	;# 
   249   000FE5                     POSTDEC1        equ	4069	;# 
   250   000FE6                     POSTINC1        equ	4070	;# 
   251   000FE7                     INDF1           equ	4071	;# 
   252   000FE8                     WREG            equ	4072	;# 
   253   000FE9                     FSR0            equ	4073	;# 
   254   000FE9                     FSR0L           equ	4073	;# 
   255   000FEA                     FSR0H           equ	4074	;# 
   256   000FEB                     PLUSW0          equ	4075	;# 
   257   000FEC                     PREINC0         equ	4076	;# 
   258   000FED                     POSTDEC0        equ	4077	;# 
   259   000FEE                     POSTINC0        equ	4078	;# 
   260   000FEF                     INDF0           equ	4079	;# 
   261   000FF0                     INTCON3         equ	4080	;# 
   262   000FF1                     INTCON2         equ	4081	;# 
   263   000FF2                     INTCON          equ	4082	;# 
   264   000FF3                     PROD            equ	4083	;# 
   265   000FF3                     PRODL           equ	4083	;# 
   266   000FF4                     PRODH           equ	4084	;# 
   267   000FF5                     TABLAT          equ	4085	;# 
   268   000FF6                     TBLPTR          equ	4086	;# 
   269   000FF6                     TBLPTRL         equ	4086	;# 
   270   000FF7                     TBLPTRH         equ	4087	;# 
   271   000FF8                     TBLPTRU         equ	4088	;# 
   272   000FF9                     PCLAT           equ	4089	;# 
   273   000FF9                     PC              equ	4089	;# 
   274   000FF9                     PCL             equ	4089	;# 
   275   000FFA                     PCLATH          equ	4090	;# 
   276   000FFB                     PCLATU          equ	4091	;# 
   277   000FFC                     STKPTR          equ	4092	;# 
   278   000FFD                     TOS             equ	4093	;# 
   279   000FFD                     TOSL            equ	4093	;# 
   280   000FFE                     TOSH            equ	4094	;# 
   281   000FFF                     TOSU            equ	4095	;# 
   282   000F62                     SPPDATA         equ	3938	;# 
   283   000F63                     SPPCFG          equ	3939	;# 
   284   000F64                     SPPEPS          equ	3940	;# 
   285   000F65                     SPPCON          equ	3941	;# 
   286   000F66                     UFRM            equ	3942	;# 
   287   000F66                     UFRML           equ	3942	;# 
   288   000F67                     UFRMH           equ	3943	;# 
   289   000F68                     UIR             equ	3944	;# 
   290   000F69                     UIE             equ	3945	;# 
   291   000F6A                     UEIR            equ	3946	;# 
   292   000F6B                     UEIE            equ	3947	;# 
   293   000F6C                     USTAT           equ	3948	;# 
   294   000F6D                     UCON            equ	3949	;# 
   295   000F6E                     UADDR           equ	3950	;# 
   296   000F6F                     UCFG            equ	3951	;# 
   297   000F70                     UEP0            equ	3952	;# 
   298   000F71                     UEP1            equ	3953	;# 
   299   000F72                     UEP2            equ	3954	;# 
   300   000F73                     UEP3            equ	3955	;# 
   301   000F74                     UEP4            equ	3956	;# 
   302   000F75                     UEP5            equ	3957	;# 
   303   000F76                     UEP6            equ	3958	;# 
   304   000F77                     UEP7            equ	3959	;# 
   305   000F78                     UEP8            equ	3960	;# 
   306   000F79                     UEP9            equ	3961	;# 
   307   000F7A                     UEP10           equ	3962	;# 
   308   000F7B                     UEP11           equ	3963	;# 
   309   000F7C                     UEP12           equ	3964	;# 
   310   000F7D                     UEP13           equ	3965	;# 
   311   000F7E                     UEP14           equ	3966	;# 
   312   000F7F                     UEP15           equ	3967	;# 
   313   000F80                     PORTA           equ	3968	;# 
   314   000F81                     PORTB           equ	3969	;# 
   315   000F82                     PORTC           equ	3970	;# 
   316   000F83                     PORTD           equ	3971	;# 
   317   000F84                     PORTE           equ	3972	;# 
   318   000F89                     LATA            equ	3977	;# 
   319   000F8A                     LATB            equ	3978	;# 
   320   000F8B                     LATC            equ	3979	;# 
   321   000F8C                     LATD            equ	3980	;# 
   322   000F8D                     LATE            equ	3981	;# 
   323   000F92                     TRISA           equ	3986	;# 
   324   000F92                     DDRA            equ	3986	;# 
   325   000F93                     TRISB           equ	3987	;# 
   326   000F93                     DDRB            equ	3987	;# 
   327   000F94                     TRISC           equ	3988	;# 
   328   000F94                     DDRC            equ	3988	;# 
   329   000F95                     TRISD           equ	3989	;# 
   330   000F95                     DDRD            equ	3989	;# 
   331   000F96                     TRISE           equ	3990	;# 
   332   000F96                     DDRE            equ	3990	;# 
   333   000F9B                     OSCTUNE         equ	3995	;# 
   334   000F9D                     PIE1            equ	3997	;# 
   335   000F9E                     PIR1            equ	3998	;# 
   336   000F9F                     IPR1            equ	3999	;# 
   337   000FA0                     PIE2            equ	4000	;# 
   338   000FA1                     PIR2            equ	4001	;# 
   339   000FA2                     IPR2            equ	4002	;# 
   340   000FA6                     EECON1          equ	4006	;# 
   341   000FA7                     EECON2          equ	4007	;# 
   342   000FA8                     EEDATA          equ	4008	;# 
   343   000FA9                     EEADR           equ	4009	;# 
   344   000FAB                     RCSTA           equ	4011	;# 
   345   000FAB                     RCSTA1          equ	4011	;# 
   346   000FAC                     TXSTA           equ	4012	;# 
   347   000FAC                     TXSTA1          equ	4012	;# 
   348   000FAD                     TXREG           equ	4013	;# 
   349   000FAD                     TXREG1          equ	4013	;# 
   350   000FAE                     RCREG           equ	4014	;# 
   351   000FAE                     RCREG1          equ	4014	;# 
   352   000FAF                     SPBRG           equ	4015	;# 
   353   000FAF                     SPBRG1          equ	4015	;# 
   354   000FB0                     SPBRGH          equ	4016	;# 
   355   000FB1                     T3CON           equ	4017	;# 
   356   000FB2                     TMR3            equ	4018	;# 
   357   000FB2                     TMR3L           equ	4018	;# 
   358   000FB3                     TMR3H           equ	4019	;# 
   359   000FB4                     CMCON           equ	4020	;# 
   360   000FB5                     CVRCON          equ	4021	;# 
   361   000FB6                     ECCP1AS         equ	4022	;# 
   362   000FB6                     CCP1AS          equ	4022	;# 
   363   000FB7                     ECCP1DEL        equ	4023	;# 
   364   000FB7                     CCP1DEL         equ	4023	;# 
   365   000FB8                     BAUDCON         equ	4024	;# 
   366   000FB8                     BAUDCTL         equ	4024	;# 
   367   000FBA                     CCP2CON         equ	4026	;# 
   368   000FBB                     CCPR2           equ	4027	;# 
   369   000FBB                     CCPR2L          equ	4027	;# 
   370   000FBC                     CCPR2H          equ	4028	;# 
   371   000FBD                     CCP1CON         equ	4029	;# 
   372   000FBD                     ECCP1CON        equ	4029	;# 
   373   000FBE                     CCPR1           equ	4030	;# 
   374   000FBE                     CCPR1L          equ	4030	;# 
   375   000FBF                     CCPR1H          equ	4031	;# 
   376   000FC0                     ADCON2          equ	4032	;# 
   377   000FC1                     ADCON1          equ	4033	;# 
   378   000FC2                     ADCON0          equ	4034	;# 
   379   000FC3                     ADRES           equ	4035	;# 
   380   000FC3                     ADRESL          equ	4035	;# 
   381   000FC4                     ADRESH          equ	4036	;# 
   382   000FC5                     SSPCON2         equ	4037	;# 
   383   000FC6                     SSPCON1         equ	4038	;# 
   384   000FC7                     SSPSTAT         equ	4039	;# 
   385   000FC8                     SSPADD          equ	4040	;# 
   386   000FC9                     SSPBUF          equ	4041	;# 
   387   000FCA                     T2CON           equ	4042	;# 
   388   000FCB                     PR2             equ	4043	;# 
   389   000FCB                     MEMCON          equ	4043	;# 
   390   000FCC                     TMR2            equ	4044	;# 
   391   000FCD                     T1CON           equ	4045	;# 
   392   000FCE                     TMR1            equ	4046	;# 
   393   000FCE                     TMR1L           equ	4046	;# 
   394   000FCF                     TMR1H           equ	4047	;# 
   395   000FD0                     RCON            equ	4048	;# 
   396   000FD1                     WDTCON          equ	4049	;# 
   397   000FD2                     HLVDCON         equ	4050	;# 
   398   000FD2                     LVDCON          equ	4050	;# 
   399   000FD3                     OSCCON          equ	4051	;# 
   400   000FD5                     T0CON           equ	4053	;# 
   401   000FD6                     TMR0            equ	4054	;# 
   402   000FD6                     TMR0L           equ	4054	;# 
   403   000FD7                     TMR0H           equ	4055	;# 
   404   000FD8                     STATUS          equ	4056	;# 
   405   000FD9                     FSR2            equ	4057	;# 
   406   000FD9                     FSR2L           equ	4057	;# 
   407   000FDA                     FSR2H           equ	4058	;# 
   408   000FDB                     PLUSW2          equ	4059	;# 
   409   000FDC                     PREINC2         equ	4060	;# 
   410   000FDD                     POSTDEC2        equ	4061	;# 
   411   000FDE                     POSTINC2        equ	4062	;# 
   412   000FDF                     INDF2           equ	4063	;# 
   413   000FE0                     BSR             equ	4064	;# 
   414   000FE1                     FSR1            equ	4065	;# 
   415   000FE1                     FSR1L           equ	4065	;# 
   416   000FE2                     FSR1H           equ	4066	;# 
   417   000FE3                     PLUSW1          equ	4067	;# 
   418   000FE4                     PREINC1         equ	4068	;# 
   419   000FE5                     POSTDEC1        equ	4069	;# 
   420   000FE6                     POSTINC1        equ	4070	;# 
   421   000FE7                     INDF1           equ	4071	;# 
   422   000FE8                     WREG            equ	4072	;# 
   423   000FE9                     FSR0            equ	4073	;# 
   424   000FE9                     FSR0L           equ	4073	;# 
   425   000FEA                     FSR0H           equ	4074	;# 
   426   000FEB                     PLUSW0          equ	4075	;# 
   427   000FEC                     PREINC0         equ	4076	;# 
   428   000FED                     POSTDEC0        equ	4077	;# 
   429   000FEE                     POSTINC0        equ	4078	;# 
   430   000FEF                     INDF0           equ	4079	;# 
   431   000FF0                     INTCON3         equ	4080	;# 
   432   000FF1                     INTCON2         equ	4081	;# 
   433   000FF2                     INTCON          equ	4082	;# 
   434   000FF3                     PROD            equ	4083	;# 
   435   000FF3                     PRODL           equ	4083	;# 
   436   000FF4                     PRODH           equ	4084	;# 
   437   000FF5                     TABLAT          equ	4085	;# 
   438   000FF6                     TBLPTR          equ	4086	;# 
   439   000FF6                     TBLPTRL         equ	4086	;# 
   440   000FF7                     TBLPTRH         equ	4087	;# 
   441   000FF8                     TBLPTRU         equ	4088	;# 
   442   000FF9                     PCLAT           equ	4089	;# 
   443   000FF9                     PC              equ	4089	;# 
   444   000FF9                     PCL             equ	4089	;# 
   445   000FFA                     PCLATH          equ	4090	;# 
   446   000FFB                     PCLATU          equ	4091	;# 
   447   000FFC                     STKPTR          equ	4092	;# 
   448   000FFD                     TOS             equ	4093	;# 
   449   000FFD                     TOSL            equ	4093	;# 
   450   000FFE                     TOSH            equ	4094	;# 
   451   000FFF                     TOSU            equ	4095	;# 
   452   000F95                     _TRISDbits      set	3989
   453   000F96                     _TRISEbits      set	3990
   454   000F8D                     _LATEbits       set	3981
   455   000F82                     _PORTCbits      set	3970
   456   000F84                     _PORTEbits      set	3972
   457   000F8B                     _LATCbits       set	3979
   458   000F80                     _PORTAbits      set	3968
   459   000F8C                     _LATDbits       set	3980
   460   000F89                     _LATAbits       set	3977
   461   000F81                     _PORTBbits      set	3969
   462   000FF1                     _INTCON2bits    set	4081
   463   000FD0                     _RCONbits       set	4048
   464   000FF2                     _INTCONbits     set	4082
   465   000F8C                     _LATD           set	3980
   466   000F8B                     _LATC           set	3979
   467   000F8A                     _LATB           set	3978
   468   000F94                     _TRISC          set	3988
   469   000F8D                     _LATE           set	3981
   470   000F96                     _TRISE          set	3990
   471   000F95                     _TRISD          set	3989
   472   000F89                     _LATA           set	3977
   473   000F92                     _TRISA          set	3986
   474   000F93                     _TRISB          set	3987
   475   000FC1                     _ADCON1bits     set	4033
   476                           
   477                           	psect	smallconst
   478   000800                     __psmallconst:
   479                           	callstack 0
   480   000800  00                 	db	0
   481   000801                     STR_6:
   482   000801  41                 	db	65	;'A'
   483   000802  67                 	db	103	;'g'
   484   000803  61                 	db	97	;'a'
   485   000804  72                 	db	114	;'r'
   486   000805  72                 	db	114	;'r'
   487   000806  61                 	db	97	;'a'
   488   000807  6E                 	db	110	;'n'
   489   000808  64                 	db	100	;'d'
   490   000809  6F                 	db	111	;'o'
   491   00080A  20                 	db	32
   492   00080B  70                 	db	112	;'p'
   493   00080C  69                 	db	105	;'i'
   494   00080D  65                 	db	101	;'e'
   495   00080E  7A                 	db	122	;'z'
   496   00080F  61                 	db	97	;'a'
   497   000810  00                 	db	0
   498   000811                     STR_5:
   499   000811  50                 	db	80	;'P'
   500   000812  69                 	db	105	;'i'
   501   000813  65                 	db	101	;'e'
   502   000814  7A                 	db	122	;'z'
   503   000815  61                 	db	97	;'a'
   504   000816  20                 	db	32
   505   000817  65                 	db	101	;'e'
   506   000818  6E                 	db	110	;'n'
   507   000819  20                 	db	32
   508   00081A  63                 	db	99	;'c'
   509   00081B  69                 	db	105	;'i'
   510   00081C  6E                 	db	110	;'n'
   511   00081D  74                 	db	116	;'t'
   512   00081E  61                 	db	97	;'a'
   513   00081F  00                 	db	0
   514   000820                     STR_7:
   515   000820  50                 	db	80	;'P'
   516   000821  6C                 	db	108	;'l'
   517   000822  61                 	db	97	;'a'
   518   000823  74                 	db	116	;'t'
   519   000824  6F                 	db	111	;'o'
   520   000825  20                 	db	32
   521   000826  72                 	db	114	;'r'
   522   000827  6F                 	db	111	;'o'
   523   000828  74                 	db	116	;'t'
   524   000829  61                 	db	97	;'a'
   525   00082A  74                 	db	116	;'t'
   526   00082B  69                 	db	105	;'i'
   527   00082C  76                 	db	118	;'v'
   528   00082D  6F                 	db	111	;'o'
   529   00082E  00                 	db	0
   530   00082F                     STR_3:
   531   00082F  49                 	db	73	;'I'
   532   000830  6E                 	db	110	;'n'
   533   000831  69                 	db	105	;'i'
   534   000832  63                 	db	99	;'c'
   535   000833  69                 	db	105	;'i'
   536   000834  61                 	db	97	;'a'
   537   000835  6C                 	db	108	;'l'
   538   000836  69                 	db	105	;'i'
   539   000837  7A                 	db	122	;'z'
   540   000838  61                 	db	97	;'a'
   541   000839  6E                 	db	110	;'n'
   542   00083A  64                 	db	100	;'d'
   543   00083B  6F                 	db	111	;'o'
   544   00083C  00                 	db	0
   545   00083D                     STR_2:
   546   00083D  43                 	db	67	;'C'
   547   00083E  6F                 	db	111	;'o'
   548   00083F  6E                 	db	110	;'n'
   549   000840  66                 	db	102	;'f'
   550   000841  69                 	db	105	;'i'
   551   000842  67                 	db	103	;'g'
   552   000843  75                 	db	117	;'u'
   553   000844  72                 	db	114	;'r'
   554   000845  61                 	db	97	;'a'
   555   000846  6E                 	db	110	;'n'
   556   000847  64                 	db	100	;'d'
   557   000848  6F                 	db	111	;'o'
   558   000849  00                 	db	0
   559   00084A                     STR_8:
   560   00084A  45                 	db	69	;'E'
   561   00084B  6E                 	db	110	;'n'
   562   00084C  74                 	db	116	;'t'
   563   00084D  72                 	db	114	;'r'
   564   00084E  65                 	db	101	;'e'
   565   00084F  67                 	db	103	;'g'
   566   000850  61                 	db	97	;'a'
   567   000851  6E                 	db	110	;'n'
   568   000852  64                 	db	100	;'d'
   569   000853  6F                 	db	111	;'o'
   570   000854  00                 	db	0
   571   000855                     STR_10:
   572   000855  4D                 	db	77	;'M'
   573   000856  45                 	db	69	;'E'
   574   000857  54                 	db	84	;'T'
   575   000858  41                 	db	65	;'A'
   576   000859  4C                 	db	76	;'L'
   577   00085A  49                 	db	73	;'I'
   578   00085B  43                 	db	67	;'C'
   579   00085C  41                 	db	65	;'A'
   580   00085D  00                 	db	0
   581   00085E                     STR_11:
   582   00085E  42                 	db	66	;'B'
   583   00085F  4C                 	db	76	;'L'
   584   000860  41                 	db	65	;'A'
   585   000861  4E                 	db	78	;'N'
   586   000862  43                 	db	67	;'C'
   587   000863  41                 	db	65	;'A'
   588   000864  00                 	db	0
   589   000865                     STR_9:
   590   000865  4E                 	db	78	;'N'
   591   000866  45                 	db	69	;'E'
   592   000867  47                 	db	71	;'G'
   593   000868  52                 	db	82	;'R'
   594   000869  41                 	db	65	;'A'
   595   00086A  00                 	db	0
   596   00086B                     STR_4:
   597   00086B  53                 	db	83	;'S'
   598   00086C  54                 	db	84	;'T'
   599   00086D  41                 	db	65	;'A'
   600   00086E  52                 	db	82	;'R'
   601   00086F  54                 	db	84	;'T'
   602   000870  00                 	db	0
   603   000871                     STR_12:
   604   000871  4E                 	db	78	;'N'
   605   000872  41                 	db	65	;'A'
   606   000873  44                 	db	68	;'D'
   607   000874  41                 	db	65	;'A'
   608   000875  00                 	db	0
   609   000876                     STR_14:
   610   000876  20                 	db	32
   611   000877  42                 	db	66	;'B'
   612   000878  3A                 	db	58	;':'
   613   000879  00                 	db	0
   614   00087A                     STR_15:
   615   00087A  20                 	db	32
   616   00087B  4E                 	db	78	;'N'
   617   00087C  3A                 	db	58	;':'
   618   00087D  00                 	db	0
   619   00087E                     STR_13:
   620   00087E  4D                 	db	77	;'M'
   621   00087F  3A                 	db	58	;':'
   622   000880  00                 	db	0
   623   000881                     STR_1:
   624   000881  25                 	db	37
   625   000882  64                 	db	100	;'d'
   626   000883  00                 	db	0
   627   000884  00                 	db	0	; dummy byte at the end
   628   000800                     __smallconst    set	__psmallconst
   629   000800                     __mediumconst   set	__psmallconst
   630   000002                     __activetblptr  equ	2
   631                           
   632                           ; #config settings
   633                           
   634                           	psect	cinit
   635   0014EE                     __pcinit:
   636                           	callstack 0
   637   0014EE                     start_initialization:
   638                           	callstack 0
   639   0014EE                     __initialization:
   640                           	callstack 0
   641                           
   642                           ; Clear objects allocated to BANK0 (32 bytes)
   643   0014EE  EE00  F060         	lfsr	0,__pbssBANK0
   644   0014F2  0E20               	movlw	32
   645   0014F4                     clear_0:
   646   0014F4  6AEE               	clrf	postinc0,c
   647   0014F6  06E8               	decf	wreg,f,c
   648   0014F8  E1FD               	bnz	clear_0
   649                           
   650                           ; Clear objects allocated to COMRAM (12 bytes)
   651   0014FA  EE00  F046         	lfsr	0,__pbssCOMRAM
   652   0014FE  0E0C               	movlw	12
   653   001500                     clear_1:
   654   001500  6AEE               	clrf	postinc0,c
   655   001502  06E8               	decf	wreg,f,c
   656   001504  E1FD               	bnz	clear_1
   657   001506                     end_of_initialization:
   658                           	callstack 0
   659   001506                     __end_of__initialization:
   660                           	callstack 0
   661   001506  9001               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   662   001508  9201               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   663   00150A  0E00               	movlw	low (__Lmediumconst shr (0+16))
   664   00150C  6EF8               	movwf	tblptru,c
   665   00150E  0100               	movlb	0
   666   001510  EF43  F004         	goto	_main	;jump to C main() function
   667                           
   668                           	psect	bssCOMRAM
   669   000046                     __pbssCOMRAM:
   670                           	callstack 0
   671   000046                     _width:
   672                           	callstack 0
   673   000046                     	ds	2
   674   000048                     _prec:
   675                           	callstack 0
   676   000048                     	ds	2
   677   00004A                     _flags:
   678                           	callstack 0
   679   00004A                     	ds	1
   680   00004B                     _escena:
   681                           	callstack 0
   682   00004B                     	ds	1
   683   00004C                     _banderaM:
   684                           	callstack 0
   685   00004C                     	ds	1
   686   00004D                     _banderaB:
   687                           	callstack 0
   688   00004D                     	ds	1
   689   00004E                     _banderaN:
   690                           	callstack 0
   691   00004E                     	ds	1
   692   00004F                     _metalica:
   693                           	callstack 0
   694   00004F                     	ds	1
   695   000050                     _negra:
   696                           	callstack 0
   697   000050                     	ds	1
   698   000051                     _blanca:
   699                           	callstack 0
   700   000051                     	ds	1
   701                           
   702                           	psect	bssBANK0
   703   000060                     __pbssBANK0:
   704                           	callstack 0
   705   000060                     _dbuf:
   706                           	callstack 0
   707   000060                     	ds	32
   708                           
   709                           	psect	cstackCOMRAM
   710   000002                     __pcstackCOMRAM:
   711                           	callstack 0
   712   000002                     ?___awdiv:
   713                           	callstack 0
   714   000002                     ?___awmod:
   715                           	callstack 0
   716   000002                     Lcd_Port@a:
   717                           	callstack 0
   718   000002                     ___awdiv@dividend:
   719                           	callstack 0
   720   000002                     ___awmod@dividend:
   721                           	callstack 0
   722   000002                     fputc@c:
   723                           	callstack 0
   724   000002                     
   725                           ; 1 bytes @ 0x0
   726   000002                     	ds	1
   727   000003                     Lcd_Cmd@a:
   728                           	callstack 0
   729   000003                     Lcd_Write_Char@temp:
   730                           	callstack 0
   731   000003                     
   732                           ; 1 bytes @ 0x1
   733   000003                     	ds	1
   734   000004                     Lcd_Set_Cursor@b:
   735                           	callstack 0
   736   000004                     Lcd_Write_Char@y:
   737                           	callstack 0
   738   000004                     fputc@fp:
   739                           	callstack 0
   740   000004                     ___awdiv@divisor:
   741                           	callstack 0
   742   000004                     ___awmod@divisor:
   743                           	callstack 0
   744   000004                     ??_Lcd_Init:
   745                           
   746                           ; 1 bytes @ 0x2
   747   000004                     	ds	1
   748   000005                     Lcd_Write_Char@a:
   749                           	callstack 0
   750   000005                     ??_Lcd_Set_Cursor:
   751   000005                     ??_fputc:
   752                           
   753                           ; 1 bytes @ 0x3
   754   000005                     	ds	1
   755   000006                     Lcd_Set_Cursor@a:
   756                           	callstack 0
   757   000006                     ___awdiv@counter:
   758                           	callstack 0
   759   000006                     ___awmod@counter:
   760                           	callstack 0
   761   000006                     Lcd_Write_String@a:
   762                           	callstack 0
   763   000006                     
   764                           ; 1 bytes @ 0x4
   765   000006                     	ds	1
   766   000007                     Lcd_Set_Cursor@z:
   767                           	callstack 0
   768   000007                     ___awdiv@sign:
   769                           	callstack 0
   770   000007                     ___awmod@sign:
   771                           	callstack 0
   772                           
   773                           ; 1 bytes @ 0x5
   774   000007                     	ds	1
   775   000008                     ?_abs:
   776                           	callstack 0
   777   000008                     Lcd_Set_Cursor@y:
   778                           	callstack 0
   779   000008                     ___awdiv@quotient:
   780                           	callstack 0
   781   000008                     abs@a:
   782                           	callstack 0
   783   000008                     ??_Lcd_Write_String:
   784                           
   785                           ; 1 bytes @ 0x6
   786   000008                     	ds	1
   787   000009                     Lcd_Set_Cursor@temp:
   788                           	callstack 0
   789                           
   790                           ; 1 bytes @ 0x7
   791   000009                     	ds	1
   792   00000A                     Lcd_Write_String@i:
   793                           	callstack 0
   794   00000A                     ??_abs:
   795                           
   796                           ; 1 bytes @ 0x8
   797   00000A                     	ds	2
   798   00000C                     vfpfcnvrt@fp:
   799                           	callstack 0
   800                           
   801                           ; 1 bytes @ 0xA
   802   00000C                     	ds	1
   803   00000D                     vfpfcnvrt@fmt:
   804                           	callstack 0
   805                           
   806                           ; 1 bytes @ 0xB
   807   00000D                     	ds	1
   808   00000E                     vfpfcnvrt@ap:
   809                           	callstack 0
   810                           
   811                           ; 1 bytes @ 0xC
   812   00000E                     	ds	1
   813   00000F                     ??_vfpfcnvrt:
   814                           
   815                           ; 1 bytes @ 0xD
   816   00000F                     	ds	1
   817   000010                     vfpfcnvrt@done:
   818                           	callstack 0
   819                           
   820                           ; 1 bytes @ 0xE
   821   000010                     	ds	1
   822   000011                     vfpfcnvrt@cp:
   823                           	callstack 0
   824                           
   825                           ; 1 bytes @ 0xF
   826   000011                     	ds	1
   827   000012                     vfpfcnvrt@convarg:
   828                           	callstack 0
   829                           
   830                           ; 4 bytes @ 0x10
   831   000012                     	ds	4
   832   000016                     vfpfcnvrt@c:
   833                           	callstack 0
   834                           
   835                           ; 1 bytes @ 0x14
   836   000016                     	ds	1
   837   000017                     ?_vfprintf:
   838                           	callstack 0
   839   000017                     vfprintf@fp:
   840                           	callstack 0
   841                           
   842                           ; 1 bytes @ 0x15
   843   000017                     	ds	1
   844   000018                     vfprintf@fmt:
   845                           	callstack 0
   846                           
   847                           ; 1 bytes @ 0x16
   848   000018                     	ds	1
   849   000019                     vfprintf@ap:
   850                           	callstack 0
   851                           
   852                           ; 1 bytes @ 0x17
   853   000019                     	ds	1
   854   00001A                     vfprintf@cfmt:
   855                           	callstack 0
   856   00001A                     
   857                           ; 1 bytes @ 0x18
   858   00001A                     	ds	1
   859   00001B                     ?_sprintf:
   860                           	callstack 0
   861   00001B                     sprintf@s:
   862                           	callstack 0
   863                           
   864                           ; 1 bytes @ 0x19
   865   00001B                     	ds	1
   866   00001C                     sprintf@fmt:
   867                           	callstack 0
   868                           
   869                           ; 1 bytes @ 0x1A
   870   00001C                     	ds	3
   871   00001F                     sprintf@ap:
   872                           	callstack 0
   873   00001F                     
   874                           ; 1 bytes @ 0x1D
   875   00001F                     	ds	1
   876   000020                     sprintf@f:
   877                           	callstack 0
   878                           
   879                           ; 11 bytes @ 0x1E
   880   000020                     	ds	11
   881   00002B                     mostrar_variable@x:
   882                           	callstack 0
   883                           
   884                           ; 2 bytes @ 0x29
   885   00002B                     	ds	2
   886   00002D                     mostrar_variable@buffer:
   887                           	callstack 0
   888   00002D                     
   889                           ; 1 bytes @ 0x2B
   890   00002D                     	ds	20
   891   000041                     ??_mostrar_conteo:
   892                           
   893                           ; 1 bytes @ 0x3F
   894   000041                     	ds	1
   895   000042                     ??_main:
   896                           
   897                           ; 1 bytes @ 0x40
   898   000042                     	ds	2
   899   000044                     main@giro:
   900                           	callstack 0
   901                           
   902                           ; 2 bytes @ 0x42
   903   000044                     	ds	2
   904                           
   905 ;;
   906 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   907 ;;
   908 ;; *************** function _main *****************
   909 ;; Defined at:
   910 ;;		line 156 in file "Cinta.c"
   911 ;; Parameters:    Size  Location     Type
   912 ;;		None
   913 ;; Auto vars:     Size  Location     Type
   914 ;;  giro            2   66[COMRAM] int 
   915 ;; Return value:  Size  Location     Type
   916 ;;                  1    wreg      void 
   917 ;; Registers used:
   918 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   919 ;; Tracked objects:
   920 ;;		On entry : 0/0
   921 ;;		On exit  : 0/0
   922 ;;		Unchanged: 0/0
   923 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   924 ;;      Params:         0       0       0       0       0       0       0       0       0
   925 ;;      Locals:         2       0       0       0       0       0       0       0       0
   926 ;;      Temps:          2       0       0       0       0       0       0       0       0
   927 ;;      Totals:         4       0       0       0       0       0       0       0       0
   928 ;;Total ram usage:        4 bytes
   929 ;; Hardware stack levels required when called: 8
   930 ;; This function calls:
   931 ;;		_Lcd_Cmd
   932 ;;		_Lcd_Init
   933 ;;		_Lcd_Set_Cursor
   934 ;;		_init_maqueta
   935 ;;		_init_ports
   936 ;;		_mostrar_conteo
   937 ;; This function is called by:
   938 ;;		Startup code after reset
   939 ;; This function uses a non-reentrant model
   940 ;;
   941                           
   942                           	psect	text0
   943   000886                     __ptext0:
   944                           	callstack 0
   945   000886                     _main:
   946                           	callstack 23
   947   000886                     
   948                           ;Cinta.c: 157:     int giro=0;
   949   000886  6A45               	clrf	(main@giro+1)^0,c
   950   000888  0E00               	movlw	0
   951   00088A  6E44               	movwf	main@giro^0,c
   952   00088C                     
   953                           ;Cinta.c: 159:     init_ports();
   954   00088C  EC8A  F00A         	call	_init_ports	;wreg free
   955   000890                     
   956                           ;Cinta.c: 160:     Lcd_Init();
   957   000890  EC52  F009         	call	_Lcd_Init	;wreg free
   958   000894                     
   959                           ;Cinta.c: 161:     Lcd_Cmd(0x00);
   960   000894  0E00               	movlw	0
   961   000896  ECAB  F00A         	call	_Lcd_Cmd
   962   00089A                     
   963                           ;Cinta.c: 162:     _delay((unsigned long)((10)*(1000000UL/4000.0)));
   964   00089A  0E04               	movlw	4
   965   00089C  6E42               	movwf	??_main^0,c
   966   00089E  0E3E               	movlw	62
   967   0008A0                     u1597:
   968   0008A0  2EE8               	decfsz	wreg,f,c
   969   0008A2  D7FE               	bra	u1597
   970   0008A4  2E42               	decfsz	??_main^0,f,c
   971   0008A6  D7FC               	bra	u1597
   972   0008A8                     
   973                           ;Cinta.c: 163:     Lcd_Cmd(0x0E);
   974   0008A8  0E0E               	movlw	14
   975   0008AA  ECAB  F00A         	call	_Lcd_Cmd
   976   0008AE                     
   977                           ;Cinta.c: 164:     Lcd_Set_Cursor(1,1);
   978   0008AE  0E01               	movlw	1
   979   0008B0  6E04               	movwf	Lcd_Set_Cursor@b^0,c
   980   0008B2  0E01               	movlw	1
   981   0008B4  EC85  F007         	call	_Lcd_Set_Cursor
   982   0008B8                     
   983                           ;Cinta.c: 165:     mostrar_conteo();
   984   0008B8  ECAC  F005         	call	_mostrar_conteo	;wreg free
   985   0008BC                     
   986                           ;Cinta.c: 166:     _delay((unsigned long)((500)*(1000000UL/4000.0)));
   987   0008BC  0EA3               	movlw	163
   988   0008BE  6E42               	movwf	??_main^0,c
   989   0008C0  0E55               	movlw	85
   990   0008C2                     u1607:
   991   0008C2  2EE8               	decfsz	wreg,f,c
   992   0008C4  D7FE               	bra	u1607
   993   0008C6  2E42               	decfsz	??_main^0,f,c
   994   0008C8  D7FC               	bra	u1607
   995   0008CA  0000               	nop	
   996   0008CC                     
   997                           ;Cinta.c: 167:     escena=1;
   998   0008CC  0E01               	movlw	1
   999   0008CE  6E4B               	movwf	_escena^0,c
  1000   0008D0                     
  1001                           ;Cinta.c: 168:     mostrar_conteo();
  1002   0008D0  ECAC  F005         	call	_mostrar_conteo	;wreg free
  1003   0008D4                     
  1004                           ;Cinta.c: 169:     init_maqueta();
  1005   0008D4  EC90  F009         	call	_init_maqueta	;wreg free
  1006   0008D8                     
  1007                           ;Cinta.c: 170:     _delay((unsigned long)((1000)*(1000000UL/4000.0)));
  1008   0008D8  0E02               	movlw	2
  1009   0008DA  6E43               	movwf	(??_main+1)^0,c
  1010   0008DC  0E45               	movlw	69
  1011   0008DE  6E42               	movwf	??_main^0,c
  1012   0008E0  0EAA               	movlw	170
  1013   0008E2                     u1617:
  1014   0008E2  2EE8               	decfsz	wreg,f,c
  1015   0008E4  D7FE               	bra	u1617
  1016   0008E6  2E42               	decfsz	??_main^0,f,c
  1017   0008E8  D7FC               	bra	u1617
  1018   0008EA  2E43               	decfsz	(??_main+1)^0,f,c
  1019   0008EC  D7FA               	bra	u1617
  1020   0008EE                     
  1021                           ;Cinta.c: 171:     escena=2;
  1022   0008EE  0E02               	movlw	2
  1023   0008F0  6E4B               	movwf	_escena^0,c
  1024   0008F2                     
  1025                           ;Cinta.c: 172:     mostrar_conteo();
  1026   0008F2  ECAC  F005         	call	_mostrar_conteo	;wreg free
  1027   0008F6                     l123:
  1028   0008F6  A081               	btfss	129,0,c	;volatile
  1029   0008F8  EF80  F004         	goto	u1381
  1030   0008FC  EF82  F004         	goto	u1380
  1031   000900                     u1381:
  1032   000900  EF7B  F004         	goto	l123
  1033   000904                     u1380:
  1034   000904                     
  1035                           ;Cinta.c: 175:     PORTEbits.RE2 = PORTBbits.RB0;
  1036   000904  A081               	btfss	129,0,c	;volatile
  1037   000906  D002               	bra	u1395
  1038   000908  8484               	bsf	132,2,c	;volatile
  1039   00090A  D001               	bra	u1397
  1040   00090C                     u1395:
  1041   00090C  9484               	bcf	132,2,c	;volatile
  1042   00090E                     u1397:
  1043                           
  1044                           ;Cinta.c: 176:     RCONbits.IPEN = 1;
  1045   00090E  8ED0               	bsf	208,7,c	;volatile
  1046                           
  1047                           ;Cinta.c: 177:     INTCON2bits.INTEDG0 = 0;
  1048   000910  9CF1               	bcf	241,6,c	;volatile
  1049                           
  1050                           ;Cinta.c: 178:     INTCONbits.GIEH = 1;
  1051   000912  8EF2               	bsf	242,7,c	;volatile
  1052                           
  1053                           ;Cinta.c: 179:     INTCONbits.INT0F = 1;
  1054   000914  82F2               	bsf	242,1,c	;volatile
  1055   000916                     
  1056                           ;Cinta.c: 180:     escena=3;
  1057   000916  0E03               	movlw	3
  1058   000918  6E4B               	movwf	_escena^0,c
  1059   00091A                     
  1060                           ;Cinta.c: 181:     mostrar_conteo();
  1061   00091A  ECAC  F005         	call	_mostrar_conteo	;wreg free
  1062   00091E                     
  1063                           ;Cinta.c: 182:     LATDbits.LATD0=1;
  1064   00091E  808C               	bsf	140,0,c	;volatile
  1065   000920                     l126:
  1066   000920  BE82               	btfsc	130,7,c	;volatile
  1067   000922  EF95  F004         	goto	u1401
  1068   000926  EF97  F004         	goto	u1400
  1069   00092A                     u1401:
  1070   00092A  EF90  F004         	goto	l126
  1071   00092E                     u1400:
  1072   00092E                     
  1073                           ;Cinta.c: 184:     LATDbits.LATD0=0;
  1074   00092E  908C               	bcf	140,0,c	;volatile
  1075   000930                     
  1076                           ;Cinta.c: 185:     escena=4;
  1077   000930  0E04               	movlw	4
  1078   000932  6E4B               	movwf	_escena^0,c
  1079   000934                     
  1080                           ;Cinta.c: 186:     mostrar_conteo();
  1081   000934  ECAC  F005         	call	_mostrar_conteo	;wreg free
  1082   000938                     
  1083                           ;Cinta.c: 187:     LATDbits.LATD2=1;
  1084   000938  848C               	bsf	140,2,c	;volatile
  1085   00093A                     l129:
  1086   00093A  B481               	btfsc	129,2,c	;volatile
  1087   00093C  EFA2  F004         	goto	u1411
  1088   000940  EFA4  F004         	goto	u1410
  1089   000944                     u1411:
  1090   000944  EF9D  F004         	goto	l129
  1091   000948                     u1410:
  1092   000948                     
  1093                           ;Cinta.c: 189:     LATDbits.LATD2=0;
  1094   000948  948C               	bcf	140,2,c	;volatile
  1095   00094A                     
  1096                           ;Cinta.c: 190:     _delay((unsigned long)((1000)*(1000000UL/4000.0)));
  1097   00094A  0E02               	movlw	2
  1098   00094C  6E43               	movwf	(??_main+1)^0,c
  1099   00094E  0E45               	movlw	69
  1100   000950  6E42               	movwf	??_main^0,c
  1101   000952  0EAA               	movlw	170
  1102   000954                     u1627:
  1103   000954  2EE8               	decfsz	wreg,f,c
  1104   000956  D7FE               	bra	u1627
  1105   000958  2E42               	decfsz	??_main^0,f,c
  1106   00095A  D7FC               	bra	u1627
  1107   00095C  2E43               	decfsz	(??_main+1)^0,f,c
  1108   00095E  D7FA               	bra	u1627
  1109                           
  1110                           ;Cinta.c: 191:     _delay((unsigned long)((500)*(1000000UL/4000.0)));
  1111   000960  0EA3               	movlw	163
  1112   000962  6E42               	movwf	??_main^0,c
  1113   000964  0E55               	movlw	85
  1114   000966                     u1637:
  1115   000966  2EE8               	decfsz	wreg,f,c
  1116   000968  D7FE               	bra	u1637
  1117   00096A  2E42               	decfsz	??_main^0,f,c
  1118   00096C  D7FC               	bra	u1637
  1119   00096E  0000               	nop	
  1120   000970                     
  1121                           ;Cinta.c: 192:     LATAbits.LA4=1;
  1122   000970  8889               	bsf	137,4,c	;volatile
  1123                           
  1124                           ;Cinta.c: 193:     _delay((unsigned long)((1000)*(1000000UL/4000.0)));
  1125   000972  0E02               	movlw	2
  1126   000974  6E43               	movwf	(??_main+1)^0,c
  1127   000976  0E45               	movlw	69
  1128   000978  6E42               	movwf	??_main^0,c
  1129   00097A  0EAA               	movlw	170
  1130   00097C                     u1647:
  1131   00097C  2EE8               	decfsz	wreg,f,c
  1132   00097E  D7FE               	bra	u1647
  1133   000980  2E42               	decfsz	??_main^0,f,c
  1134   000982  D7FC               	bra	u1647
  1135   000984  2E43               	decfsz	(??_main+1)^0,f,c
  1136   000986  D7FA               	bra	u1647
  1137   000988                     
  1138                           ;Cinta.c: 194:     LATAbits.LA5=1;
  1139   000988  8A89               	bsf	137,5,c	;volatile
  1140   00098A                     l132:
  1141   00098A  B881               	btfsc	129,4,c	;volatile
  1142   00098C  EFCA  F004         	goto	u1421
  1143   000990  EFCC  F004         	goto	u1420
  1144   000994                     u1421:
  1145   000994  EFC5  F004         	goto	l132
  1146   000998                     u1420:
  1147   000998                     
  1148                           ;Cinta.c: 196:     LATAbits.LA4=0;
  1149   000998  9889               	bcf	137,4,c	;volatile
  1150   00099A                     l135:
  1151   00099A  B681               	btfsc	129,3,c	;volatile
  1152   00099C  EFD2  F004         	goto	u1431
  1153   0009A0  EFD4  F004         	goto	u1430
  1154   0009A4                     u1431:
  1155   0009A4  EFCD  F004         	goto	l135
  1156   0009A8                     u1430:
  1157   0009A8                     
  1158                           ;Cinta.c: 198:     LATDbits.LATD3=1;
  1159   0009A8  868C               	bsf	140,3,c	;volatile
  1160   0009AA                     l138:
  1161   0009AA  B281               	btfsc	129,1,c	;volatile
  1162   0009AC  EFDA  F004         	goto	u1441
  1163   0009B0  EFDC  F004         	goto	u1440
  1164   0009B4                     u1441:
  1165   0009B4  EFD5  F004         	goto	l138
  1166   0009B8                     u1440:
  1167   0009B8                     
  1168                           ;Cinta.c: 200:     LATAbits.LA4=1;
  1169   0009B8  8889               	bsf	137,4,c	;volatile
  1170                           
  1171                           ;Cinta.c: 201:     LATDbits.LATD3=0;
  1172   0009BA  968C               	bcf	140,3,c	;volatile
  1173   0009BC                     
  1174                           ;Cinta.c: 202:     _delay((unsigned long)((1000)*(1000000UL/4000.0)));
  1175   0009BC  0E02               	movlw	2
  1176   0009BE  6E43               	movwf	(??_main+1)^0,c
  1177   0009C0  0E45               	movlw	69
  1178   0009C2  6E42               	movwf	??_main^0,c
  1179   0009C4  0EAA               	movlw	170
  1180   0009C6                     u1657:
  1181   0009C6  2EE8               	decfsz	wreg,f,c
  1182   0009C8  D7FE               	bra	u1657
  1183   0009CA  2E42               	decfsz	??_main^0,f,c
  1184   0009CC  D7FC               	bra	u1657
  1185   0009CE  2E43               	decfsz	(??_main+1)^0,f,c
  1186   0009D0  D7FA               	bra	u1657
  1187                           
  1188                           ;Cinta.c: 203:     _delay((unsigned long)((1000)*(1000000UL/4000.0)));
  1189   0009D2  0E02               	movlw	2
  1190   0009D4  6E43               	movwf	(??_main+1)^0,c
  1191   0009D6  0E45               	movlw	69
  1192   0009D8  6E42               	movwf	??_main^0,c
  1193   0009DA  0EAA               	movlw	170
  1194   0009DC                     u1667:
  1195   0009DC  2EE8               	decfsz	wreg,f,c
  1196   0009DE  D7FE               	bra	u1667
  1197   0009E0  2E42               	decfsz	??_main^0,f,c
  1198   0009E2  D7FC               	bra	u1667
  1199   0009E4  2E43               	decfsz	(??_main+1)^0,f,c
  1200   0009E6  D7FA               	bra	u1667
  1201   0009E8                     
  1202                           ;Cinta.c: 204:     LATAbits.LA5=0;
  1203   0009E8  9A89               	bcf	137,5,c	;volatile
  1204   0009EA                     l141:
  1205   0009EA  B881               	btfsc	129,4,c	;volatile
  1206   0009EC  EFFA  F004         	goto	u1451
  1207   0009F0  EFFC  F004         	goto	u1450
  1208   0009F4                     u1451:
  1209   0009F4  EFF5  F004         	goto	l141
  1210   0009F8                     u1450:
  1211   0009F8                     
  1212                           ;Cinta.c: 206:     escena=5;
  1213   0009F8  0E05               	movlw	5
  1214   0009FA  6E4B               	movwf	_escena^0,c
  1215   0009FC                     
  1216                           ;Cinta.c: 207:     mostrar_conteo();
  1217   0009FC  ECAC  F005         	call	_mostrar_conteo	;wreg free
  1218   000A00                     
  1219                           ;Cinta.c: 208:     LATAbits.LA4=0;
  1220   000A00  9889               	bcf	137,4,c	;volatile
  1221   000A02                     l144:
  1222   000A02  B681               	btfsc	129,3,c	;volatile
  1223   000A04  EF06  F005         	goto	u1461
  1224   000A08  EF08  F005         	goto	u1460
  1225   000A0C                     u1461:
  1226   000A0C  EF01  F005         	goto	l144
  1227   000A10                     u1460:
  1228   000A10                     
  1229                           ;Cinta.c: 210:     LATAbits.LA6=1;
  1230   000A10  8C89               	bsf	137,6,c	;volatile
  1231                           
  1232                           ;Cinta.c: 211:     while (giro < 2) {
  1233   000A12  EF38  F005         	goto	l2143
  1234   000A16                     l148:
  1235                           
  1236                           ;Cinta.c: 212:         if(PORTAbits.RA1==0){
  1237   000A16  B280               	btfsc	128,1,c	;volatile
  1238   000A18  EF10  F005         	goto	u1471
  1239   000A1C  EF12  F005         	goto	u1470
  1240   000A20                     u1471:
  1241   000A20  EF14  F005         	goto	l150
  1242   000A24                     u1470:
  1243   000A24                     
  1244                           ;Cinta.c: 213:             banderaM=1;
  1245   000A24  0E01               	movlw	1
  1246   000A26  6E4C               	movwf	_banderaM^0,c
  1247   000A28                     l150:
  1248   000A28  AA81               	btfss	129,5,c	;volatile
  1249   000A2A  EF19  F005         	goto	u1481
  1250   000A2E  EF1B  F005         	goto	u1480
  1251   000A32                     u1481:
  1252   000A32  EF14  F005         	goto	l150
  1253   000A36                     u1480:
  1254   000A36  EF2F  F005         	goto	l2139
  1255   000A3A                     l154:
  1256                           
  1257                           ;Cinta.c: 217:              if(PORTAbits.RA1==0){
  1258   000A3A  B280               	btfsc	128,1,c	;volatile
  1259   000A3C  EF22  F005         	goto	u1491
  1260   000A40  EF24  F005         	goto	u1490
  1261   000A44                     u1491:
  1262   000A44  EF26  F005         	goto	l2135
  1263   000A48                     u1490:
  1264   000A48                     
  1265                           ;Cinta.c: 218:             banderaM=1;
  1266   000A48  0E01               	movlw	1
  1267   000A4A  6E4C               	movwf	_banderaM^0,c
  1268   000A4C                     l2135:
  1269                           
  1270                           ;Cinta.c: 220:         if((PORTBbits.RB7==1)){
  1271   000A4C  AE81               	btfss	129,7,c	;volatile
  1272   000A4E  EF2B  F005         	goto	u1501
  1273   000A52  EF2D  F005         	goto	u1500
  1274   000A56                     u1501:
  1275   000A56  EF2F  F005         	goto	l2139
  1276   000A5A                     u1500:
  1277   000A5A                     
  1278                           ;Cinta.c: 221:             banderaN=1;
  1279   000A5A  0E01               	movlw	1
  1280   000A5C  6E4E               	movwf	_banderaN^0,c
  1281   000A5E                     l2139:
  1282                           
  1283                           ;Cinta.c: 216:         while(PORTBbits.RB5==1){
  1284   000A5E  BA81               	btfsc	129,5,c	;volatile
  1285   000A60  EF34  F005         	goto	u1511
  1286   000A64  EF36  F005         	goto	u1510
  1287   000A68                     u1511:
  1288   000A68  EF1D  F005         	goto	l154
  1289   000A6C                     u1510:
  1290   000A6C                     
  1291                           ;Cinta.c: 224:         giro++;
  1292   000A6C  4A44               	infsnz	main@giro^0,f,c
  1293   000A6E  2A45               	incf	(main@giro+1)^0,f,c
  1294   000A70                     l2143:
  1295                           
  1296                           ;Cinta.c: 211:     while (giro < 2) {
  1297   000A70  BE45               	btfsc	(main@giro+1)^0,7,c
  1298   000A72  EF44  F005         	goto	u1521
  1299   000A76  5045               	movf	(main@giro+1)^0,w,c
  1300   000A78  E109               	bnz	u1520
  1301   000A7A  0E02               	movlw	2
  1302   000A7C  5C44               	subwf	main@giro^0,w,c
  1303   000A7E  A0D8               	btfss	status,0,c
  1304   000A80  EF44  F005         	goto	u1521
  1305   000A84  EF46  F005         	goto	u1520
  1306   000A88                     u1521:
  1307   000A88  EF0B  F005         	goto	l148
  1308   000A8C                     u1520:
  1309   000A8C                     
  1310                           ;Cinta.c: 226:     if(banderaN==1){
  1311   000A8C  044E               	decf	_banderaN^0,w,c
  1312   000A8E  A4D8               	btfss	status,2,c
  1313   000A90  EF4C  F005         	goto	u1531
  1314   000A94  EF4E  F005         	goto	u1530
  1315   000A98                     u1531:
  1316   000A98  EF4F  F005         	goto	l2149
  1317   000A9C                     u1530:
  1318   000A9C                     
  1319                           ;Cinta.c: 227:         negra++;
  1320   000A9C  2A50               	incf	_negra^0,f,c
  1321   000A9E                     l2149:
  1322                           
  1323                           ;Cinta.c: 229:     if(banderaM==1){
  1324   000A9E  044C               	decf	_banderaM^0,w,c
  1325   000AA0  A4D8               	btfss	status,2,c
  1326   000AA2  EF55  F005         	goto	u1541
  1327   000AA6  EF57  F005         	goto	u1540
  1328   000AAA                     u1541:
  1329   000AAA  EF58  F005         	goto	l2153
  1330   000AAE                     u1540:
  1331   000AAE                     
  1332                           ;Cinta.c: 230:         metalica++;
  1333   000AAE  2A4F               	incf	_metalica^0,f,c
  1334   000AB0                     l2153:
  1335                           
  1336                           ;Cinta.c: 232:     if((banderaM==0)&&(banderaN==0)){
  1337   000AB0  504C               	movf	_banderaM^0,w,c
  1338   000AB2  A4D8               	btfss	status,2,c
  1339   000AB4  EF5E  F005         	goto	u1551
  1340   000AB8  EF60  F005         	goto	u1550
  1341   000ABC                     u1551:
  1342   000ABC  EF69  F005         	goto	l2159
  1343   000AC0                     u1550:
  1344   000AC0  504E               	movf	_banderaN^0,w,c
  1345   000AC2  A4D8               	btfss	status,2,c
  1346   000AC4  EF66  F005         	goto	u1561
  1347   000AC8  EF68  F005         	goto	u1560
  1348   000ACC                     u1561:
  1349   000ACC  EF69  F005         	goto	l2159
  1350   000AD0                     u1560:
  1351   000AD0                     
  1352                           ;Cinta.c: 233:         blanca++;
  1353   000AD0  2A51               	incf	_blanca^0,f,c
  1354   000AD2                     l2159:
  1355                           
  1356                           ;Cinta.c: 235:     LATAbits.LA6=0;
  1357   000AD2  9C89               	bcf	137,6,c	;volatile
  1358   000AD4                     
  1359                           ;Cinta.c: 236:     escena=6;
  1360   000AD4  0E06               	movlw	6
  1361   000AD6  6E4B               	movwf	_escena^0,c
  1362   000AD8                     
  1363                           ;Cinta.c: 237:     mostrar_conteo();
  1364   000AD8  ECAC  F005         	call	_mostrar_conteo	;wreg free
  1365   000ADC                     
  1366                           ;Cinta.c: 238:     LATCbits.LC0=1;
  1367   000ADC  808B               	bsf	139,0,c	;volatile
  1368   000ADE                     l162:
  1369   000ADE  B480               	btfsc	128,2,c	;volatile
  1370   000AE0  EF74  F005         	goto	u1571
  1371   000AE4  EF76  F005         	goto	u1570
  1372   000AE8                     u1571:
  1373   000AE8  EF6F  F005         	goto	l162
  1374   000AEC                     u1570:
  1375   000AEC                     
  1376                           ;Cinta.c: 240:     LATCbits.LC0=0;
  1377   000AEC  908B               	bcf	139,0,c	;volatile
  1378   000AEE                     
  1379                           ;Cinta.c: 241:     mostrar_conteo();
  1380   000AEE  ECAC  F005         	call	_mostrar_conteo	;wreg free
  1381   000AF2                     
  1382                           ;Cinta.c: 242:     LATCbits.LC6=1;
  1383   000AF2  8C8B               	bsf	139,6,c	;volatile
  1384   000AF4                     
  1385                           ;Cinta.c: 243:     _delay((unsigned long)((1000)*(1000000UL/4000.0)));
  1386   000AF4  0E02               	movlw	2
  1387   000AF6  6E43               	movwf	(??_main+1)^0,c
  1388   000AF8  0E45               	movlw	69
  1389   000AFA  6E42               	movwf	??_main^0,c
  1390   000AFC  0EAA               	movlw	170
  1391   000AFE                     u1677:
  1392   000AFE  2EE8               	decfsz	wreg,f,c
  1393   000B00  D7FE               	bra	u1677
  1394   000B02  2E42               	decfsz	??_main^0,f,c
  1395   000B04  D7FC               	bra	u1677
  1396   000B06  2E43               	decfsz	(??_main+1)^0,f,c
  1397   000B08  D7FA               	bra	u1677
  1398   000B0A                     
  1399                           ;Cinta.c: 244:     _delay((unsigned long)((1000)*(1000000UL/4000.0)));
  1400   000B0A  0E02               	movlw	2
  1401   000B0C  6E43               	movwf	(??_main+1)^0,c
  1402   000B0E  0E45               	movlw	69
  1403   000B10  6E42               	movwf	??_main^0,c
  1404   000B12  0EAA               	movlw	170
  1405   000B14                     u1687:
  1406   000B14  2EE8               	decfsz	wreg,f,c
  1407   000B16  D7FE               	bra	u1687
  1408   000B18  2E42               	decfsz	??_main^0,f,c
  1409   000B1A  D7FC               	bra	u1687
  1410   000B1C  2E43               	decfsz	(??_main+1)^0,f,c
  1411   000B1E  D7FA               	bra	u1687
  1412   000B20                     
  1413                           ;Cinta.c: 245:     LATCbits.LC1=1;
  1414   000B20  828B               	bsf	139,1,c	;volatile
  1415   000B22                     l165:
  1416   000B22  B680               	btfsc	128,3,c	;volatile
  1417   000B24  EF96  F005         	goto	u1581
  1418   000B28  EF98  F005         	goto	u1580
  1419   000B2C                     u1581:
  1420   000B2C  EF91  F005         	goto	l165
  1421   000B30                     u1580:
  1422   000B30                     
  1423                           ;Cinta.c: 247:     LATCbits.LC1=0;
  1424   000B30  928B               	bcf	139,1,c	;volatile
  1425   000B32                     
  1426                           ;Cinta.c: 248:     _delay((unsigned long)((500)*(1000000UL/4000.0)));
  1427   000B32  0EA3               	movlw	163
  1428   000B34  6E42               	movwf	??_main^0,c
  1429   000B36  0E55               	movlw	85
  1430   000B38                     u1697:
  1431   000B38  2EE8               	decfsz	wreg,f,c
  1432   000B3A  D7FE               	bra	u1697
  1433   000B3C  2E42               	decfsz	??_main^0,f,c
  1434   000B3E  D7FC               	bra	u1697
  1435   000B40  0000               	nop	
  1436   000B42                     
  1437                           ;Cinta.c: 249:     LATCbits.LC6=0;
  1438   000B42  9C8B               	bcf	139,6,c	;volatile
  1439   000B44                     
  1440                           ;Cinta.c: 250:     banderaM=0;
  1441   000B44  6A4C               	clrf	_banderaM^0,c
  1442   000B46                     
  1443                           ;Cinta.c: 251:     banderaN=0;
  1444   000B46  6A4E               	clrf	_banderaN^0,c
  1445   000B48                     
  1446                           ;Cinta.c: 252:     banderaB=0;
  1447   000B48  6A4D               	clrf	_banderaB^0,c
  1448   000B4A                     
  1449                           ;Cinta.c: 253:     giro= 0;
  1450   000B4A  6A45               	clrf	(main@giro+1)^0,c
  1451   000B4C  0E00               	movlw	0
  1452   000B4E  6E44               	movwf	main@giro^0,c
  1453   000B50  EF7B  F004         	goto	l123
  1454   000B54  EF07  F000         	goto	start
  1455   000B58                     __end_of_main:
  1456                           	callstack 0
  1457                           
  1458 ;; *************** function _mostrar_conteo *****************
  1459 ;; Defined at:
  1460 ;;		line 95 in file "Cinta.c"
  1461 ;; Parameters:    Size  Location     Type
  1462 ;;		None
  1463 ;; Auto vars:     Size  Location     Type
  1464 ;;		None
  1465 ;; Return value:  Size  Location     Type
  1466 ;;                  1    wreg      void 
  1467 ;; Registers used:
  1468 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1469 ;; Tracked objects:
  1470 ;;		On entry : 0/0
  1471 ;;		On exit  : 0/0
  1472 ;;		Unchanged: 0/0
  1473 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1474 ;;      Params:         0       0       0       0       0       0       0       0       0
  1475 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1476 ;;      Temps:          1       0       0       0       0       0       0       0       0
  1477 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1478 ;;Total ram usage:        1 bytes
  1479 ;; Hardware stack levels used: 1
  1480 ;; Hardware stack levels required when called: 7
  1481 ;; This function calls:
  1482 ;;		_Lcd_Clear
  1483 ;;		_Lcd_Cmd
  1484 ;;		_Lcd_Set_Cursor
  1485 ;;		_Lcd_Write_String
  1486 ;;		_mostrar_variable
  1487 ;; This function is called by:
  1488 ;;		_main
  1489 ;; This function uses a non-reentrant model
  1490 ;;
  1491                           
  1492                           	psect	text1
  1493   000B58                     __ptext1:
  1494                           	callstack 0
  1495   000B58                     _mostrar_conteo:
  1496                           	callstack 23
  1497   000B58                     
  1498                           ;Cinta.c: 96:     Lcd_Clear();
  1499   000B58  ECB7  F00A         	call	_Lcd_Clear	;wreg free
  1500   000B5C                     
  1501                           ;Cinta.c: 97:     Lcd_Set_Cursor(1,1);
  1502   000B5C  0E01               	movlw	1
  1503   000B5E  6E04               	movwf	Lcd_Set_Cursor@b^0,c
  1504   000B60  0E01               	movlw	1
  1505   000B62  EC85  F007         	call	_Lcd_Set_Cursor
  1506   000B66                     
  1507                           ;Cinta.c: 98:     if(escena==0){
  1508   000B66  504B               	movf	_escena^0,w,c
  1509   000B68  A4D8               	btfss	status,2,c
  1510   000B6A  EFB9  F005         	goto	u1261
  1511   000B6E  EFBB  F005         	goto	u1260
  1512   000B72                     u1261:
  1513   000B72  EFC3  F005         	goto	l2011
  1514   000B76                     u1260:
  1515   000B76                     
  1516                           ;Cinta.c: 99:         Lcd_Write_String("Configurando");
  1517   000B76  0E3D               	movlw	low STR_2
  1518   000B78  6E06               	movwf	Lcd_Write_String@a^0,c
  1519   000B7A  5006               	movf	Lcd_Write_String@a^0,w,c
  1520   000B7C  A4D8               	btfss	status,2,c
  1521   000B7E  0E08               	movlw	high __smallconst
  1522   000B80  6E07               	movwf	(Lcd_Write_String@a+1)^0,c
  1523   000B82  EC14  F009         	call	_Lcd_Write_String	;wreg free
  1524   000B86                     l2011:
  1525                           
  1526                           ;Cinta.c: 101:     if(escena==1){
  1527   000B86  044B               	decf	_escena^0,w,c
  1528   000B88  A4D8               	btfss	status,2,c
  1529   000B8A  EFC9  F005         	goto	u1271
  1530   000B8E  EFCB  F005         	goto	u1270
  1531   000B92                     u1271:
  1532   000B92  EFD3  F005         	goto	l2015
  1533   000B96                     u1270:
  1534   000B96                     
  1535                           ;Cinta.c: 102:     Lcd_Write_String("Inicializando");
  1536   000B96  0E2F               	movlw	low STR_3
  1537   000B98  6E06               	movwf	Lcd_Write_String@a^0,c
  1538   000B9A  5006               	movf	Lcd_Write_String@a^0,w,c
  1539   000B9C  A4D8               	btfss	status,2,c
  1540   000B9E  0E08               	movlw	high __smallconst
  1541   000BA0  6E07               	movwf	(Lcd_Write_String@a+1)^0,c
  1542   000BA2  EC14  F009         	call	_Lcd_Write_String	;wreg free
  1543   000BA6                     l2015:
  1544                           
  1545                           ;Cinta.c: 104:     if(escena==2){
  1546   000BA6  0E02               	movlw	2
  1547   000BA8  184B               	xorwf	_escena^0,w,c
  1548   000BAA  A4D8               	btfss	status,2,c
  1549   000BAC  EFDA  F005         	goto	u1281
  1550   000BB0  EFDC  F005         	goto	u1280
  1551   000BB4                     u1281:
  1552   000BB4  EFE4  F005         	goto	l2019
  1553   000BB8                     u1280:
  1554   000BB8                     
  1555                           ;Cinta.c: 105:     Lcd_Write_String("START");
  1556   000BB8  0E6B               	movlw	low STR_4
  1557   000BBA  6E06               	movwf	Lcd_Write_String@a^0,c
  1558   000BBC  5006               	movf	Lcd_Write_String@a^0,w,c
  1559   000BBE  A4D8               	btfss	status,2,c
  1560   000BC0  0E08               	movlw	high __smallconst
  1561   000BC2  6E07               	movwf	(Lcd_Write_String@a+1)^0,c
  1562   000BC4  EC14  F009         	call	_Lcd_Write_String	;wreg free
  1563   000BC8                     l2019:
  1564                           
  1565                           ;Cinta.c: 107:     if(escena==3){
  1566   000BC8  0E03               	movlw	3
  1567   000BCA  184B               	xorwf	_escena^0,w,c
  1568   000BCC  A4D8               	btfss	status,2,c
  1569   000BCE  EFEB  F005         	goto	u1291
  1570   000BD2  EFED  F005         	goto	u1290
  1571   000BD6                     u1291:
  1572   000BD6  EFF5  F005         	goto	l2023
  1573   000BDA                     u1290:
  1574   000BDA                     
  1575                           ;Cinta.c: 108:     Lcd_Write_String("Pieza en cinta");
  1576   000BDA  0E11               	movlw	low STR_5
  1577   000BDC  6E06               	movwf	Lcd_Write_String@a^0,c
  1578   000BDE  5006               	movf	Lcd_Write_String@a^0,w,c
  1579   000BE0  A4D8               	btfss	status,2,c
  1580   000BE2  0E08               	movlw	high __smallconst
  1581   000BE4  6E07               	movwf	(Lcd_Write_String@a+1)^0,c
  1582   000BE6  EC14  F009         	call	_Lcd_Write_String	;wreg free
  1583   000BEA                     l2023:
  1584                           
  1585                           ;Cinta.c: 110:     if(escena==4){
  1586   000BEA  0E04               	movlw	4
  1587   000BEC  184B               	xorwf	_escena^0,w,c
  1588   000BEE  A4D8               	btfss	status,2,c
  1589   000BF0  EFFC  F005         	goto	u1301
  1590   000BF4  EFFE  F005         	goto	u1300
  1591   000BF8                     u1301:
  1592   000BF8  EF06  F006         	goto	l2027
  1593   000BFC                     u1300:
  1594   000BFC                     
  1595                           ;Cinta.c: 111:     Lcd_Write_String("Agarrando pieza");
  1596   000BFC  0E01               	movlw	low STR_6
  1597   000BFE  6E06               	movwf	Lcd_Write_String@a^0,c
  1598   000C00  5006               	movf	Lcd_Write_String@a^0,w,c
  1599   000C02  A4D8               	btfss	status,2,c
  1600   000C04  0E08               	movlw	high __smallconst
  1601   000C06  6E07               	movwf	(Lcd_Write_String@a+1)^0,c
  1602   000C08  EC14  F009         	call	_Lcd_Write_String	;wreg free
  1603   000C0C                     l2027:
  1604                           
  1605                           ;Cinta.c: 113:     if(escena==5){
  1606   000C0C  0E05               	movlw	5
  1607   000C0E  184B               	xorwf	_escena^0,w,c
  1608   000C10  A4D8               	btfss	status,2,c
  1609   000C12  EF0D  F006         	goto	u1311
  1610   000C16  EF0F  F006         	goto	u1310
  1611   000C1A                     u1311:
  1612   000C1A  EF17  F006         	goto	l2031
  1613   000C1E                     u1310:
  1614   000C1E                     
  1615                           ;Cinta.c: 114:     Lcd_Write_String("Plato rotativo");
  1616   000C1E  0E20               	movlw	low STR_7
  1617   000C20  6E06               	movwf	Lcd_Write_String@a^0,c
  1618   000C22  5006               	movf	Lcd_Write_String@a^0,w,c
  1619   000C24  A4D8               	btfss	status,2,c
  1620   000C26  0E08               	movlw	high __smallconst
  1621   000C28  6E07               	movwf	(Lcd_Write_String@a+1)^0,c
  1622   000C2A  EC14  F009         	call	_Lcd_Write_String	;wreg free
  1623   000C2E                     l2031:
  1624                           
  1625                           ;Cinta.c: 116:     if(escena==6){
  1626   000C2E  0E06               	movlw	6
  1627   000C30  184B               	xorwf	_escena^0,w,c
  1628   000C32  A4D8               	btfss	status,2,c
  1629   000C34  EF1E  F006         	goto	u1321
  1630   000C38  EF20  F006         	goto	u1320
  1631   000C3C                     u1321:
  1632   000C3C  EF28  F006         	goto	l2035
  1633   000C40                     u1320:
  1634   000C40                     
  1635                           ;Cinta.c: 117:     Lcd_Write_String("Entregando");
  1636   000C40  0E4A               	movlw	low STR_8
  1637   000C42  6E06               	movwf	Lcd_Write_String@a^0,c
  1638   000C44  5006               	movf	Lcd_Write_String@a^0,w,c
  1639   000C46  A4D8               	btfss	status,2,c
  1640   000C48  0E08               	movlw	high __smallconst
  1641   000C4A  6E07               	movwf	(Lcd_Write_String@a+1)^0,c
  1642   000C4C  EC14  F009         	call	_Lcd_Write_String	;wreg free
  1643   000C50                     l2035:
  1644                           
  1645                           ;Cinta.c: 119:     Lcd_Set_Cursor(2,1);
  1646   000C50  0E01               	movlw	1
  1647   000C52  6E04               	movwf	Lcd_Set_Cursor@b^0,c
  1648   000C54  0E02               	movlw	2
  1649   000C56  EC85  F007         	call	_Lcd_Set_Cursor
  1650   000C5A                     
  1651                           ;Cinta.c: 120:     if (escena>5){
  1652   000C5A  0E05               	movlw	5
  1653   000C5C  644B               	cpfsgt	_escena^0,c
  1654   000C5E  EF33  F006         	goto	u1331
  1655   000C62  EF35  F006         	goto	u1330
  1656   000C66                     u1331:
  1657   000C66  EF6F  F006         	goto	l2053
  1658   000C6A                     u1330:
  1659   000C6A                     
  1660                           ;Cinta.c: 121:     if(banderaN==1){
  1661   000C6A  044E               	decf	_banderaN^0,w,c
  1662   000C6C  A4D8               	btfss	status,2,c
  1663   000C6E  EF3B  F006         	goto	u1341
  1664   000C72  EF3D  F006         	goto	u1340
  1665   000C76                     u1341:
  1666   000C76  EF45  F006         	goto	l2043
  1667   000C7A                     u1340:
  1668   000C7A                     
  1669                           ;Cinta.c: 122:     Lcd_Write_String("NEGRA");
  1670   000C7A  0E65               	movlw	low STR_9
  1671   000C7C  6E06               	movwf	Lcd_Write_String@a^0,c
  1672   000C7E  5006               	movf	Lcd_Write_String@a^0,w,c
  1673   000C80  A4D8               	btfss	status,2,c
  1674   000C82  0E08               	movlw	high __smallconst
  1675   000C84  6E07               	movwf	(Lcd_Write_String@a+1)^0,c
  1676   000C86  EC14  F009         	call	_Lcd_Write_String	;wreg free
  1677   000C8A                     l2043:
  1678                           
  1679                           ;Cinta.c: 124:     if(banderaM==1){
  1680   000C8A  044C               	decf	_banderaM^0,w,c
  1681   000C8C  A4D8               	btfss	status,2,c
  1682   000C8E  EF4B  F006         	goto	u1351
  1683   000C92  EF4D  F006         	goto	u1350
  1684   000C96                     u1351:
  1685   000C96  EF55  F006         	goto	l2047
  1686   000C9A                     u1350:
  1687   000C9A                     
  1688                           ;Cinta.c: 125:      Lcd_Write_String("METALICA");
  1689   000C9A  0E55               	movlw	low STR_10
  1690   000C9C  6E06               	movwf	Lcd_Write_String@a^0,c
  1691   000C9E  5006               	movf	Lcd_Write_String@a^0,w,c
  1692   000CA0  A4D8               	btfss	status,2,c
  1693   000CA2  0E08               	movlw	high __smallconst
  1694   000CA4  6E07               	movwf	(Lcd_Write_String@a+1)^0,c
  1695   000CA6  EC14  F009         	call	_Lcd_Write_String	;wreg free
  1696   000CAA                     l2047:
  1697                           
  1698                           ;Cinta.c: 127:     if ((banderaM==0)&&(banderaN==0)) {
  1699   000CAA  504C               	movf	_banderaM^0,w,c
  1700   000CAC  A4D8               	btfss	status,2,c
  1701   000CAE  EF5B  F006         	goto	u1361
  1702   000CB2  EF5D  F006         	goto	u1360
  1703   000CB6                     u1361:
  1704   000CB6  EF77  F006         	goto	l2055
  1705   000CBA                     u1360:
  1706   000CBA  504E               	movf	_banderaN^0,w,c
  1707   000CBC  A4D8               	btfss	status,2,c
  1708   000CBE  EF63  F006         	goto	u1371
  1709   000CC2  EF65  F006         	goto	u1370
  1710   000CC6                     u1371:
  1711   000CC6  EF77  F006         	goto	l2055
  1712   000CCA                     u1370:
  1713   000CCA                     
  1714                           ;Cinta.c: 128:       Lcd_Write_String("BLANCA");
  1715   000CCA  0E5E               	movlw	low STR_11
  1716   000CCC  6E06               	movwf	Lcd_Write_String@a^0,c
  1717   000CCE  5006               	movf	Lcd_Write_String@a^0,w,c
  1718   000CD0  A4D8               	btfss	status,2,c
  1719   000CD2  0E08               	movlw	high __smallconst
  1720   000CD4  6E07               	movwf	(Lcd_Write_String@a+1)^0,c
  1721   000CD6  EC14  F009         	call	_Lcd_Write_String	;wreg free
  1722   000CDA  EF77  F006         	goto	l2055
  1723   000CDE                     l2053:
  1724                           
  1725                           ;Cinta.c: 132:        Lcd_Write_String("NADA");
  1726   000CDE  0E71               	movlw	low STR_12
  1727   000CE0  6E06               	movwf	Lcd_Write_String@a^0,c
  1728   000CE2  5006               	movf	Lcd_Write_String@a^0,w,c
  1729   000CE4  A4D8               	btfss	status,2,c
  1730   000CE6  0E08               	movlw	high __smallconst
  1731   000CE8  6E07               	movwf	(Lcd_Write_String@a+1)^0,c
  1732   000CEA  EC14  F009         	call	_Lcd_Write_String	;wreg free
  1733   000CEE                     l2055:
  1734                           
  1735                           ;Cinta.c: 134:     Lcd_Cmd(0x09);
  1736   000CEE  0E09               	movlw	9
  1737   000CF0  ECAB  F00A         	call	_Lcd_Cmd
  1738   000CF4                     
  1739                           ;Cinta.c: 135:     _delay((unsigned long)((10)*(1000000UL/4000.0)));
  1740   000CF4  0E04               	movlw	4
  1741   000CF6  6E41               	movwf	??_mostrar_conteo^0,c
  1742   000CF8  0E3E               	movlw	62
  1743   000CFA                     u1707:
  1744   000CFA  2EE8               	decfsz	wreg,f,c
  1745   000CFC  D7FE               	bra	u1707
  1746   000CFE  2E41               	decfsz	??_mostrar_conteo^0,f,c
  1747   000D00  D7FC               	bra	u1707
  1748   000D02                     
  1749                           ;Cinta.c: 136:     Lcd_Cmd(0x00);
  1750   000D02  0E00               	movlw	0
  1751   000D04  ECAB  F00A         	call	_Lcd_Cmd
  1752   000D08                     
  1753                           ;Cinta.c: 137:     Lcd_Write_String("M:");
  1754   000D08  0E7E               	movlw	low STR_13
  1755   000D0A  6E06               	movwf	Lcd_Write_String@a^0,c
  1756   000D0C  5006               	movf	Lcd_Write_String@a^0,w,c
  1757   000D0E  A4D8               	btfss	status,2,c
  1758   000D10  0E08               	movlw	high __smallconst
  1759   000D12  6E07               	movwf	(Lcd_Write_String@a+1)^0,c
  1760   000D14  EC14  F009         	call	_Lcd_Write_String	;wreg free
  1761   000D18                     
  1762                           ;Cinta.c: 138:     mostrar_variable(metalica);
  1763   000D18  C04F  F02B         	movff	_metalica,mostrar_variable@x
  1764   000D1C  6A2C               	clrf	(mostrar_variable@x+1)^0,c
  1765   000D1E  EC9B  F00A         	call	_mostrar_variable	;wreg free
  1766   000D22                     
  1767                           ;Cinta.c: 139:     Lcd_Write_String(" B:");
  1768   000D22  0E76               	movlw	low STR_14
  1769   000D24  6E06               	movwf	Lcd_Write_String@a^0,c
  1770   000D26  5006               	movf	Lcd_Write_String@a^0,w,c
  1771   000D28  A4D8               	btfss	status,2,c
  1772   000D2A  0E08               	movlw	high __smallconst
  1773   000D2C  6E07               	movwf	(Lcd_Write_String@a+1)^0,c
  1774   000D2E  EC14  F009         	call	_Lcd_Write_String	;wreg free
  1775   000D32                     
  1776                           ;Cinta.c: 140:     mostrar_variable(blanca);
  1777   000D32  C051  F02B         	movff	_blanca,mostrar_variable@x
  1778   000D36  6A2C               	clrf	(mostrar_variable@x+1)^0,c
  1779   000D38  EC9B  F00A         	call	_mostrar_variable	;wreg free
  1780   000D3C                     
  1781                           ;Cinta.c: 141:     Lcd_Write_String(" N:");
  1782   000D3C  0E7A               	movlw	low STR_15
  1783   000D3E  6E06               	movwf	Lcd_Write_String@a^0,c
  1784   000D40  5006               	movf	Lcd_Write_String@a^0,w,c
  1785   000D42  A4D8               	btfss	status,2,c
  1786   000D44  0E08               	movlw	high __smallconst
  1787   000D46  6E07               	movwf	(Lcd_Write_String@a+1)^0,c
  1788   000D48  EC14  F009         	call	_Lcd_Write_String	;wreg free
  1789   000D4C                     
  1790                           ;Cinta.c: 142:     mostrar_variable(negra);
  1791   000D4C  C050  F02B         	movff	_negra,mostrar_variable@x
  1792   000D50  6A2C               	clrf	(mostrar_variable@x+1)^0,c
  1793   000D52  EC9B  F00A         	call	_mostrar_variable	;wreg free
  1794   000D56  0012               	return		;funcret
  1795   000D58                     __end_of_mostrar_conteo:
  1796                           	callstack 0
  1797                           
  1798 ;; *************** function _mostrar_variable *****************
  1799 ;; Defined at:
  1800 ;;		line 44 in file "Cinta.c"
  1801 ;; Parameters:    Size  Location     Type
  1802 ;;  x               2   41[COMRAM] int 
  1803 ;; Auto vars:     Size  Location     Type
  1804 ;;  buffer         20   43[COMRAM] unsigned char [20]
  1805 ;; Return value:  Size  Location     Type
  1806 ;;                  1    wreg      void 
  1807 ;; Registers used:
  1808 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1809 ;; Tracked objects:
  1810 ;;		On entry : 0/0
  1811 ;;		On exit  : 0/0
  1812 ;;		Unchanged: 0/0
  1813 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1814 ;;      Params:         2       0       0       0       0       0       0       0       0
  1815 ;;      Locals:        20       0       0       0       0       0       0       0       0
  1816 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1817 ;;      Totals:        22       0       0       0       0       0       0       0       0
  1818 ;;Total ram usage:       22 bytes
  1819 ;; Hardware stack levels used: 1
  1820 ;; Hardware stack levels required when called: 6
  1821 ;; This function calls:
  1822 ;;		_Lcd_Write_String
  1823 ;;		_sprintf
  1824 ;; This function is called by:
  1825 ;;		_mostrar_conteo
  1826 ;; This function uses a non-reentrant model
  1827 ;;
  1828                           
  1829                           	psect	text2
  1830   001536                     __ptext2:
  1831                           	callstack 0
  1832   001536                     _mostrar_variable:
  1833                           	callstack 23
  1834   001536                     
  1835                           ;Cinta.c: 45:     char buffer[20];;Cinta.c: 46:      sprintf(buffer,"%d",x);
  1836   001536  0E2D               	movlw	low mostrar_variable@buffer
  1837   001538  6E1B               	movwf	sprintf@s^0,c
  1838   00153A  0E81               	movlw	low STR_1
  1839   00153C  6E1C               	movwf	sprintf@fmt^0,c
  1840   00153E  C02B  F01D         	movff	mostrar_variable@x,?_sprintf+2
  1841   001542  C02C  F01E         	movff	mostrar_variable@x+1,?_sprintf+3
  1842   001546  EC5F  F00A         	call	_sprintf	;wreg free
  1843   00154A                     
  1844                           ;Cinta.c: 47:     Lcd_Write_String(buffer);
  1845   00154A  0E2D               	movlw	low mostrar_variable@buffer
  1846   00154C  6E06               	movwf	Lcd_Write_String@a^0,c
  1847   00154E  6A07               	clrf	(Lcd_Write_String@a+1)^0,c
  1848   001550  EC14  F009         	call	_Lcd_Write_String	;wreg free
  1849   001554  0012               	return		;funcret
  1850   001556                     __end_of_mostrar_variable:
  1851                           	callstack 0
  1852                           
  1853 ;; *************** function _sprintf *****************
  1854 ;; Defined at:
  1855 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v3.10\pic\sources\c99\common\nf_sprintf.c"
  1856 ;; Parameters:    Size  Location     Type
  1857 ;;  s               1   25[COMRAM] PTR unsigned char 
  1858 ;;		 -> mostrar_variable@buffer(20), 
  1859 ;;  fmt             1   26[COMRAM] PTR const unsigned char 
  1860 ;;		 -> STR_1(3), 
  1861 ;; Auto vars:     Size  Location     Type
  1862 ;;  f              11   30[COMRAM] struct _IO_FILE
  1863 ;;  ret             2    0        int 
  1864 ;;  ap              1   29[COMRAM] PTR void [1]
  1865 ;;		 -> ?_sprintf(2), 
  1866 ;; Return value:  Size  Location     Type
  1867 ;;                  2   25[COMRAM] int 
  1868 ;; Registers used:
  1869 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1870 ;; Tracked objects:
  1871 ;;		On entry : 0/0
  1872 ;;		On exit  : 0/0
  1873 ;;		Unchanged: 0/0
  1874 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1875 ;;      Params:         4       0       0       0       0       0       0       0       0
  1876 ;;      Locals:        12       0       0       0       0       0       0       0       0
  1877 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1878 ;;      Totals:        16       0       0       0       0       0       0       0       0
  1879 ;;Total ram usage:       16 bytes
  1880 ;; Hardware stack levels used: 1
  1881 ;; Hardware stack levels required when called: 5
  1882 ;; This function calls:
  1883 ;;		_vfprintf
  1884 ;; This function is called by:
  1885 ;;		_mostrar_variable
  1886 ;; This function uses a non-reentrant model
  1887 ;;
  1888                           
  1889                           	psect	text3
  1890   0014BE                     __ptext3:
  1891                           	callstack 0
  1892   0014BE                     _sprintf:
  1893                           	callstack 23
  1894   0014BE  0E1D               	movlw	low (?_sprintf+2)
  1895   0014C0  6E1F               	movwf	sprintf@ap^0,c
  1896   0014C2  C01B  F020         	movff	sprintf@s,sprintf@f
  1897   0014C6  6A23               	clrf	(sprintf@f+3)^0,c
  1898   0014C8  0E00               	movlw	0
  1899   0014CA  6E22               	movwf	(sprintf@f+2)^0,c
  1900   0014CC  6A2A               	clrf	(sprintf@f+10)^0,c
  1901   0014CE  0E00               	movlw	0
  1902   0014D0  6E29               	movwf	(sprintf@f+9)^0,c
  1903   0014D2  0E20               	movlw	low sprintf@f
  1904   0014D4  6E17               	movwf	vfprintf@fp^0,c
  1905   0014D6  C01C  F018         	movff	sprintf@fmt,vfprintf@fmt
  1906   0014DA  0E1F               	movlw	low sprintf@ap
  1907   0014DC  6E19               	movwf	vfprintf@ap^0,c
  1908   0014DE  ECEF  F009         	call	_vfprintf	;wreg free
  1909   0014E2  501B               	movf	sprintf@s^0,w,c
  1910   0014E4  2422               	addwf	(sprintf@f+2)^0,w,c
  1911   0014E6  6ED9               	movwf	fsr2l,c
  1912   0014E8  6ADA               	clrf	fsr2h,c
  1913   0014EA  6ADF               	clrf	indf2,c
  1914   0014EC  0012               	return		;funcret
  1915   0014EE                     __end_of_sprintf:
  1916                           	callstack 0
  1917                           
  1918 ;; *************** function _vfprintf *****************
  1919 ;; Defined at:
  1920 ;;		line 1817 in file "C:\Program Files\Microchip\xc8\v3.10\pic\sources\c99\common\doprnt.c"
  1921 ;; Parameters:    Size  Location     Type
  1922 ;;  fp              1   21[COMRAM] PTR struct _IO_FILE
  1923 ;;		 -> sprintf@f(11), 
  1924 ;;  fmt             1   22[COMRAM] PTR const unsigned char 
  1925 ;;		 -> STR_1(3), 
  1926 ;;  ap              1   23[COMRAM] PTR PTR void 
  1927 ;;		 -> sprintf@ap(1), 
  1928 ;; Auto vars:     Size  Location     Type
  1929 ;;  cfmt            1   24[COMRAM] PTR unsigned char 
  1930 ;;		 -> STR_1(3), 
  1931 ;; Return value:  Size  Location     Type
  1932 ;;                  2   21[COMRAM] int 
  1933 ;; Registers used:
  1934 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1935 ;; Tracked objects:
  1936 ;;		On entry : 0/0
  1937 ;;		On exit  : 0/0
  1938 ;;		Unchanged: 0/0
  1939 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1940 ;;      Params:         3       0       0       0       0       0       0       0       0
  1941 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1942 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1943 ;;      Totals:         4       0       0       0       0       0       0       0       0
  1944 ;;Total ram usage:        4 bytes
  1945 ;; Hardware stack levels used: 1
  1946 ;; Hardware stack levels required when called: 4
  1947 ;; This function calls:
  1948 ;;		_vfpfcnvrt
  1949 ;; This function is called by:
  1950 ;;		_sprintf
  1951 ;; This function uses a non-reentrant model
  1952 ;;
  1953                           
  1954                           	psect	text4
  1955   0013DE                     __ptext4:
  1956                           	callstack 0
  1957   0013DE                     _vfprintf:
  1958                           	callstack 23
  1959   0013DE                     
  1960                           ;C:\Program Files\Microchip\xc8\v3.10\pic\sources\c99\common\doprnt.c: 1817: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v3.10\pic\source
      +                          s\c99\common\doprnt.c: 1818: {;C:\Program Files\Microchip\xc8\v3.10\pic\sources\c99\comm
      +                          on\doprnt.c: 1820:     char *cfmt;;C:\Program Files\Microchip\xc8\v3.10\pic\sources\c99\
      +                          common\doprnt.c: 1822:     cfmt = (char *)fmt;
  1961   0013DE  C018  F01A         	movff	vfprintf@fmt,vfprintf@cfmt
  1962                           
  1963                           ;C:\Program Files\Microchip\xc8\v3.10\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  1964   0013E2  EFFB  F009         	goto	l1931
  1965   0013E6                     l1929:
  1966                           
  1967                           ;C:\Program Files\Microchip\xc8\v3.10\pic\sources\c99\common\doprnt.c: 1830:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  1968   0013E6  C017  F00C         	movff	vfprintf@fp,vfpfcnvrt@fp
  1969   0013EA  0E1A               	movlw	low vfprintf@cfmt
  1970   0013EC  6E0D               	movwf	vfpfcnvrt@fmt^0,c
  1971   0013EE  C019  F00E         	movff	vfprintf@ap,vfpfcnvrt@ap
  1972   0013F2  ECAC  F006         	call	_vfpfcnvrt	;wreg free
  1973   0013F6                     l1931:
  1974                           
  1975                           ;C:\Program Files\Microchip\xc8\v3.10\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  1976   0013F6  C01A  FFF6         	movff	vfprintf@cfmt,tblptrl
  1977   0013FA                     	if	1	;There is more than 1 active tblptr byte
  1978   0013FA  0E08               	movlw	high __smallconst
  1979   0013FC  6EF7               	movwf	tblptrh,c
  1980   0013FE                     	endif
  1981   0013FE                     	if	0	;tblptru may be non-zero
  1982   0013FE                     	endif
  1983   0013FE                     	if	0	;tblptru may be non-zero
  1984   0013FE                     	endif
  1985   0013FE  0008               	tblrd		*
  1986   001400  50F5               	movf	tablat,w,c
  1987   001402  0900               	iorlw	0
  1988   001404  A4D8               	btfss	status,2,c
  1989   001406  EF07  F00A         	goto	u1181
  1990   00140A  EF09  F00A         	goto	u1180
  1991   00140E                     u1181:
  1992   00140E  EFF3  F009         	goto	l1929
  1993   001412                     u1180:
  1994   001412                     
  1995                           ;C:\Program Files\Microchip\xc8\v3.10\pic\sources\c99\common\doprnt.c: 1835:  return 0;
  1996   001412  6A18               	clrf	(?_vfprintf+1)^0,c
  1997   001414  0E00               	movlw	0
  1998   001416  6E17               	movwf	?_vfprintf^0,c
  1999   001418  0012               	return		;funcret
  2000   00141A                     __end_of_vfprintf:
  2001                           	callstack 0
  2002                           
  2003 ;; *************** function _vfpfcnvrt *****************
  2004 ;; Defined at:
  2005 ;;		line 1177 in file "C:\Program Files\Microchip\xc8\v3.10\pic\sources\c99\common\doprnt.c"
  2006 ;; Parameters:    Size  Location     Type
  2007 ;;  fp              1   10[COMRAM] PTR struct _IO_FILE
  2008 ;;		 -> sprintf@f(11), 
  2009 ;;  fmt             1   11[COMRAM] PTR PTR unsigned char 
  2010 ;;		 -> vfprintf@cfmt(1), 
  2011 ;;  ap              1   12[COMRAM] PTR PTR void 
  2012 ;;		 -> sprintf@ap(1), 
  2013 ;; Auto vars:     Size  Location     Type
  2014 ;;  convarg         4   16[COMRAM] struct .
  2015 ;;  c               1   20[COMRAM] unsigned char 
  2016 ;;  cp              1   15[COMRAM] PTR unsigned char 
  2017 ;;		 -> STR_1(3), 
  2018 ;;  done            1   14[COMRAM] _Bool 
  2019 ;; Return value:  Size  Location     Type
  2020 ;;                  1    wreg      void 
  2021 ;; Registers used:
  2022 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2023 ;; Tracked objects:
  2024 ;;		On entry : 0/0
  2025 ;;		On exit  : 0/0
  2026 ;;		Unchanged: 0/0
  2027 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2028 ;;      Params:         3       0       0       0       0       0       0       0       0
  2029 ;;      Locals:         7       0       0       0       0       0       0       0       0
  2030 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2031 ;;      Totals:        11       0       0       0       0       0       0       0       0
  2032 ;;Total ram usage:       11 bytes
  2033 ;; Hardware stack levels used: 1
  2034 ;; Hardware stack levels required when called: 3
  2035 ;; This function calls:
  2036 ;;		___awdiv
  2037 ;;		___awmod
  2038 ;;		_abs
  2039 ;;		_fputc
  2040 ;; This function is called by:
  2041 ;;		_vfprintf
  2042 ;; This function uses a non-reentrant model
  2043 ;;
  2044                           
  2045                           	psect	text5
  2046   000D58                     __ptext5:
  2047                           	callstack 0
  2048   000D58                     _vfpfcnvrt:
  2049                           	callstack 23
  2050   000D58                     
  2051                           ;C:\Program Files\Microchip\xc8\v3.10\pic\sources\c99\common\doprnt.c: 1177: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v3.10\pic\sources\c99\c
      +                          ommon\doprnt.c: 1178: {;C:\Program Files\Microchip\xc8\v3.10\pic\sources\c99\common\dopr
      +                          nt.c: 1179:     char c, *cp;;C:\Program Files\Microchip\xc8\v3.10\pic\sources\c99\common
      +                          \doprnt.c: 1180:     _Bool done;;C:\Program Files\Microchip\xc8\v3.10\pic\sources\c99\co
      +                          mmon\doprnt.c: 1188:  } convarg;;C:\Program Files\Microchip\xc8\v3.10\pic\sources\c99\co
      +                          mmon\doprnt.c: 1201:     if ((*fmt)[0] == '%') {
  2052   000D58  500D               	movf	vfpfcnvrt@fmt^0,w,c
  2053   000D5A  6ED9               	movwf	fsr2l,c
  2054   000D5C  6ADA               	clrf	fsr2h,c
  2055   000D5E  CFDF FFF6          	movff	indf2,tblptrl
  2056   000D62                     	if	1	;There is more than 1 active tblptr byte
  2057   000D62  0E08               	movlw	high __smallconst
  2058   000D64  6EF7               	movwf	tblptrh,c
  2059   000D66                     	endif
  2060   000D66                     	if	0	;tblptru may be non-zero
  2061   000D66                     	endif
  2062   000D66                     	if	0	;tblptru may be non-zero
  2063   000D66                     	endif
  2064   000D66  0008               	tblrd		*
  2065   000D68  50F5               	movf	tablat,w,c
  2066   000D6A  0A25               	xorlw	37
  2067   000D6C  A4D8               	btfss	status,2,c
  2068   000D6E  EFBB  F006         	goto	u1081
  2069   000D72  EFBD  F006         	goto	u1080
  2070   000D76                     u1081:
  2071   000D76  EF73  F007         	goto	l1921
  2072   000D7A                     u1080:
  2073   000D7A                     
  2074                           ;C:\Program Files\Microchip\xc8\v3.10\pic\sources\c99\common\doprnt.c: 1202:         ++*
      +                          fmt;
  2075   000D7A  500D               	movf	vfpfcnvrt@fmt^0,w,c
  2076   000D7C  6ED9               	movwf	fsr2l,c
  2077   000D7E  6ADA               	clrf	fsr2h,c
  2078   000D80  2ADF               	incf	indf2,f,c
  2079   000D82                     
  2080                           ;C:\Program Files\Microchip\xc8\v3.10\pic\sources\c99\common\doprnt.c: 1204:         fla
      +                          gs = width = 0;
  2081   000D82  6A47               	clrf	(_width+1)^0,c
  2082   000D84  0E00               	movlw	0
  2083   000D86  6E46               	movwf	_width^0,c
  2084   000D88  C046  F04A         	movff	_width,_flags
  2085   000D8C                     
  2086                           ;C:\Program Files\Microchip\xc8\v3.10\pic\sources\c99\common\doprnt.c: 1205:         pre
      +                          c = -1;
  2087   000D8C  6848               	setf	_prec^0,c
  2088   000D8E  6849               	setf	(_prec+1)^0,c
  2089   000D90                     
  2090                           ;C:\Program Files\Microchip\xc8\v3.10\pic\sources\c99\common\doprnt.c: 1291:   cp = *fmt
      +                          ;
  2091   000D90  500D               	movf	vfpfcnvrt@fmt^0,w,c
  2092   000D92  6ED9               	movwf	fsr2l,c
  2093   000D94  6ADA               	clrf	fsr2h,c
  2094   000D96  50DF               	movf	indf2,w,c
  2095   000D98  6E11               	movwf	vfpfcnvrt@cp^0,c
  2096   000D9A                     
  2097                           ;C:\Program Files\Microchip\xc8\v3.10\pic\sources\c99\common\doprnt.c: 1361:   if (*cp =
      +                          = 'd' || *cp == 'i') {
  2098   000D9A  C011  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2099   000D9E                     	if	1	;There is more than 1 active tblptr byte
  2100   000D9E  0E08               	movlw	high __smallconst
  2101   000DA0  6EF7               	movwf	tblptrh,c
  2102   000DA2                     	endif
  2103   000DA2                     	if	0	;tblptru may be non-zero
  2104   000DA2                     	endif
  2105   000DA2                     	if	0	;tblptru may be non-zero
  2106   000DA2                     	endif
  2107   000DA2  0008               	tblrd		*
  2108   000DA4  50F5               	movf	tablat,w,c
  2109   000DA6  0A64               	xorlw	100
  2110   000DA8  B4D8               	btfsc	status,2,c
  2111   000DAA  EFD9  F006         	goto	u1091
  2112   000DAE  EFDB  F006         	goto	u1090
  2113   000DB2                     u1091:
  2114   000DB2  EFE9  F006         	goto	l1891
  2115   000DB6                     u1090:
  2116   000DB6  C011  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2117   000DBA                     	if	1	;There is more than 1 active tblptr byte
  2118   000DBA  0E08               	movlw	high __smallconst
  2119   000DBC  6EF7               	movwf	tblptrh,c
  2120   000DBE                     	endif
  2121   000DBE                     	if	0	;tblptru may be non-zero
  2122   000DBE                     	endif
  2123   000DBE                     	if	0	;tblptru may be non-zero
  2124   000DBE                     	endif
  2125   000DBE  0008               	tblrd		*
  2126   000DC0  50F5               	movf	tablat,w,c
  2127   000DC2  0A69               	xorlw	105
  2128   000DC4  A4D8               	btfss	status,2,c
  2129   000DC6  EFE7  F006         	goto	u1101
  2130   000DCA  EFE9  F006         	goto	u1100
  2131   000DCE                     u1101:
  2132   000DCE  EF6D  F007         	goto	l1917
  2133   000DD2                     u1100:
  2134   000DD2                     l1891:
  2135                           
  2136                           ;C:\Program Files\Microchip\xc8\v3.10\pic\sources\c99\common\doprnt.c: 1404:    convarg.
      +                          sint = (vfpf_sint_t)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
  2137   000DD2  500E               	movf	vfpfcnvrt@ap^0,w,c
  2138   000DD4  6ED9               	movwf	fsr2l,c
  2139   000DD6  6ADA               	clrf	fsr2h,c
  2140   000DD8  0E02               	movlw	2
  2141   000DDA  26DF               	addwf	indf2,f,c
  2142   000DDC  5CDF               	subwf	indf2,w,c
  2143   000DDE  6ED9               	movwf	fsr2l,c
  2144   000DE0  6ADA               	clrf	fsr2h,c
  2145   000DE2  CFDE F012          	movff	postinc2,vfpfcnvrt@convarg
  2146   000DE6  CFDE F013          	movff	postinc2,vfpfcnvrt@convarg+1
  2147   000DEA                     
  2148                           ;C:\Program Files\Microchip\xc8\v3.10\pic\sources\c99\common\doprnt.c: 1406:    *fmt = c
      +                          p+1;
  2149   000DEA  500D               	movf	vfpfcnvrt@fmt^0,w,c
  2150   000DEC  6ED9               	movwf	fsr2l,c
  2151   000DEE  6ADA               	clrf	fsr2h,c
  2152   000DF0  2811               	incf	vfpfcnvrt@cp^0,w,c
  2153   000DF2  6EDF               	movwf	indf2,c
  2154   000DF4                     
  2155                           ;C:\Program Files\Microchip\xc8\v3.10\pic\sources\c99\common\doprnt.c: 1408:    c = size
      +                          of(dbuf);
  2156   000DF4  0E20               	movlw	32
  2157   000DF6  6E16               	movwf	vfpfcnvrt@c^0,c
  2158                           
  2159                           ;C:\Program Files\Microchip\xc8\v3.10\pic\sources\c99\common\doprnt.c: 1409:    done = c
      +                          onvarg.sint < 0;
  2160   000DF8  BE13               	btfsc	(vfpfcnvrt@convarg+1)^0,7,c
  2161   000DFA  EF01  F007         	goto	u1111
  2162   000DFE  EF04  F007         	goto	u1110
  2163   000E02                     u1111:
  2164   000E02  0E01               	movlw	1
  2165   000E04  EF05  F007         	goto	u1120
  2166   000E08                     u1110:
  2167   000E08  0E00               	movlw	0
  2168   000E0A                     u1120:
  2169   000E0A  6E10               	movwf	vfpfcnvrt@done^0,c
  2170   000E0C                     l1897:
  2171                           
  2172                           ;C:\Program Files\Microchip\xc8\v3.10\pic\sources\c99\common\doprnt.c: 1411:     dbuf[--
      +                          c] = abs(convarg.sint % 10) + '0';
  2173   000E0C  0616               	decf	vfpfcnvrt@c^0,f,c
  2174   000E0E  5016               	movf	vfpfcnvrt@c^0,w,c
  2175   000E10  0F60               	addlw	low _dbuf
  2176   000E12  6ED9               	movwf	fsr2l,c
  2177   000E14  6ADA               	clrf	fsr2h,c
  2178   000E16  C012  F002         	movff	vfpfcnvrt@convarg,___awmod@dividend
  2179   000E1A  C013  F003         	movff	vfpfcnvrt@convarg+1,___awmod@dividend+1
  2180   000E1E  6A05               	clrf	(___awmod@divisor+1)^0,c
  2181   000E20  0E0A               	movlw	10
  2182   000E22  6E04               	movwf	___awmod@divisor^0,c
  2183   000E24  EC68  F008         	call	___awmod	;wreg free
  2184   000E28  C002  F008         	movff	?___awmod,abs@a
  2185   000E2C  C003  F009         	movff	?___awmod+1,abs@a+1
  2186   000E30  EC45  F00A         	call	_abs	;wreg free
  2187   000E34  5008               	movf	?_abs^0,w,c
  2188   000E36  0F30               	addlw	48
  2189   000E38  6EDF               	movwf	indf2,c
  2190   000E3A                     
  2191                           ;C:\Program Files\Microchip\xc8\v3.10\pic\sources\c99\common\doprnt.c: 1412:     convarg
      +                          .sint /= 10;
  2192   000E3A  C012  F002         	movff	vfpfcnvrt@convarg,___awdiv@dividend
  2193   000E3E  C013  F003         	movff	vfpfcnvrt@convarg+1,___awdiv@dividend+1
  2194   000E42  6A05               	clrf	(___awdiv@divisor+1)^0,c
  2195   000E44  0E0A               	movlw	10
  2196   000E46  6E04               	movwf	___awdiv@divisor^0,c
  2197   000E48  EC08  F008         	call	___awdiv	;wreg free
  2198   000E4C  C002  F012         	movff	?___awdiv,vfpfcnvrt@convarg
  2199   000E50  C003  F013         	movff	?___awdiv+1,vfpfcnvrt@convarg+1
  2200   000E54                     
  2201                           ;C:\Program Files\Microchip\xc8\v3.10\pic\sources\c99\common\doprnt.c: 1416:    } while 
      +                          (convarg.sint != 0 && c != 0);
  2202   000E54  5012               	movf	vfpfcnvrt@convarg^0,w,c
  2203   000E56  1013               	iorwf	(vfpfcnvrt@convarg+1)^0,w,c
  2204   000E58  B4D8               	btfsc	status,2,c
  2205   000E5A  EF31  F007         	goto	u1131
  2206   000E5E  EF33  F007         	goto	u1130
  2207   000E62                     u1131:
  2208   000E62  EF3B  F007         	goto	l1905
  2209   000E66                     u1130:
  2210   000E66  5016               	movf	vfpfcnvrt@c^0,w,c
  2211   000E68  A4D8               	btfss	status,2,c
  2212   000E6A  EF39  F007         	goto	u1141
  2213   000E6E  EF3B  F007         	goto	u1140
  2214   000E72                     u1141:
  2215   000E72  EF06  F007         	goto	l1897
  2216   000E76                     u1140:
  2217   000E76                     l1905:
  2218                           
  2219                           ;C:\Program Files\Microchip\xc8\v3.10\pic\sources\c99\common\doprnt.c: 1417:    if (c !=
      +                           0 && done) {
  2220   000E76  5016               	movf	vfpfcnvrt@c^0,w,c
  2221   000E78  B4D8               	btfsc	status,2,c
  2222   000E7A  EF41  F007         	goto	u1151
  2223   000E7E  EF43  F007         	goto	u1150
  2224   000E82                     u1151:
  2225   000E82  EF62  F007         	goto	l1915
  2226   000E86                     u1150:
  2227   000E86  5010               	movf	vfpfcnvrt@done^0,w,c
  2228   000E88  B4D8               	btfsc	status,2,c
  2229   000E8A  EF49  F007         	goto	u1161
  2230   000E8E  EF4B  F007         	goto	u1160
  2231   000E92                     u1161:
  2232   000E92  EF62  F007         	goto	l1915
  2233   000E96                     u1160:
  2234   000E96                     
  2235                           ;C:\Program Files\Microchip\xc8\v3.10\pic\sources\c99\common\doprnt.c: 1418:     dbuf[--
      +                          c] = '-';
  2236   000E96  0616               	decf	vfpfcnvrt@c^0,f,c
  2237   000E98  5016               	movf	vfpfcnvrt@c^0,w,c
  2238   000E9A  0F60               	addlw	low _dbuf
  2239   000E9C  6ED9               	movwf	fsr2l,c
  2240   000E9E  6ADA               	clrf	fsr2h,c
  2241   000EA0  0E2D               	movlw	45
  2242   000EA2  6EDF               	movwf	indf2,c
  2243   000EA4  EF62  F007         	goto	l1915
  2244   000EA8                     l1911:
  2245                           
  2246                           ;C:\Program Files\Microchip\xc8\v3.10\pic\sources\c99\common\doprnt.c: 1424:     fputc(d
      +                          buf[c++], fp);
  2247   000EA8  5016               	movf	vfpfcnvrt@c^0,w,c
  2248   000EAA  0F60               	addlw	low _dbuf
  2249   000EAC  6ED9               	movwf	fsr2l,c
  2250   000EAE  6ADA               	clrf	fsr2h,c
  2251   000EB0  50DF               	movf	indf2,w,c
  2252   000EB2  6E0F               	movwf	??_vfpfcnvrt^0,c
  2253   000EB4  500F               	movf	??_vfpfcnvrt^0,w,c
  2254   000EB6  6E02               	movwf	fputc@c^0,c
  2255   000EB8  6A03               	clrf	(fputc@c+1)^0,c
  2256   000EBA  C00C  F004         	movff	vfpfcnvrt@fp,fputc@fp
  2257   000EBE  ECBF  F008         	call	_fputc	;wreg free
  2258   000EC2  2A16               	incf	vfpfcnvrt@c^0,f,c
  2259   000EC4                     l1915:
  2260                           
  2261                           ;C:\Program Files\Microchip\xc8\v3.10\pic\sources\c99\common\doprnt.c: 1423:    while (c
      +                           != sizeof(dbuf)) {
  2262   000EC4  0E20               	movlw	32
  2263   000EC6  1816               	xorwf	vfpfcnvrt@c^0,w,c
  2264   000EC8  A4D8               	btfss	status,2,c
  2265   000ECA  EF69  F007         	goto	u1171
  2266   000ECE  EF6B  F007         	goto	u1170
  2267   000ED2                     u1171:
  2268   000ED2  EF54  F007         	goto	l1911
  2269   000ED6                     u1170:
  2270   000ED6  EF84  F007         	goto	l1103
  2271   000EDA                     l1917:
  2272                           
  2273                           ;C:\Program Files\Microchip\xc8\v3.10\pic\sources\c99\common\doprnt.c: 1806:         ++*
      +                          fmt;
  2274   000EDA  500D               	movf	vfpfcnvrt@fmt^0,w,c
  2275   000EDC  6ED9               	movwf	fsr2l,c
  2276   000EDE  6ADA               	clrf	fsr2h,c
  2277   000EE0  2ADF               	incf	indf2,f,c
  2278   000EE2  EF84  F007         	goto	l1103
  2279   000EE6                     l1921:
  2280                           
  2281                           ;C:\Program Files\Microchip\xc8\v3.10\pic\sources\c99\common\doprnt.c: 1811:     fputc((
      +                          int)(*fmt)[0], fp);
  2282   000EE6  500D               	movf	vfpfcnvrt@fmt^0,w,c
  2283   000EE8  6ED9               	movwf	fsr2l,c
  2284   000EEA  6ADA               	clrf	fsr2h,c
  2285   000EEC  CFDF FFF6          	movff	indf2,tblptrl
  2286   000EF0                     	if	1	;There is more than 1 active tblptr byte
  2287   000EF0  0E08               	movlw	high __smallconst
  2288   000EF2  6EF7               	movwf	tblptrh,c
  2289   000EF4                     	endif
  2290   000EF4                     	if	0	;tblptru may be non-zero
  2291   000EF4                     	endif
  2292   000EF4                     	if	0	;tblptru may be non-zero
  2293   000EF4                     	endif
  2294   000EF4  0008               	tblrd		*
  2295   000EF6  50F5               	movf	tablat,w,c
  2296   000EF8  6E02               	movwf	fputc@c^0,c
  2297   000EFA  6A03               	clrf	(fputc@c+1)^0,c
  2298   000EFC  C00C  F004         	movff	vfpfcnvrt@fp,fputc@fp
  2299   000F00  ECBF  F008         	call	_fputc	;wreg free
  2300   000F04  EF6D  F007         	goto	l1917
  2301   000F08                     l1103:
  2302   000F08  0012               	return		;funcret
  2303   000F0A                     __end_of_vfpfcnvrt:
  2304                           	callstack 0
  2305                           
  2306 ;; *************** function _fputc *****************
  2307 ;; Defined at:
  2308 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v3.10\pic\sources\c99\common\nf_fputc.c"
  2309 ;; Parameters:    Size  Location     Type
  2310 ;;  c               2    0[COMRAM] int 
  2311 ;;  fp              1    2[COMRAM] PTR struct _IO_FILE
  2312 ;;		 -> sprintf@f(11), 
  2313 ;; Auto vars:     Size  Location     Type
  2314 ;;		None
  2315 ;; Return value:  Size  Location     Type
  2316 ;;                  2    0[COMRAM] int 
  2317 ;; Registers used:
  2318 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2319 ;; Tracked objects:
  2320 ;;		On entry : 0/0
  2321 ;;		On exit  : 0/0
  2322 ;;		Unchanged: 0/0
  2323 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2324 ;;      Params:         3       0       0       0       0       0       0       0       0
  2325 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2326 ;;      Temps:          5       0       0       0       0       0       0       0       0
  2327 ;;      Totals:         8       0       0       0       0       0       0       0       0
  2328 ;;Total ram usage:        8 bytes
  2329 ;; Hardware stack levels used: 1
  2330 ;; Hardware stack levels required when called: 2
  2331 ;; This function calls:
  2332 ;;		_putch
  2333 ;; This function is called by:
  2334 ;;		_vfpfcnvrt
  2335 ;; This function uses a non-reentrant model
  2336 ;;
  2337                           
  2338                           	psect	text6
  2339   00117E                     __ptext6:
  2340                           	callstack 0
  2341   00117E                     _fputc:
  2342                           	callstack 23
  2343   00117E  5004               	movf	fputc@fp^0,w,c
  2344   001180  B4D8               	btfsc	status,2,c
  2345   001182  EFC5  F008         	goto	u1031
  2346   001186  EFC7  F008         	goto	u1030
  2347   00118A                     u1031:
  2348   00118A  EFCF  F008         	goto	l1863
  2349   00118E                     u1030:
  2350   00118E  5004               	movf	fputc@fp^0,w,c
  2351   001190  A4D8               	btfss	status,2,c
  2352   001192  EFCD  F008         	goto	u1041
  2353   001196  EFCF  F008         	goto	u1040
  2354   00119A                     u1041:
  2355   00119A  EFD4  F008         	goto	l1865
  2356   00119E                     u1040:
  2357   00119E                     l1863:
  2358   00119E  5002               	movf	fputc@c^0,w,c
  2359   0011A0  ECBE  F00A         	call	_putch
  2360   0011A4  EF13  F009         	goto	l1128
  2361   0011A8                     l1865:
  2362   0011A8  5004               	movf	fputc@fp^0,w,c
  2363   0011AA  6ED9               	movwf	fsr2l,c
  2364   0011AC  6ADA               	clrf	fsr2h,c
  2365   0011AE  0E09               	movlw	9
  2366   0011B0  26D9               	addwf	fsr2l,f,c
  2367   0011B2  50DE               	movf	postinc2,w,c
  2368   0011B4  10DE               	iorwf	postinc2,w,c
  2369   0011B6  B4D8               	btfsc	status,2,c
  2370   0011B8  EFE0  F008         	goto	u1051
  2371   0011BC  EFE2  F008         	goto	u1050
  2372   0011C0                     u1051:
  2373   0011C0  EFFB  F008         	goto	l1869
  2374   0011C4                     u1050:
  2375   0011C4  5004               	movf	fputc@fp^0,w,c
  2376   0011C6  6ED9               	movwf	fsr2l,c
  2377   0011C8  6ADA               	clrf	fsr2h,c
  2378   0011CA  0E09               	movlw	9
  2379   0011CC  26D9               	addwf	fsr2l,f,c
  2380   0011CE  5004               	movf	fputc@fp^0,w,c
  2381   0011D0  6EE1               	movwf	fsr1l,c
  2382   0011D2  6AE2               	clrf	fsr1h,c
  2383   0011D4  0E02               	movlw	2
  2384   0011D6  26E1               	addwf	fsr1l,f,c
  2385   0011D8  50DE               	movf	postinc2,w,c
  2386   0011DA  5CE6               	subwf	postinc1,w,c
  2387   0011DC  50E6               	movf	postinc1,w,c
  2388   0011DE  0A80               	xorlw	128
  2389   0011E0  6E09               	movwf	(??_fputc+4)^0,c
  2390   0011E2  50DE               	movf	postinc2,w,c
  2391   0011E4  0A80               	xorlw	128
  2392   0011E6  5809               	subwfb	(??_fputc+4)^0,w,c
  2393   0011E8  B0D8               	btfsc	status,0,c
  2394   0011EA  EFF9  F008         	goto	u1061
  2395   0011EE  EFFB  F008         	goto	u1060
  2396   0011F2                     u1061:
  2397   0011F2  EF13  F009         	goto	l1128
  2398   0011F6                     u1060:
  2399   0011F6                     l1869:
  2400   0011F6  5004               	movf	fputc@fp^0,w,c
  2401   0011F8  6ED9               	movwf	fsr2l,c
  2402   0011FA  6ADA               	clrf	fsr2h,c
  2403   0011FC  0E02               	movlw	2
  2404   0011FE  26D9               	addwf	fsr2l,f,c
  2405   001200  50DF               	movf	indf2,w,c
  2406   001202  6E05               	movwf	??_fputc^0,c
  2407   001204  5004               	movf	fputc@fp^0,w,c
  2408   001206  6ED9               	movwf	fsr2l,c
  2409   001208  6ADA               	clrf	fsr2h,c
  2410   00120A  50DF               	movf	indf2,w,c
  2411   00120C  2405               	addwf	??_fputc^0,w,c
  2412   00120E  6ED9               	movwf	fsr2l,c
  2413   001210  6ADA               	clrf	fsr2h,c
  2414   001212  C002  FFDF         	movff	fputc@c,indf2
  2415   001216  5004               	movf	fputc@fp^0,w,c
  2416   001218  6ED9               	movwf	fsr2l,c
  2417   00121A  6ADA               	clrf	fsr2h,c
  2418   00121C  0E02               	movlw	2
  2419   00121E  26D9               	addwf	fsr2l,f,c
  2420   001220  2ADE               	incf	postinc2,f,c
  2421   001222  0E00               	movlw	0
  2422   001224  22DD               	addwfc	postdec2,f,c
  2423   001226                     l1128:
  2424   001226  0012               	return		;funcret
  2425   001228                     __end_of_fputc:
  2426                           	callstack 0
  2427                           
  2428 ;; *************** function _putch *****************
  2429 ;; Defined at:
  2430 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v3.10\pic\sources\c99\common\putch.c"
  2431 ;; Parameters:    Size  Location     Type
  2432 ;;  c               1    wreg     unsigned char 
  2433 ;; Auto vars:     Size  Location     Type
  2434 ;;  c               1    0[COMRAM] unsigned char 
  2435 ;; Return value:  Size  Location     Type
  2436 ;;                  1    wreg      void 
  2437 ;; Registers used:
  2438 ;;		wreg
  2439 ;; Tracked objects:
  2440 ;;		On entry : 0/0
  2441 ;;		On exit  : 0/0
  2442 ;;		Unchanged: 0/0
  2443 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2444 ;;      Params:         0       0       0       0       0       0       0       0       0
  2445 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2446 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2447 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2448 ;;Total ram usage:        0 bytes
  2449 ;; Hardware stack levels used: 1
  2450 ;; Hardware stack levels required when called: 1
  2451 ;; This function calls:
  2452 ;;		Nothing
  2453 ;; This function is called by:
  2454 ;;		_fputc
  2455 ;; This function uses a non-reentrant model
  2456 ;;
  2457                           
  2458                           	psect	text7
  2459   00157C                     __ptext7:
  2460                           	callstack 0
  2461   00157C                     _putch:
  2462                           	callstack 23
  2463   00157C  0012               	return		;funcret
  2464   00157E                     __end_of_putch:
  2465                           	callstack 0
  2466                           
  2467 ;; *************** function _abs *****************
  2468 ;; Defined at:
  2469 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v3.10\pic\sources\c99\common\abs.c"
  2470 ;; Parameters:    Size  Location     Type
  2471 ;;  a               2    6[COMRAM] int 
  2472 ;; Auto vars:     Size  Location     Type
  2473 ;;		None
  2474 ;; Return value:  Size  Location     Type
  2475 ;;                  2    6[COMRAM] int 
  2476 ;; Registers used:
  2477 ;;		wreg, status,2, status,0
  2478 ;; Tracked objects:
  2479 ;;		On entry : 0/0
  2480 ;;		On exit  : 0/0
  2481 ;;		Unchanged: 0/0
  2482 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2483 ;;      Params:         2       0       0       0       0       0       0       0       0
  2484 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2485 ;;      Temps:          2       0       0       0       0       0       0       0       0
  2486 ;;      Totals:         4       0       0       0       0       0       0       0       0
  2487 ;;Total ram usage:        4 bytes
  2488 ;; Hardware stack levels used: 1
  2489 ;; Hardware stack levels required when called: 1
  2490 ;; This function calls:
  2491 ;;		Nothing
  2492 ;; This function is called by:
  2493 ;;		_vfpfcnvrt
  2494 ;; This function uses a non-reentrant model
  2495 ;;
  2496                           
  2497                           	psect	text8
  2498   00148A                     __ptext8:
  2499                           	callstack 0
  2500   00148A                     _abs:
  2501                           	callstack 24
  2502   00148A  BE09               	btfsc	(abs@a+1)^0,7,c
  2503   00148C  EF4A  F00A         	goto	u1071
  2504   001490  EF4C  F00A         	goto	u1070
  2505   001494                     u1071:
  2506   001494  EF52  F00A         	goto	l1113
  2507   001498                     u1070:
  2508   001498  C008  F008         	movff	abs@a,?_abs
  2509   00149C  C009  F009         	movff	abs@a+1,?_abs+1
  2510   0014A0  EF5E  F00A         	goto	l1116
  2511   0014A4                     l1113:
  2512   0014A4  C008  F00A         	movff	abs@a,??_abs
  2513   0014A8  C009  F00B         	movff	abs@a+1,??_abs+1
  2514   0014AC  1E0A               	comf	??_abs^0,f,c
  2515   0014AE  1E0B               	comf	(??_abs+1)^0,f,c
  2516   0014B0  4A0A               	infsnz	??_abs^0,f,c
  2517   0014B2  2A0B               	incf	(??_abs+1)^0,f,c
  2518   0014B4  C00A  F008         	movff	??_abs,?_abs
  2519   0014B8  C00B  F009         	movff	??_abs+1,?_abs+1
  2520   0014BC                     l1116:
  2521   0014BC  0012               	return		;funcret
  2522   0014BE                     __end_of_abs:
  2523                           	callstack 0
  2524                           
  2525 ;; *************** function ___awmod *****************
  2526 ;; Defined at:
  2527 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v3.10\pic\sources\c99\common\awmod.c"
  2528 ;; Parameters:    Size  Location     Type
  2529 ;;  dividend        2    0[COMRAM] int 
  2530 ;;  divisor         2    2[COMRAM] int 
  2531 ;; Auto vars:     Size  Location     Type
  2532 ;;  sign            1    5[COMRAM] unsigned char 
  2533 ;;  counter         1    4[COMRAM] unsigned char 
  2534 ;; Return value:  Size  Location     Type
  2535 ;;                  2    0[COMRAM] int 
  2536 ;; Registers used:
  2537 ;;		wreg, status,2, status,0
  2538 ;; Tracked objects:
  2539 ;;		On entry : 0/0
  2540 ;;		On exit  : 0/0
  2541 ;;		Unchanged: 0/0
  2542 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2543 ;;      Params:         4       0       0       0       0       0       0       0       0
  2544 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2545 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2546 ;;      Totals:         6       0       0       0       0       0       0       0       0
  2547 ;;Total ram usage:        6 bytes
  2548 ;; Hardware stack levels used: 1
  2549 ;; Hardware stack levels required when called: 1
  2550 ;; This function calls:
  2551 ;;		Nothing
  2552 ;; This function is called by:
  2553 ;;		_vfpfcnvrt
  2554 ;; This function uses a non-reentrant model
  2555 ;;
  2556                           
  2557                           	psect	text9
  2558   0010D0                     __ptext9:
  2559                           	callstack 0
  2560   0010D0                     ___awmod:
  2561                           	callstack 24
  2562   0010D0  6A07               	clrf	___awmod@sign^0,c
  2563   0010D2  BE03               	btfsc	(___awmod@dividend+1)^0,7,c
  2564   0010D4  EF70  F008         	goto	u970
  2565   0010D8  EF6E  F008         	goto	u971
  2566   0010DC                     u971:
  2567   0010DC  EF76  F008         	goto	l1831
  2568   0010E0                     u970:
  2569   0010E0  6C02               	negf	___awmod@dividend^0,c
  2570   0010E2  1E03               	comf	(___awmod@dividend+1)^0,f,c
  2571   0010E4  B0D8               	btfsc	status,0,c
  2572   0010E6  2A03               	incf	(___awmod@dividend+1)^0,f,c
  2573   0010E8  0E01               	movlw	1
  2574   0010EA  6E07               	movwf	___awmod@sign^0,c
  2575   0010EC                     l1831:
  2576   0010EC  BE05               	btfsc	(___awmod@divisor+1)^0,7,c
  2577   0010EE  EF7D  F008         	goto	u980
  2578   0010F2  EF7B  F008         	goto	u981
  2579   0010F6                     u981:
  2580   0010F6  EF81  F008         	goto	l1835
  2581   0010FA                     u980:
  2582   0010FA  6C04               	negf	___awmod@divisor^0,c
  2583   0010FC  1E05               	comf	(___awmod@divisor+1)^0,f,c
  2584   0010FE  B0D8               	btfsc	status,0,c
  2585   001100  2A05               	incf	(___awmod@divisor+1)^0,f,c
  2586   001102                     l1835:
  2587   001102  5004               	movf	___awmod@divisor^0,w,c
  2588   001104  1005               	iorwf	(___awmod@divisor+1)^0,w,c
  2589   001106  B4D8               	btfsc	status,2,c
  2590   001108  EF88  F008         	goto	u991
  2591   00110C  EF8A  F008         	goto	u990
  2592   001110                     u991:
  2593   001110  EFAE  F008         	goto	l1851
  2594   001114                     u990:
  2595   001114  0E01               	movlw	1
  2596   001116  6E06               	movwf	___awmod@counter^0,c
  2597   001118  EF92  F008         	goto	l1841
  2598   00111C                     l1839:
  2599   00111C  90D8               	bcf	status,0,c
  2600   00111E  3604               	rlcf	___awmod@divisor^0,f,c
  2601   001120  3605               	rlcf	(___awmod@divisor+1)^0,f,c
  2602   001122  2A06               	incf	___awmod@counter^0,f,c
  2603   001124                     l1841:
  2604   001124  AE05               	btfss	(___awmod@divisor+1)^0,7,c
  2605   001126  EF97  F008         	goto	u1001
  2606   00112A  EF99  F008         	goto	u1000
  2607   00112E                     u1001:
  2608   00112E  EF8E  F008         	goto	l1839
  2609   001132                     u1000:
  2610   001132                     l1843:
  2611   001132  5004               	movf	___awmod@divisor^0,w,c
  2612   001134  5C02               	subwf	___awmod@dividend^0,w,c
  2613   001136  5005               	movf	(___awmod@divisor+1)^0,w,c
  2614   001138  5803               	subwfb	(___awmod@dividend+1)^0,w,c
  2615   00113A  A0D8               	btfss	status,0,c
  2616   00113C  EFA2  F008         	goto	u1011
  2617   001140  EFA4  F008         	goto	u1010
  2618   001144                     u1011:
  2619   001144  EFA8  F008         	goto	l1847
  2620   001148                     u1010:
  2621   001148  5004               	movf	___awmod@divisor^0,w,c
  2622   00114A  5E02               	subwf	___awmod@dividend^0,f,c
  2623   00114C  5005               	movf	(___awmod@divisor+1)^0,w,c
  2624   00114E  5A03               	subwfb	(___awmod@dividend+1)^0,f,c
  2625   001150                     l1847:
  2626   001150  90D8               	bcf	status,0,c
  2627   001152  3205               	rrcf	(___awmod@divisor+1)^0,f,c
  2628   001154  3204               	rrcf	___awmod@divisor^0,f,c
  2629   001156  2E06               	decfsz	___awmod@counter^0,f,c
  2630   001158  EF99  F008         	goto	l1843
  2631   00115C                     l1851:
  2632   00115C  5007               	movf	___awmod@sign^0,w,c
  2633   00115E  B4D8               	btfsc	status,2,c
  2634   001160  EFB4  F008         	goto	u1021
  2635   001164  EFB6  F008         	goto	u1020
  2636   001168                     u1021:
  2637   001168  EFBA  F008         	goto	l1855
  2638   00116C                     u1020:
  2639   00116C  6C02               	negf	___awmod@dividend^0,c
  2640   00116E  1E03               	comf	(___awmod@dividend+1)^0,f,c
  2641   001170  B0D8               	btfsc	status,0,c
  2642   001172  2A03               	incf	(___awmod@dividend+1)^0,f,c
  2643   001174                     l1855:
  2644   001174  C002  F002         	movff	___awmod@dividend,?___awmod
  2645   001178  C003  F003         	movff	___awmod@dividend+1,?___awmod+1
  2646   00117C  0012               	return		;funcret
  2647   00117E                     __end_of___awmod:
  2648                           	callstack 0
  2649                           
  2650 ;; *************** function ___awdiv *****************
  2651 ;; Defined at:
  2652 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v3.10\pic\sources\c99\common\awdiv.c"
  2653 ;; Parameters:    Size  Location     Type
  2654 ;;  dividend        2    0[COMRAM] int 
  2655 ;;  divisor         2    2[COMRAM] int 
  2656 ;; Auto vars:     Size  Location     Type
  2657 ;;  quotient        2    6[COMRAM] int 
  2658 ;;  sign            1    5[COMRAM] unsigned char 
  2659 ;;  counter         1    4[COMRAM] unsigned char 
  2660 ;; Return value:  Size  Location     Type
  2661 ;;                  2    0[COMRAM] int 
  2662 ;; Registers used:
  2663 ;;		wreg, status,2, status,0
  2664 ;; Tracked objects:
  2665 ;;		On entry : 0/0
  2666 ;;		On exit  : 0/0
  2667 ;;		Unchanged: 0/0
  2668 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2669 ;;      Params:         4       0       0       0       0       0       0       0       0
  2670 ;;      Locals:         4       0       0       0       0       0       0       0       0
  2671 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2672 ;;      Totals:         8       0       0       0       0       0       0       0       0
  2673 ;;Total ram usage:        8 bytes
  2674 ;; Hardware stack levels used: 1
  2675 ;; Hardware stack levels required when called: 1
  2676 ;; This function calls:
  2677 ;;		Nothing
  2678 ;; This function is called by:
  2679 ;;		_vfpfcnvrt
  2680 ;; This function uses a non-reentrant model
  2681 ;;
  2682                           
  2683                           	psect	text10
  2684   001010                     __ptext10:
  2685                           	callstack 0
  2686   001010                     ___awdiv:
  2687                           	callstack 24
  2688   001010  6A07               	clrf	___awdiv@sign^0,c
  2689   001012  BE05               	btfsc	(___awdiv@divisor+1)^0,7,c
  2690   001014  EF10  F008         	goto	u910
  2691   001018  EF0E  F008         	goto	u911
  2692   00101C                     u911:
  2693   00101C  EF16  F008         	goto	l1787
  2694   001020                     u910:
  2695   001020  6C04               	negf	___awdiv@divisor^0,c
  2696   001022  1E05               	comf	(___awdiv@divisor+1)^0,f,c
  2697   001024  B0D8               	btfsc	status,0,c
  2698   001026  2A05               	incf	(___awdiv@divisor+1)^0,f,c
  2699   001028  0E01               	movlw	1
  2700   00102A  6E07               	movwf	___awdiv@sign^0,c
  2701   00102C                     l1787:
  2702   00102C  BE03               	btfsc	(___awdiv@dividend+1)^0,7,c
  2703   00102E  EF1D  F008         	goto	u920
  2704   001032  EF1B  F008         	goto	u921
  2705   001036                     u921:
  2706   001036  EF23  F008         	goto	l1793
  2707   00103A                     u920:
  2708   00103A  6C02               	negf	___awdiv@dividend^0,c
  2709   00103C  1E03               	comf	(___awdiv@dividend+1)^0,f,c
  2710   00103E  B0D8               	btfsc	status,0,c
  2711   001040  2A03               	incf	(___awdiv@dividend+1)^0,f,c
  2712   001042  0E01               	movlw	1
  2713   001044  1A07               	xorwf	___awdiv@sign^0,f,c
  2714   001046                     l1793:
  2715   001046  6A09               	clrf	(___awdiv@quotient+1)^0,c
  2716   001048  0E00               	movlw	0
  2717   00104A  6E08               	movwf	___awdiv@quotient^0,c
  2718   00104C  5004               	movf	___awdiv@divisor^0,w,c
  2719   00104E  1005               	iorwf	(___awdiv@divisor+1)^0,w,c
  2720   001050  B4D8               	btfsc	status,2,c
  2721   001052  EF2D  F008         	goto	u931
  2722   001056  EF2F  F008         	goto	u930
  2723   00105A                     u931:
  2724   00105A  EF57  F008         	goto	l1815
  2725   00105E                     u930:
  2726   00105E  0E01               	movlw	1
  2727   001060  6E06               	movwf	___awdiv@counter^0,c
  2728   001062  EF37  F008         	goto	l1801
  2729   001066                     l1799:
  2730   001066  90D8               	bcf	status,0,c
  2731   001068  3604               	rlcf	___awdiv@divisor^0,f,c
  2732   00106A  3605               	rlcf	(___awdiv@divisor+1)^0,f,c
  2733   00106C  2A06               	incf	___awdiv@counter^0,f,c
  2734   00106E                     l1801:
  2735   00106E  AE05               	btfss	(___awdiv@divisor+1)^0,7,c
  2736   001070  EF3C  F008         	goto	u941
  2737   001074  EF3E  F008         	goto	u940
  2738   001078                     u941:
  2739   001078  EF33  F008         	goto	l1799
  2740   00107C                     u940:
  2741   00107C                     l1803:
  2742   00107C  90D8               	bcf	status,0,c
  2743   00107E  3608               	rlcf	___awdiv@quotient^0,f,c
  2744   001080  3609               	rlcf	(___awdiv@quotient+1)^0,f,c
  2745   001082  5004               	movf	___awdiv@divisor^0,w,c
  2746   001084  5C02               	subwf	___awdiv@dividend^0,w,c
  2747   001086  5005               	movf	(___awdiv@divisor+1)^0,w,c
  2748   001088  5803               	subwfb	(___awdiv@dividend+1)^0,w,c
  2749   00108A  A0D8               	btfss	status,0,c
  2750   00108C  EF4A  F008         	goto	u951
  2751   001090  EF4C  F008         	goto	u950
  2752   001094                     u951:
  2753   001094  EF51  F008         	goto	l1811
  2754   001098                     u950:
  2755   001098  5004               	movf	___awdiv@divisor^0,w,c
  2756   00109A  5E02               	subwf	___awdiv@dividend^0,f,c
  2757   00109C  5005               	movf	(___awdiv@divisor+1)^0,w,c
  2758   00109E  5A03               	subwfb	(___awdiv@dividend+1)^0,f,c
  2759   0010A0  8008               	bsf	___awdiv@quotient^0,0,c
  2760   0010A2                     l1811:
  2761   0010A2  90D8               	bcf	status,0,c
  2762   0010A4  3205               	rrcf	(___awdiv@divisor+1)^0,f,c
  2763   0010A6  3204               	rrcf	___awdiv@divisor^0,f,c
  2764   0010A8  2E06               	decfsz	___awdiv@counter^0,f,c
  2765   0010AA  EF3E  F008         	goto	l1803
  2766   0010AE                     l1815:
  2767   0010AE  5007               	movf	___awdiv@sign^0,w,c
  2768   0010B0  B4D8               	btfsc	status,2,c
  2769   0010B2  EF5D  F008         	goto	u961
  2770   0010B6  EF5F  F008         	goto	u960
  2771   0010BA                     u961:
  2772   0010BA  EF63  F008         	goto	l1819
  2773   0010BE                     u960:
  2774   0010BE  6C08               	negf	___awdiv@quotient^0,c
  2775   0010C0  1E09               	comf	(___awdiv@quotient+1)^0,f,c
  2776   0010C2  B0D8               	btfsc	status,0,c
  2777   0010C4  2A09               	incf	(___awdiv@quotient+1)^0,f,c
  2778   0010C6                     l1819:
  2779   0010C6  C008  F002         	movff	___awdiv@quotient,?___awdiv
  2780   0010CA  C009  F003         	movff	___awdiv@quotient+1,?___awdiv+1
  2781   0010CE  0012               	return		;funcret
  2782   0010D0                     __end_of___awdiv:
  2783                           	callstack 0
  2784                           
  2785 ;; *************** function _Lcd_Write_String *****************
  2786 ;; Defined at:
  2787 ;;		line 108 in file "lcd.c"
  2788 ;; Parameters:    Size  Location     Type
  2789 ;;  a               2    4[COMRAM] PTR const unsigned char 
  2790 ;;		 -> STR_15(4), STR_14(4), STR_13(3), STR_12(5), 
  2791 ;;		 -> STR_11(7), STR_10(9), STR_9(6), STR_8(11), 
  2792 ;;		 -> STR_7(15), STR_6(16), STR_5(15), STR_4(6), 
  2793 ;;		 -> STR_3(14), STR_2(13), mostrar_variable@buffer(20), 
  2794 ;; Auto vars:     Size  Location     Type
  2795 ;;  i               2    8[COMRAM] int 
  2796 ;; Return value:  Size  Location     Type
  2797 ;;                  1    wreg      void 
  2798 ;; Registers used:
  2799 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2800 ;; Tracked objects:
  2801 ;;		On entry : 0/0
  2802 ;;		On exit  : 0/0
  2803 ;;		Unchanged: 0/0
  2804 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2805 ;;      Params:         2       0       0       0       0       0       0       0       0
  2806 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2807 ;;      Temps:          2       0       0       0       0       0       0       0       0
  2808 ;;      Totals:         6       0       0       0       0       0       0       0       0
  2809 ;;Total ram usage:        6 bytes
  2810 ;; Hardware stack levels used: 1
  2811 ;; Hardware stack levels required when called: 1
  2812 ;; This function calls:
  2813 ;;		_Lcd_Write_Char
  2814 ;; This function is called by:
  2815 ;;		_mostrar_variable
  2816 ;;		_mostrar_conteo
  2817 ;; This function uses a non-reentrant model
  2818 ;;
  2819                           
  2820                           	psect	text11
  2821   001228                     __ptext11:
  2822                           	callstack 0
  2823   001228                     _Lcd_Write_String:
  2824                           	callstack 27
  2825   001228                     
  2826                           ;lcd.c: 108: void Lcd_Write_String(const char *a);lcd.c: 109: {;lcd.c: 110:     int i;;l
      +                          cd.c: 111:     for(i=0;a[i]!='\0';i++)
  2827   001228  6A0B               	clrf	(Lcd_Write_String@i+1)^0,c
  2828   00122A  0E00               	movlw	0
  2829   00122C  6E0A               	movwf	Lcd_Write_String@i^0,c
  2830   00122E  EF33  F009         	goto	l1955
  2831   001232                     l1951:
  2832                           
  2833                           ;lcd.c: 112:         Lcd_Write_Char(a[i]);
  2834   001232  500A               	movf	Lcd_Write_String@i^0,w,c
  2835   001234  2406               	addwf	Lcd_Write_String@a^0,w,c
  2836   001236  6E08               	movwf	??_Lcd_Write_String^0,c
  2837   001238  500B               	movf	(Lcd_Write_String@i+1)^0,w,c
  2838   00123A  2007               	addwfc	(Lcd_Write_String@a+1)^0,w,c
  2839   00123C  6E09               	movwf	(??_Lcd_Write_String+1)^0,c
  2840   00123E  C008  FFF6         	movff	??_Lcd_Write_String,tblptrl
  2841   001242  C009  FFF7         	movff	??_Lcd_Write_String+1,tblptrh
  2842   001246  6AF8               	clrf	tblptru,c
  2843   001248  0E07               	movlw	(high __ramtop+-1)
  2844   00124A  64F7               	cpfsgt	tblptrh,c
  2845   00124C  D003               	bra	u1197
  2846   00124E  0008               	tblrd		*
  2847   001250  50F5               	movf	tablat,w,c
  2848   001252  D005               	bra	u1190
  2849   001254                     u1197:
  2850   001254  CFF6 FFE1          	movff	tblptrl,fsr1l
  2851   001258  CFF7 FFE2          	movff	tblptrh,fsr1h
  2852   00125C  50E7               	movf	indf1,w,c
  2853   00125E                     u1190:
  2854   00125E  EC0D  F00A         	call	_Lcd_Write_Char
  2855   001262  4A0A               	infsnz	Lcd_Write_String@i^0,f,c
  2856   001264  2A0B               	incf	(Lcd_Write_String@i+1)^0,f,c
  2857   001266                     l1955:
  2858   001266  500A               	movf	Lcd_Write_String@i^0,w,c
  2859   001268  2406               	addwf	Lcd_Write_String@a^0,w,c
  2860   00126A  6E08               	movwf	??_Lcd_Write_String^0,c
  2861   00126C  500B               	movf	(Lcd_Write_String@i+1)^0,w,c
  2862   00126E  2007               	addwfc	(Lcd_Write_String@a+1)^0,w,c
  2863   001270  6E09               	movwf	(??_Lcd_Write_String+1)^0,c
  2864   001272  C008  FFF6         	movff	??_Lcd_Write_String,tblptrl
  2865   001276  C009  FFF7         	movff	??_Lcd_Write_String+1,tblptrh
  2866   00127A  6AF8               	clrf	tblptru,c
  2867   00127C  0E07               	movlw	(high __ramtop+-1)
  2868   00127E  64F7               	cpfsgt	tblptrh,c
  2869   001280  D003               	bra	u1207
  2870   001282  0008               	tblrd		*
  2871   001284  50F5               	movf	tablat,w,c
  2872   001286  D005               	bra	u1200
  2873   001288                     u1207:
  2874   001288  CFF6 FFE1          	movff	tblptrl,fsr1l
  2875   00128C  CFF7 FFE2          	movff	tblptrh,fsr1h
  2876   001290  50E7               	movf	indf1,w,c
  2877   001292                     u1200:
  2878   001292  0900               	iorlw	0
  2879   001294  A4D8               	btfss	status,2,c
  2880   001296  EF4F  F009         	goto	u1211
  2881   00129A  EF51  F009         	goto	u1210
  2882   00129E                     u1211:
  2883   00129E  EF19  F009         	goto	l1951
  2884   0012A2                     u1210:
  2885   0012A2  0012               	return		;funcret
  2886   0012A4                     __end_of_Lcd_Write_String:
  2887                           	callstack 0
  2888                           
  2889 ;; *************** function _Lcd_Write_Char *****************
  2890 ;; Defined at:
  2891 ;;		line 92 in file "lcd.c"
  2892 ;; Parameters:    Size  Location     Type
  2893 ;;  a               1    wreg     unsigned char 
  2894 ;; Auto vars:     Size  Location     Type
  2895 ;;  a               1    3[COMRAM] unsigned char 
  2896 ;;  y               1    2[COMRAM] unsigned char 
  2897 ;;  temp            1    1[COMRAM] unsigned char 
  2898 ;; Return value:  Size  Location     Type
  2899 ;;                  1    wreg      void 
  2900 ;; Registers used:
  2901 ;;		wreg, status,2, status,0, cstack
  2902 ;; Tracked objects:
  2903 ;;		On entry : 0/0
  2904 ;;		On exit  : 0/0
  2905 ;;		Unchanged: 0/0
  2906 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2907 ;;      Params:         0       0       0       0       0       0       0       0       0
  2908 ;;      Locals:         3       0       0       0       0       0       0       0       0
  2909 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2910 ;;      Totals:         3       0       0       0       0       0       0       0       0
  2911 ;;Total ram usage:        3 bytes
  2912 ;; Hardware stack levels used: 1
  2913 ;; Hardware stack levels required when called: 2
  2914 ;; This function calls:
  2915 ;;		_Lcd_Port
  2916 ;; This function is called by:
  2917 ;;		_Lcd_Write_String
  2918 ;;		_Lcd_CGRAM_CreateChar
  2919 ;; This function uses a non-reentrant model
  2920 ;;
  2921                           
  2922                           	psect	text12
  2923   00141A                     __ptext12:
  2924                           	callstack 0
  2925   00141A                     _Lcd_Write_Char:
  2926                           	callstack 25
  2927                           
  2928                           ;incstack = 0
  2929                           ;Lcd_Write_Char@a stored from wreg
  2930   00141A  6E05               	movwf	Lcd_Write_Char@a^0,c
  2931   00141C                     
  2932                           ;lcd.c: 92: void Lcd_Write_Char(char a);lcd.c: 93: {;lcd.c: 94:     char temp,y;;lcd.c: 
      +                          95:     temp = a&0x0F;
  2933   00141C  5005               	movf	Lcd_Write_Char@a^0,w,c
  2934   00141E  0B0F               	andlw	15
  2935   001420  6E03               	movwf	Lcd_Write_Char@temp^0,c
  2936                           
  2937                           ;lcd.c: 96:     y = a&0xF0;
  2938   001422  5005               	movf	Lcd_Write_Char@a^0,w,c
  2939   001424  0BF0               	andlw	240
  2940   001426  6E04               	movwf	Lcd_Write_Char@y^0,c
  2941   001428                     
  2942                           ;lcd.c: 97:     LATEbits.LE0 = 1;
  2943   001428  808D               	bsf	141,0,c	;volatile
  2944   00142A                     
  2945                           ;lcd.c: 98:     Lcd_Port(y>>4);
  2946   00142A  3804               	swapf	Lcd_Write_Char@y^0,w,c
  2947   00142C  0B0F               	andlw	15
  2948   00142E  ECC1  F009         	call	_Lcd_Port
  2949   001432                     
  2950                           ;lcd.c: 99:     LATEbits.LE1 = 1;
  2951   001432  828D               	bsf	141,1,c	;volatile
  2952   001434                     
  2953                           ;lcd.c: 100:     _delay((unsigned long)((40)*(1000000/4000000.0)));
  2954   001434  0E03               	movlw	3
  2955   001436                     u1717:
  2956   001436  2EE8               	decfsz	wreg,f,c
  2957   001438  D7FE               	bra	u1717
  2958   00143A  0000               	nop	
  2959   00143C                     
  2960                           ;lcd.c: 101:     LATEbits.LE1 = 0;
  2961   00143C  928D               	bcf	141,1,c	;volatile
  2962   00143E                     
  2963                           ;lcd.c: 102:     Lcd_Port(temp);
  2964   00143E  5003               	movf	Lcd_Write_Char@temp^0,w,c
  2965   001440  ECC1  F009         	call	_Lcd_Port
  2966   001444                     
  2967                           ;lcd.c: 103:     LATEbits.LE1 = 1;
  2968   001444  828D               	bsf	141,1,c	;volatile
  2969   001446                     
  2970                           ;lcd.c: 104:     _delay((unsigned long)((40)*(1000000/4000000.0)));
  2971   001446  0E03               	movlw	3
  2972   001448                     u1727:
  2973   001448  2EE8               	decfsz	wreg,f,c
  2974   00144A  D7FE               	bra	u1727
  2975   00144C  0000               	nop	
  2976   00144E                     
  2977                           ;lcd.c: 105:     LATEbits.LE1 = 0;
  2978   00144E  928D               	bcf	141,1,c	;volatile
  2979   001450  0012               	return		;funcret
  2980   001452                     __end_of_Lcd_Write_Char:
  2981                           	callstack 0
  2982                           
  2983 ;; *************** function _Lcd_Set_Cursor *****************
  2984 ;; Defined at:
  2985 ;;		line 26 in file "lcd.c"
  2986 ;; Parameters:    Size  Location     Type
  2987 ;;  a               1    wreg     unsigned char 
  2988 ;;  b               1    2[COMRAM] unsigned char 
  2989 ;; Auto vars:     Size  Location     Type
  2990 ;;  a               1    4[COMRAM] unsigned char 
  2991 ;;  temp            1    7[COMRAM] unsigned char 
  2992 ;;  y               1    6[COMRAM] unsigned char 
  2993 ;;  z               1    5[COMRAM] unsigned char 
  2994 ;; Return value:  Size  Location     Type
  2995 ;;                  1    wreg      void 
  2996 ;; Registers used:
  2997 ;;		wreg, status,2, status,0, cstack
  2998 ;; Tracked objects:
  2999 ;;		On entry : 0/0
  3000 ;;		On exit  : 0/0
  3001 ;;		Unchanged: 0/0
  3002 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3003 ;;      Params:         1       0       0       0       0       0       0       0       0
  3004 ;;      Locals:         4       0       0       0       0       0       0       0       0
  3005 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3006 ;;      Totals:         6       0       0       0       0       0       0       0       0
  3007 ;;Total ram usage:        6 bytes
  3008 ;; Hardware stack levels used: 1
  3009 ;; Hardware stack levels required when called: 1
  3010 ;; This function calls:
  3011 ;;		_Lcd_Cmd
  3012 ;; This function is called by:
  3013 ;;		_mostrar_conteo
  3014 ;;		_main
  3015 ;; This function uses a non-reentrant model
  3016 ;;
  3017                           
  3018                           	psect	text13
  3019   000F0A                     __ptext13:
  3020                           	callstack 0
  3021   000F0A                     _Lcd_Set_Cursor:
  3022                           	callstack 28
  3023                           
  3024                           ;incstack = 0
  3025                           ;Lcd_Set_Cursor@a stored from wreg
  3026   000F0A  6E06               	movwf	Lcd_Set_Cursor@a^0,c
  3027   000F0C                     
  3028                           ;lcd.c: 26: void Lcd_Set_Cursor(char a, char b);lcd.c: 27: {;lcd.c: 28:     char temp,z,
      +                          y;;lcd.c: 29:     if(a == 1)
  3029   000F0C  0406               	decf	Lcd_Set_Cursor@a^0,w,c
  3030   000F0E  A4D8               	btfss	status,2,c
  3031   000F10  EF8C  F007         	goto	u1221
  3032   000F14  EF8E  F007         	goto	u1220
  3033   000F18                     u1221:
  3034   000F18  EFA6  F007         	goto	l1973
  3035   000F1C                     u1220:
  3036   000F1C                     
  3037                           ;lcd.c: 30:     {;lcd.c: 31:         temp = 0x80 + b - 1;
  3038   000F1C  5004               	movf	Lcd_Set_Cursor@b^0,w,c
  3039   000F1E  0F7F               	addlw	127
  3040   000F20  6E09               	movwf	Lcd_Set_Cursor@temp^0,c
  3041                           
  3042                           ;lcd.c: 32:         z = temp>>4;
  3043   000F22  3809               	swapf	Lcd_Set_Cursor@temp^0,w,c
  3044   000F24  0B0F               	andlw	15
  3045   000F26  6E07               	movwf	Lcd_Set_Cursor@z^0,c
  3046                           
  3047                           ;lcd.c: 33:         y = temp & 0x0F;
  3048   000F28  5009               	movf	Lcd_Set_Cursor@temp^0,w,c
  3049   000F2A  0B0F               	andlw	15
  3050   000F2C  6E08               	movwf	Lcd_Set_Cursor@y^0,c
  3051   000F2E                     
  3052                           ;lcd.c: 34:         Lcd_Cmd(z);
  3053   000F2E  5007               	movf	Lcd_Set_Cursor@z^0,w,c
  3054   000F30  ECAB  F00A         	call	_Lcd_Cmd
  3055   000F34                     
  3056                           ;lcd.c: 35:         _delay((unsigned long)((10)*(1000000/4000.0)));
  3057   000F34  0E04               	movlw	4
  3058   000F36  6E05               	movwf	??_Lcd_Set_Cursor^0,c
  3059   000F38  0E3E               	movlw	62
  3060   000F3A                     u1737:
  3061   000F3A  2EE8               	decfsz	wreg,f,c
  3062   000F3C  D7FE               	bra	u1737
  3063   000F3E  2E05               	decfsz	??_Lcd_Set_Cursor^0,f,c
  3064   000F40  D7FC               	bra	u1737
  3065   000F42                     
  3066                           ;lcd.c: 36:         Lcd_Cmd(y);
  3067   000F42  5008               	movf	Lcd_Set_Cursor@y^0,w,c
  3068   000F44  ECAB  F00A         	call	_Lcd_Cmd
  3069                           
  3070                           ;lcd.c: 37:     }
  3071   000F48  EF07  F008         	goto	l215
  3072   000F4C                     l1973:
  3073   000F4C  0E02               	movlw	2
  3074   000F4E  1806               	xorwf	Lcd_Set_Cursor@a^0,w,c
  3075   000F50  A4D8               	btfss	status,2,c
  3076   000F52  EFAD  F007         	goto	u1231
  3077   000F56  EFAF  F007         	goto	u1230
  3078   000F5A                     u1231:
  3079   000F5A  EFC7  F007         	goto	l1983
  3080   000F5E                     u1230:
  3081   000F5E                     
  3082                           ;lcd.c: 39:     {;lcd.c: 40:         temp = 0xC0 + b - 1;
  3083   000F5E  5004               	movf	Lcd_Set_Cursor@b^0,w,c
  3084   000F60  0FBF               	addlw	191
  3085   000F62  6E09               	movwf	Lcd_Set_Cursor@temp^0,c
  3086                           
  3087                           ;lcd.c: 41:         z = temp>>4;
  3088   000F64  3809               	swapf	Lcd_Set_Cursor@temp^0,w,c
  3089   000F66  0B0F               	andlw	15
  3090   000F68  6E07               	movwf	Lcd_Set_Cursor@z^0,c
  3091                           
  3092                           ;lcd.c: 42:         y = temp & 0x0F;
  3093   000F6A  5009               	movf	Lcd_Set_Cursor@temp^0,w,c
  3094   000F6C  0B0F               	andlw	15
  3095   000F6E  6E08               	movwf	Lcd_Set_Cursor@y^0,c
  3096   000F70                     
  3097                           ;lcd.c: 43:         Lcd_Cmd(z);
  3098   000F70  5007               	movf	Lcd_Set_Cursor@z^0,w,c
  3099   000F72  ECAB  F00A         	call	_Lcd_Cmd
  3100   000F76                     
  3101                           ;lcd.c: 44:         _delay((unsigned long)((10)*(1000000/4000.0)));
  3102   000F76  0E04               	movlw	4
  3103   000F78  6E05               	movwf	??_Lcd_Set_Cursor^0,c
  3104   000F7A  0E3E               	movlw	62
  3105   000F7C                     u1747:
  3106   000F7C  2EE8               	decfsz	wreg,f,c
  3107   000F7E  D7FE               	bra	u1747
  3108   000F80  2E05               	decfsz	??_Lcd_Set_Cursor^0,f,c
  3109   000F82  D7FC               	bra	u1747
  3110   000F84                     
  3111                           ;lcd.c: 45:         Lcd_Cmd(y);
  3112   000F84  5008               	movf	Lcd_Set_Cursor@y^0,w,c
  3113   000F86  ECAB  F00A         	call	_Lcd_Cmd
  3114                           
  3115                           ;lcd.c: 46:     }
  3116   000F8A  EF07  F008         	goto	l215
  3117   000F8E                     l1983:
  3118   000F8E  0E03               	movlw	3
  3119   000F90  1806               	xorwf	Lcd_Set_Cursor@a^0,w,c
  3120   000F92  A4D8               	btfss	status,2,c
  3121   000F94  EFCE  F007         	goto	u1241
  3122   000F98  EFD0  F007         	goto	u1240
  3123   000F9C                     u1241:
  3124   000F9C  EFE8  F007         	goto	l1993
  3125   000FA0                     u1240:
  3126   000FA0                     
  3127                           ;lcd.c: 48:     {;lcd.c: 49:         temp = 0x94 + b - 1;
  3128   000FA0  5004               	movf	Lcd_Set_Cursor@b^0,w,c
  3129   000FA2  0F93               	addlw	147
  3130   000FA4  6E09               	movwf	Lcd_Set_Cursor@temp^0,c
  3131                           
  3132                           ;lcd.c: 50:         z = temp>>4;
  3133   000FA6  3809               	swapf	Lcd_Set_Cursor@temp^0,w,c
  3134   000FA8  0B0F               	andlw	15
  3135   000FAA  6E07               	movwf	Lcd_Set_Cursor@z^0,c
  3136                           
  3137                           ;lcd.c: 51:         y = temp & 0x0F;
  3138   000FAC  5009               	movf	Lcd_Set_Cursor@temp^0,w,c
  3139   000FAE  0B0F               	andlw	15
  3140   000FB0  6E08               	movwf	Lcd_Set_Cursor@y^0,c
  3141   000FB2                     
  3142                           ;lcd.c: 52:         Lcd_Cmd(z);
  3143   000FB2  5007               	movf	Lcd_Set_Cursor@z^0,w,c
  3144   000FB4  ECAB  F00A         	call	_Lcd_Cmd
  3145   000FB8                     
  3146                           ;lcd.c: 53:         _delay((unsigned long)((10)*(1000000/4000.0)));
  3147   000FB8  0E04               	movlw	4
  3148   000FBA  6E05               	movwf	??_Lcd_Set_Cursor^0,c
  3149   000FBC  0E3E               	movlw	62
  3150   000FBE                     u1757:
  3151   000FBE  2EE8               	decfsz	wreg,f,c
  3152   000FC0  D7FE               	bra	u1757
  3153   000FC2  2E05               	decfsz	??_Lcd_Set_Cursor^0,f,c
  3154   000FC4  D7FC               	bra	u1757
  3155   000FC6                     
  3156                           ;lcd.c: 54:         Lcd_Cmd(y);
  3157   000FC6  5008               	movf	Lcd_Set_Cursor@y^0,w,c
  3158   000FC8  ECAB  F00A         	call	_Lcd_Cmd
  3159                           
  3160                           ;lcd.c: 55:     }
  3161   000FCC  EF07  F008         	goto	l215
  3162   000FD0                     l1993:
  3163   000FD0  0E04               	movlw	4
  3164   000FD2  1806               	xorwf	Lcd_Set_Cursor@a^0,w,c
  3165   000FD4  A4D8               	btfss	status,2,c
  3166   000FD6  EFEF  F007         	goto	u1251
  3167   000FDA  EFF1  F007         	goto	u1250
  3168   000FDE                     u1251:
  3169   000FDE  EF07  F008         	goto	l215
  3170   000FE2                     u1250:
  3171   000FE2                     
  3172                           ;lcd.c: 57:     {;lcd.c: 58:         temp = 0xD4 + b - 1;
  3173   000FE2  5004               	movf	Lcd_Set_Cursor@b^0,w,c
  3174   000FE4  0FD3               	addlw	211
  3175   000FE6  6E09               	movwf	Lcd_Set_Cursor@temp^0,c
  3176                           
  3177                           ;lcd.c: 59:         z = temp>>4;
  3178   000FE8  3809               	swapf	Lcd_Set_Cursor@temp^0,w,c
  3179   000FEA  0B0F               	andlw	15
  3180   000FEC  6E07               	movwf	Lcd_Set_Cursor@z^0,c
  3181                           
  3182                           ;lcd.c: 60:         y = temp & 0x0F;
  3183   000FEE  5009               	movf	Lcd_Set_Cursor@temp^0,w,c
  3184   000FF0  0B0F               	andlw	15
  3185   000FF2  6E08               	movwf	Lcd_Set_Cursor@y^0,c
  3186   000FF4                     
  3187                           ;lcd.c: 61:         Lcd_Cmd(z);
  3188   000FF4  5007               	movf	Lcd_Set_Cursor@z^0,w,c
  3189   000FF6  ECAB  F00A         	call	_Lcd_Cmd
  3190   000FFA                     
  3191                           ;lcd.c: 62:         _delay((unsigned long)((10)*(1000000/4000.0)));
  3192   000FFA  0E04               	movlw	4
  3193   000FFC  6E05               	movwf	??_Lcd_Set_Cursor^0,c
  3194   000FFE  0E3E               	movlw	62
  3195   001000                     u1767:
  3196   001000  2EE8               	decfsz	wreg,f,c
  3197   001002  D7FE               	bra	u1767
  3198   001004  2E05               	decfsz	??_Lcd_Set_Cursor^0,f,c
  3199   001006  D7FC               	bra	u1767
  3200   001008                     
  3201                           ;lcd.c: 63:         Lcd_Cmd(y);
  3202   001008  5008               	movf	Lcd_Set_Cursor@y^0,w,c
  3203   00100A  ECAB  F00A         	call	_Lcd_Cmd
  3204   00100E                     l215:
  3205   00100E  0012               	return		;funcret
  3206   001010                     __end_of_Lcd_Set_Cursor:
  3207                           	callstack 0
  3208                           
  3209 ;; *************** function _init_ports *****************
  3210 ;; Defined at:
  3211 ;;		line 52 in file "Cinta.c"
  3212 ;; Parameters:    Size  Location     Type
  3213 ;;		None
  3214 ;; Auto vars:     Size  Location     Type
  3215 ;;		None
  3216 ;; Return value:  Size  Location     Type
  3217 ;;                  1    wreg      void 
  3218 ;; Registers used:
  3219 ;;		wreg, status,2
  3220 ;; Tracked objects:
  3221 ;;		On entry : 0/0
  3222 ;;		On exit  : 0/0
  3223 ;;		Unchanged: 0/0
  3224 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3225 ;;      Params:         0       0       0       0       0       0       0       0       0
  3226 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3227 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3228 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3229 ;;Total ram usage:        0 bytes
  3230 ;; Hardware stack levels used: 1
  3231 ;; Hardware stack levels required when called: 1
  3232 ;; This function calls:
  3233 ;;		Nothing
  3234 ;; This function is called by:
  3235 ;;		_main
  3236 ;; This function uses a non-reentrant model
  3237 ;;
  3238                           
  3239                           	psect	text14
  3240   001514                     __ptext14:
  3241                           	callstack 0
  3242   001514                     _init_ports:
  3243                           	callstack 29
  3244   001514                     
  3245                           ;Cinta.c: 53:      ADCON1bits.PCFG=0x0F;
  3246   001514  0E0F               	movlw	15
  3247   001516  12C1               	iorwf	193,f,c	;volatile
  3248   001518                     
  3249                           ;Cinta.c: 54:      TRISB=0XFF;
  3250   001518  6893               	setf	147,c	;volatile
  3251                           
  3252                           ;Cinta.c: 55:      TRISA=0b00001111;
  3253   00151A  0E0F               	movlw	15
  3254   00151C  6E92               	movwf	146,c	;volatile
  3255   00151E                     
  3256                           ;Cinta.c: 56:      LATA=0X00;
  3257   00151E  6A89               	clrf	137,c	;volatile
  3258   001520                     
  3259                           ;Cinta.c: 57:      TRISD=0X00;
  3260   001520  6A95               	clrf	149,c	;volatile
  3261   001522                     
  3262                           ;Cinta.c: 58:      TRISE=0X00;
  3263   001522  6A96               	clrf	150,c	;volatile
  3264   001524                     
  3265                           ;Cinta.c: 59:      LATE=0;
  3266   001524  6A8D               	clrf	141,c	;volatile
  3267                           
  3268                           ;Cinta.c: 60:      TRISC=0X80;
  3269   001526  0E80               	movlw	128
  3270   001528  6E94               	movwf	148,c	;volatile
  3271   00152A                     
  3272                           ;Cinta.c: 61:      LATA=0;
  3273   00152A  6A89               	clrf	137,c	;volatile
  3274   00152C                     
  3275                           ;Cinta.c: 62:      LATE=0;
  3276   00152C  6A8D               	clrf	141,c	;volatile
  3277   00152E                     
  3278                           ;Cinta.c: 63:      LATB=0;
  3279   00152E  6A8A               	clrf	138,c	;volatile
  3280   001530                     
  3281                           ;Cinta.c: 64:      LATC=0;
  3282   001530  6A8B               	clrf	139,c	;volatile
  3283   001532                     
  3284                           ;Cinta.c: 65:      LATD=0;
  3285   001532  6A8C               	clrf	140,c	;volatile
  3286   001534  0012               	return		;funcret
  3287   001536                     __end_of_init_ports:
  3288                           	callstack 0
  3289                           
  3290 ;; *************** function _init_maqueta *****************
  3291 ;; Defined at:
  3292 ;;		line 77 in file "Cinta.c"
  3293 ;; Parameters:    Size  Location     Type
  3294 ;;		None
  3295 ;; Auto vars:     Size  Location     Type
  3296 ;;		None
  3297 ;; Return value:  Size  Location     Type
  3298 ;;                  1    wreg      void 
  3299 ;; Registers used:
  3300 ;;		None
  3301 ;; Tracked objects:
  3302 ;;		On entry : 0/0
  3303 ;;		On exit  : 0/0
  3304 ;;		Unchanged: 0/0
  3305 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3306 ;;      Params:         0       0       0       0       0       0       0       0       0
  3307 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3308 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3309 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3310 ;;Total ram usage:        0 bytes
  3311 ;; Hardware stack levels used: 1
  3312 ;; Hardware stack levels required when called: 1
  3313 ;; This function calls:
  3314 ;;		Nothing
  3315 ;; This function is called by:
  3316 ;;		_main
  3317 ;; This function uses a non-reentrant model
  3318 ;;
  3319                           
  3320                           	psect	text15
  3321   001320                     __ptext15:
  3322                           	callstack 0
  3323   001320                     _init_maqueta:
  3324                           	callstack 29
  3325   001320                     
  3326                           ;Cinta.c: 79:     if(PORTBbits.RB5!=0){
  3327   001320  AA81               	btfss	129,5,c	;volatile
  3328   001322  EF95  F009         	goto	u401
  3329   001326  EF97  F009         	goto	u400
  3330   00132A                     u401:
  3331   00132A  EFA0  F009         	goto	l82
  3332   00132E                     u400:
  3333   00132E                     
  3334                           ;Cinta.c: 80:         LATAbits.LA6=1;
  3335   00132E  8C89               	bsf	137,6,c	;volatile
  3336   001330                     l83:
  3337   001330  BA81               	btfsc	129,5,c	;volatile
  3338   001332  EF9D  F009         	goto	u411
  3339   001336  EF9F  F009         	goto	u410
  3340   00133A                     u411:
  3341   00133A  EF98  F009         	goto	l83
  3342   00133E                     u410:
  3343   00133E                     
  3344                           ;Cinta.c: 82:         LATAbits.LA6=0;
  3345   00133E  9C89               	bcf	137,6,c	;volatile
  3346   001340                     l82:
  3347                           
  3348                           ;Cinta.c: 84:     if(PORTBbits.RB1!=0){
  3349   001340  A281               	btfss	129,1,c	;volatile
  3350   001342  EFA5  F009         	goto	u421
  3351   001346  EFA7  F009         	goto	u420
  3352   00134A                     u421:
  3353   00134A  EFB0  F009         	goto	l86
  3354   00134E                     u420:
  3355   00134E                     
  3356                           ;Cinta.c: 85:         LATDbits.LATD3=1;
  3357   00134E  868C               	bsf	140,3,c	;volatile
  3358   001350                     l87:
  3359   001350  B281               	btfsc	129,1,c	;volatile
  3360   001352  EFAD  F009         	goto	u431
  3361   001356  EFAF  F009         	goto	u430
  3362   00135A                     u431:
  3363   00135A  EFA8  F009         	goto	l87
  3364   00135E                     u430:
  3365   00135E                     
  3366                           ;Cinta.c: 87:          LATDbits.LATD3=0;
  3367   00135E  968C               	bcf	140,3,c	;volatile
  3368   001360                     l86:
  3369                           
  3370                           ;Cinta.c: 89:     if(PORTAbits.RA3!=0){
  3371   001360  A680               	btfss	128,3,c	;volatile
  3372   001362  EFB5  F009         	goto	u441
  3373   001366  EFB7  F009         	goto	u440
  3374   00136A                     u441:
  3375   00136A  EFC0  F009         	goto	l94
  3376   00136E                     u440:
  3377   00136E                     
  3378                           ;Cinta.c: 90:         LATCbits.LC1=1;
  3379   00136E  828B               	bsf	139,1,c	;volatile
  3380   001370                     l91:
  3381   001370  B680               	btfsc	128,3,c	;volatile
  3382   001372  EFBD  F009         	goto	u451
  3383   001376  EFBF  F009         	goto	u450
  3384   00137A                     u451:
  3385   00137A  EFB8  F009         	goto	l91
  3386   00137E                     u450:
  3387   00137E                     
  3388                           ;Cinta.c: 92:         LATCbits.LC1=0;
  3389   00137E  928B               	bcf	139,1,c	;volatile
  3390   001380                     l94:
  3391   001380  0012               	return		;funcret
  3392   001382                     __end_of_init_maqueta:
  3393                           	callstack 0
  3394                           
  3395 ;; *************** function _Lcd_Init *****************
  3396 ;; Defined at:
  3397 ;;		line 67 in file "lcd.c"
  3398 ;; Parameters:    Size  Location     Type
  3399 ;;		None
  3400 ;; Auto vars:     Size  Location     Type
  3401 ;;		None
  3402 ;; Return value:  Size  Location     Type
  3403 ;;                  1    wreg      void 
  3404 ;; Registers used:
  3405 ;;		wreg, status,2, cstack
  3406 ;; Tracked objects:
  3407 ;;		On entry : 0/0
  3408 ;;		On exit  : 0/0
  3409 ;;		Unchanged: 0/0
  3410 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3411 ;;      Params:         0       0       0       0       0       0       0       0       0
  3412 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3413 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3414 ;;      Totals:         1       0       0       0       0       0       0       0       0
  3415 ;;Total ram usage:        1 bytes
  3416 ;; Hardware stack levels used: 1
  3417 ;; Hardware stack levels required when called: 3
  3418 ;; This function calls:
  3419 ;;		_Lcd_Clear
  3420 ;;		_Lcd_Cmd
  3421 ;;		_Lcd_Port
  3422 ;; This function is called by:
  3423 ;;		_main
  3424 ;; This function uses a non-reentrant model
  3425 ;;
  3426                           
  3427                           	psect	text16
  3428   0012A4                     __ptext16:
  3429                           	callstack 0
  3430   0012A4                     _Lcd_Init:
  3431                           	callstack 27
  3432   0012A4                     
  3433                           ;lcd.c: 69:  TRISEbits.TRISE0 = 0;
  3434   0012A4  9096               	bcf	150,0,c	;volatile
  3435                           
  3436                           ;lcd.c: 70:  TRISEbits.TRISE1 = 0;
  3437   0012A6  9296               	bcf	150,1,c	;volatile
  3438                           
  3439                           ;lcd.c: 71:  TRISDbits.TRISD4 = 0;
  3440   0012A8  9895               	bcf	149,4,c	;volatile
  3441                           
  3442                           ;lcd.c: 72:  TRISDbits.TRISD5 = 0;
  3443   0012AA  9A95               	bcf	149,5,c	;volatile
  3444                           
  3445                           ;lcd.c: 73:  TRISDbits.TRISD6 = 0;
  3446   0012AC  9C95               	bcf	149,6,c	;volatile
  3447                           
  3448                           ;lcd.c: 74:  TRISDbits.TRISD7 = 0;
  3449   0012AE  9E95               	bcf	149,7,c	;volatile
  3450   0012B0                     
  3451                           ;lcd.c: 75:     Lcd_Port(0x00);
  3452   0012B0  0E00               	movlw	0
  3453   0012B2  ECC1  F009         	call	_Lcd_Port
  3454   0012B6                     
  3455                           ;lcd.c: 76:     _delay((unsigned long)((20)*(1000000/4000.0)));
  3456   0012B6  0E07               	movlw	7
  3457   0012B8  6E04               	movwf	??_Lcd_Init^0,c
  3458   0012BA  0E7D               	movlw	125
  3459   0012BC                     u1777:
  3460   0012BC  2EE8               	decfsz	wreg,f,c
  3461   0012BE  D7FE               	bra	u1777
  3462   0012C0  2E04               	decfsz	??_Lcd_Init^0,f,c
  3463   0012C2  D7FC               	bra	u1777
  3464   0012C4  0000               	nop	
  3465   0012C6                     
  3466                           ;lcd.c: 77:     Lcd_Cmd(0x03);
  3467   0012C6  0E03               	movlw	3
  3468   0012C8  ECAB  F00A         	call	_Lcd_Cmd
  3469   0012CC                     
  3470                           ;lcd.c: 78:     _delay((unsigned long)((5)*(1000000/4000.0)));
  3471   0012CC  0EFA               	movlw	250
  3472   0012CE                     u1787:
  3473   0012CE  D000               	nop2	
  3474   0012D0  2EE8               	decfsz	wreg,f,c
  3475   0012D2  D7FD               	bra	u1787
  3476   0012D4                     
  3477                           ;lcd.c: 79:     Lcd_Cmd(0x03);
  3478   0012D4  0E03               	movlw	3
  3479   0012D6  ECAB  F00A         	call	_Lcd_Cmd
  3480   0012DA                     
  3481                           ;lcd.c: 80:     _delay((unsigned long)((11)*(1000000/4000.0)));
  3482   0012DA  0E04               	movlw	4
  3483   0012DC  6E04               	movwf	??_Lcd_Init^0,c
  3484   0012DE  0E91               	movlw	145
  3485   0012E0                     u1797:
  3486   0012E0  2EE8               	decfsz	wreg,f,c
  3487   0012E2  D7FE               	bra	u1797
  3488   0012E4  2E04               	decfsz	??_Lcd_Init^0,f,c
  3489   0012E6  D7FC               	bra	u1797
  3490   0012E8  0000               	nop	
  3491   0012EA                     
  3492                           ;lcd.c: 81:     Lcd_Cmd(0x03);
  3493   0012EA  0E03               	movlw	3
  3494   0012EC  ECAB  F00A         	call	_Lcd_Cmd
  3495   0012F0                     
  3496                           ;lcd.c: 82:     Lcd_Cmd(0x02);
  3497   0012F0  0E02               	movlw	2
  3498   0012F2  ECAB  F00A         	call	_Lcd_Cmd
  3499   0012F6                     
  3500                           ;lcd.c: 83:     Lcd_Cmd(0x02);
  3501   0012F6  0E02               	movlw	2
  3502   0012F8  ECAB  F00A         	call	_Lcd_Cmd
  3503   0012FC                     
  3504                           ;lcd.c: 84:     Lcd_Cmd(0x08);
  3505   0012FC  0E08               	movlw	8
  3506   0012FE  ECAB  F00A         	call	_Lcd_Cmd
  3507   001302                     
  3508                           ;lcd.c: 85:     Lcd_Cmd(0x00);
  3509   001302  0E00               	movlw	0
  3510   001304  ECAB  F00A         	call	_Lcd_Cmd
  3511   001308                     
  3512                           ;lcd.c: 86:     Lcd_Cmd(0x0C);
  3513   001308  0E0C               	movlw	12
  3514   00130A  ECAB  F00A         	call	_Lcd_Cmd
  3515   00130E                     
  3516                           ;lcd.c: 87:     Lcd_Cmd(0x00);
  3517   00130E  0E00               	movlw	0
  3518   001310  ECAB  F00A         	call	_Lcd_Cmd
  3519   001314                     
  3520                           ;lcd.c: 88:     Lcd_Cmd(0x06);
  3521   001314  0E06               	movlw	6
  3522   001316  ECAB  F00A         	call	_Lcd_Cmd
  3523   00131A                     
  3524                           ;lcd.c: 89:     Lcd_Clear();
  3525   00131A  ECB7  F00A         	call	_Lcd_Clear	;wreg free
  3526   00131E  0012               	return		;funcret
  3527   001320                     __end_of_Lcd_Init:
  3528                           	callstack 0
  3529                           
  3530 ;; *************** function _Lcd_Clear *****************
  3531 ;; Defined at:
  3532 ;;		line 20 in file "lcd.c"
  3533 ;; Parameters:    Size  Location     Type
  3534 ;;		None
  3535 ;; Auto vars:     Size  Location     Type
  3536 ;;		None
  3537 ;; Return value:  Size  Location     Type
  3538 ;;                  1    wreg      void 
  3539 ;; Registers used:
  3540 ;;		wreg, status,2, cstack
  3541 ;; Tracked objects:
  3542 ;;		On entry : 0/0
  3543 ;;		On exit  : 0/0
  3544 ;;		Unchanged: 0/0
  3545 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3546 ;;      Params:         0       0       0       0       0       0       0       0       0
  3547 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3548 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3549 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3550 ;;Total ram usage:        0 bytes
  3551 ;; Hardware stack levels used: 1
  3552 ;; Hardware stack levels required when called: 1
  3553 ;; This function calls:
  3554 ;;		_Lcd_Cmd
  3555 ;; This function is called by:
  3556 ;;		_mostrar_conteo
  3557 ;;		_Lcd_Init
  3558 ;; This function uses a non-reentrant model
  3559 ;;
  3560                           
  3561                           	psect	text17
  3562   00156E                     __ptext17:
  3563                           	callstack 0
  3564   00156E                     _Lcd_Clear:
  3565                           	callstack 28
  3566   00156E                     
  3567                           ;lcd.c: 22:     Lcd_Cmd(0);
  3568   00156E  0E00               	movlw	0
  3569   001570  ECAB  F00A         	call	_Lcd_Cmd
  3570                           
  3571                           ;lcd.c: 23:     Lcd_Cmd(1);
  3572   001574  0E01               	movlw	1
  3573   001576  ECAB  F00A         	call	_Lcd_Cmd
  3574   00157A  0012               	return		;funcret
  3575   00157C                     __end_of_Lcd_Clear:
  3576                           	callstack 0
  3577                           
  3578 ;; *************** function _Lcd_Cmd *****************
  3579 ;; Defined at:
  3580 ;;		line 11 in file "lcd.c"
  3581 ;; Parameters:    Size  Location     Type
  3582 ;;  a               1    wreg     unsigned char 
  3583 ;; Auto vars:     Size  Location     Type
  3584 ;;  a               1    1[COMRAM] unsigned char 
  3585 ;; Return value:  Size  Location     Type
  3586 ;;                  1    wreg      void 
  3587 ;; Registers used:
  3588 ;;		wreg, status,2, cstack
  3589 ;; Tracked objects:
  3590 ;;		On entry : 0/0
  3591 ;;		On exit  : 0/0
  3592 ;;		Unchanged: 0/0
  3593 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3594 ;;      Params:         0       0       0       0       0       0       0       0       0
  3595 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3596 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3597 ;;      Totals:         1       0       0       0       0       0       0       0       0
  3598 ;;Total ram usage:        1 bytes
  3599 ;; Hardware stack levels used: 1
  3600 ;; Hardware stack levels required when called: 1
  3601 ;; This function calls:
  3602 ;;		_Lcd_Port
  3603 ;; This function is called by:
  3604 ;;		_mostrar_conteo
  3605 ;;		_main
  3606 ;;		_Lcd_Clear
  3607 ;;		_Lcd_Set_Cursor
  3608 ;;		_Lcd_Init
  3609 ;;		_Lcd_Shift_Right
  3610 ;;		_Lcd_Shift_Left
  3611 ;;		_Lcd_Blink
  3612 ;;		_Lcd_NoBlink
  3613 ;;		_Lcd_CGRAM_Init
  3614 ;;		_Lcd_CGRAM_Close
  3615 ;; This function uses a non-reentrant model
  3616 ;;
  3617                           
  3618                           	psect	text18
  3619   001556                     __ptext18:
  3620                           	callstack 0
  3621   001556                     _Lcd_Cmd:
  3622                           	callstack 27
  3623                           
  3624                           ;incstack = 0
  3625                           ;Lcd_Cmd@a stored from wreg
  3626   001556  6E03               	movwf	Lcd_Cmd@a^0,c
  3627   001558                     
  3628                           ;lcd.c: 11: void Lcd_Cmd(char a);lcd.c: 12: {;lcd.c: 13:     LATEbits.LE0 = 0;
  3629   001558  908D               	bcf	141,0,c	;volatile
  3630   00155A                     
  3631                           ;lcd.c: 14:     Lcd_Port(a);
  3632   00155A  5003               	movf	Lcd_Cmd@a^0,w,c
  3633   00155C  ECC1  F009         	call	_Lcd_Port
  3634   001560                     
  3635                           ;lcd.c: 15:     LATEbits.LE1 = 1;
  3636   001560  828D               	bsf	141,1,c	;volatile
  3637   001562                     
  3638                           ;lcd.c: 16:     _delay((unsigned long)((4)*(1000000/4000.0)));
  3639   001562  0EC8               	movlw	200
  3640   001564                     u1807:
  3641   001564  D000               	nop2	
  3642   001566  2EE8               	decfsz	wreg,f,c
  3643   001568  D7FD               	bra	u1807
  3644   00156A                     
  3645                           ;lcd.c: 17:     LATEbits.LE1 = 0;
  3646   00156A  928D               	bcf	141,1,c	;volatile
  3647   00156C  0012               	return		;funcret
  3648   00156E                     __end_of_Lcd_Cmd:
  3649                           	callstack 0
  3650                           
  3651 ;; *************** function _Lcd_Port *****************
  3652 ;; Defined at:
  3653 ;;		line 3 in file "lcd.c"
  3654 ;; Parameters:    Size  Location     Type
  3655 ;;  a               1    wreg     unsigned char 
  3656 ;; Auto vars:     Size  Location     Type
  3657 ;;  a               1    0[COMRAM] unsigned char 
  3658 ;; Return value:  Size  Location     Type
  3659 ;;                  1    wreg      void 
  3660 ;; Registers used:
  3661 ;;		wreg
  3662 ;; Tracked objects:
  3663 ;;		On entry : 0/0
  3664 ;;		On exit  : 0/0
  3665 ;;		Unchanged: 0/0
  3666 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3667 ;;      Params:         0       0       0       0       0       0       0       0       0
  3668 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3669 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3670 ;;      Totals:         1       0       0       0       0       0       0       0       0
  3671 ;;Total ram usage:        1 bytes
  3672 ;; Hardware stack levels used: 1
  3673 ;; Hardware stack levels required when called: 1
  3674 ;; This function calls:
  3675 ;;		Nothing
  3676 ;; This function is called by:
  3677 ;;		_Lcd_Cmd
  3678 ;;		_Lcd_Init
  3679 ;;		_Lcd_Write_Char
  3680 ;; This function uses a non-reentrant model
  3681 ;;
  3682                           
  3683                           	psect	text19
  3684   001382                     __ptext19:
  3685                           	callstack 0
  3686   001382                     _Lcd_Port:
  3687                           	callstack 25
  3688                           
  3689                           ;incstack = 0
  3690                           ;Lcd_Port@a stored from wreg
  3691   001382  6E02               	movwf	Lcd_Port@a^0,c
  3692   001384                     
  3693                           ;lcd.c: 3: void Lcd_Port(char a);lcd.c: 4: {;lcd.c: 5:     (a & 1) ? (LATDbits.LD4 = 1) 
      +                          : (LATDbits.LD4 = 0);
  3694   001384  A002               	btfss	Lcd_Port@a^0,0,c
  3695   001386  EFC7  F009         	goto	u181
  3696   00138A  EFC9  F009         	goto	u180
  3697   00138E                     u181:
  3698   00138E  EFCC  F009         	goto	l184
  3699   001392                     u180:
  3700   001392  888C               	bsf	140,4,c	;volatile
  3701   001394  EFCD  F009         	goto	l1243
  3702   001398                     l184:
  3703   001398  988C               	bcf	140,4,c	;volatile
  3704   00139A                     l1243:
  3705                           
  3706                           ;lcd.c: 6:     (a & 2) ? (LATDbits.LD5 = 1) : (LATDbits.LD5 = 0);
  3707   00139A  A202               	btfss	Lcd_Port@a^0,1,c
  3708   00139C  EFD2  F009         	goto	u191
  3709   0013A0  EFD4  F009         	goto	u190
  3710   0013A4                     u191:
  3711   0013A4  EFD7  F009         	goto	l188
  3712   0013A8                     u190:
  3713   0013A8  8A8C               	bsf	140,5,c	;volatile
  3714   0013AA  EFD8  F009         	goto	l1247
  3715   0013AE                     l188:
  3716   0013AE  9A8C               	bcf	140,5,c	;volatile
  3717   0013B0                     l1247:
  3718                           
  3719                           ;lcd.c: 7:     (a & 4) ? (LATDbits.LD6 = 1) : (LATDbits.LD6 = 0);
  3720   0013B0  A402               	btfss	Lcd_Port@a^0,2,c
  3721   0013B2  EFDD  F009         	goto	u201
  3722   0013B6  EFDF  F009         	goto	u200
  3723   0013BA                     u201:
  3724   0013BA  EFE2  F009         	goto	l192
  3725   0013BE                     u200:
  3726   0013BE  8C8C               	bsf	140,6,c	;volatile
  3727   0013C0  EFE3  F009         	goto	l1251
  3728   0013C4                     l192:
  3729   0013C4  9C8C               	bcf	140,6,c	;volatile
  3730   0013C6                     l1251:
  3731                           
  3732                           ;lcd.c: 8:     (a & 8) ? (LATDbits.LD7 = 1) : (LATDbits.LD7 = 0);
  3733   0013C6  A602               	btfss	Lcd_Port@a^0,3,c
  3734   0013C8  EFE8  F009         	goto	u211
  3735   0013CC  EFEA  F009         	goto	u210
  3736   0013D0                     u211:
  3737   0013D0  EFED  F009         	goto	l196
  3738   0013D4                     u210:
  3739   0013D4  8E8C               	bsf	140,7,c	;volatile
  3740   0013D6  EFEE  F009         	goto	l199
  3741   0013DA                     l196:
  3742   0013DA  9E8C               	bcf	140,7,c	;volatile
  3743   0013DC                     l199:
  3744   0013DC  0012               	return		;funcret
  3745   0013DE                     __end_of_Lcd_Port:
  3746                           	callstack 0
  3747                           
  3748 ;; *************** function _Stop *****************
  3749 ;; Defined at:
  3750 ;;		line 146 in file "Cinta.c"
  3751 ;; Parameters:    Size  Location     Type
  3752 ;;		None
  3753 ;; Auto vars:     Size  Location     Type
  3754 ;;		None
  3755 ;; Return value:  Size  Location     Type
  3756 ;;                  1    wreg      void 
  3757 ;; Registers used:
  3758 ;;		None
  3759 ;; Tracked objects:
  3760 ;;		On entry : 0/0
  3761 ;;		On exit  : 0/0
  3762 ;;		Unchanged: 0/0
  3763 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3764 ;;      Params:         0       0       0       0       0       0       0       0       0
  3765 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3766 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3767 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3768 ;;Total ram usage:        0 bytes
  3769 ;; Hardware stack levels used: 1
  3770 ;; This function calls:
  3771 ;;		Nothing
  3772 ;; This function is called by:
  3773 ;;		Interrupt level 2
  3774 ;; This function uses a non-reentrant model
  3775 ;;
  3776                           
  3777                           	psect	intcode
  3778   000008                     __pintcode:
  3779                           	callstack 0
  3780   000008                     _Stop:
  3781                           	callstack 23
  3782                           
  3783                           ;incstack = 0
  3784   000008  8201               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  3785   00000A  ED29  F00A         	call	int_func,f	;refresh shadow registers
  3786                           
  3787                           	psect	intcode_body
  3788   001452                     __pintcode_body:
  3789                           	callstack 23
  3790   001452                     int_func:
  3791                           	callstack 23
  3792   001452  0006               	pop		; remove dummy address from shadow register refresh
  3793   001454                     
  3794                           ;Cinta.c: 147:     PORTEbits.RE2 = PORTBbits.RB0;
  3795   001454  A081               	btfss	129,0,c	;volatile
  3796   001456  D002               	bra	i2u58_45
  3797   001458  8484               	bsf	132,2,c	;volatile
  3798   00145A  D001               	bra	i2u58_47
  3799   00145C                     i2u58_45:
  3800   00145C  9484               	bcf	132,2,c	;volatile
  3801   00145E                     i2u58_47:
  3802                           
  3803                           ;Cinta.c: 148: while(PORTBbits.RB0==0){
  3804   00145E  EF36  F00A         	goto	i2l114
  3805   001462                     i2l115:
  3806                           
  3807                           ;Cinta.c: 149:     PORTEbits.RE2 = PORTBbits.RB0;
  3808   001462  A081               	btfss	129,0,c	;volatile
  3809   001464  D002               	bra	i2u59_45
  3810   001466  8484               	bsf	132,2,c	;volatile
  3811   001468  D001               	bra	i2u59_47
  3812   00146A                     i2u59_45:
  3813   00146A  9484               	bcf	132,2,c	;volatile
  3814   00146C                     i2u59_47:
  3815   00146C                     i2l114:
  3816                           
  3817                           ;Cinta.c: 148: while(PORTBbits.RB0==0){
  3818   00146C  A081               	btfss	129,0,c	;volatile
  3819   00146E  EF3B  F00A         	goto	i2u60_41
  3820   001472  EF3D  F00A         	goto	i2u60_40
  3821   001476                     i2u60_41:
  3822   001476  EF31  F00A         	goto	i2l115
  3823   00147A                     i2u60_40:
  3824   00147A                     
  3825                           ;Cinta.c: 151: PORTEbits.RE2 = PORTBbits.RB0;
  3826   00147A  A081               	btfss	129,0,c	;volatile
  3827   00147C  D002               	bra	i2u61_45
  3828   00147E  8484               	bsf	132,2,c	;volatile
  3829   001480  D001               	bra	i2u61_47
  3830   001482                     i2u61_45:
  3831   001482  9484               	bcf	132,2,c	;volatile
  3832   001484                     i2u61_47:
  3833                           
  3834                           ;Cinta.c: 152: INTCONbits.INT0IF = 0;
  3835   001484  92F2               	bcf	242,1,c	;volatile
  3836   001486  9201               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  3837   001488  0011               	retfie		f
  3838   00148A                     __end_of_Stop:
  3839                           	callstack 0
  3840                           
  3841                           	psect	rparam
  3842   000001                     ___rparam_used  equ	1
  3843   000000                     ___param_bank   equ	0
  3844   000000                     __Lparam        equ	__Lrparam
  3845   000000                     __Hparam        equ	__Hrparam
  3846   000001                     btemp           set	1	;btemp
  3847   000001                     int$flags       set	1
  3848   000001                     btemp0          set	1
  3849   000002                     btemp1          set	2
  3850                           
  3851                           	psect	config
  3852                           
  3853                           ;Config register CONFIG1L @ 0x300000
  3854                           ;	PLL Prescaler Selection bits
  3855                           ;	PLLDIV = 1, No prescale (4 MHz oscillator input drives PLL directly)
  3856                           ;	System Clock Postscaler Selection bits
  3857                           ;	CPUDIV = OSC1_PLL2, [Primary Oscillator Src: /1][96 MHz PLL Src: /2]
  3858                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
  3859                           ;	USBDIV = 1, USB clock source comes directly from the primary oscillator block with no 
      +                          postscale
  3860   300000                     	org	3145728
  3861   300000  00                 	db	0
  3862                           
  3863                           ;Config register CONFIG1H @ 0x300001
  3864                           ;	Oscillator Selection bits
  3865                           ;	FOSC = INTOSCIO_EC, Internal oscillator, port function on RA6, EC used by USB (INTIO)
  3866                           ;	Fail-Safe Clock Monitor Enable bit
  3867                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  3868                           ;	Internal/External Oscillator Switchover bit
  3869                           ;	IESO = OFF, Oscillator Switchover mode disabled
  3870   300001                     	org	3145729
  3871   300001  08                 	db	8
  3872                           
  3873                           ;Config register CONFIG2L @ 0x300002
  3874                           ;	Power-up Timer Enable bit
  3875                           ;	PWRT = OFF, PWRT disabled
  3876                           ;	Brown-out Reset Enable bits
  3877                           ;	BOR = OFF, Brown-out Reset disabled in hardware and software
  3878                           ;	Brown-out Reset Voltage bits
  3879                           ;	BORV = 3, Minimum setting 2.05V
  3880                           ;	USB Voltage Regulator Enable bit
  3881                           ;	VREGEN = OFF, USB voltage regulator disabled
  3882   300002                     	org	3145730
  3883   300002  19                 	db	25
  3884                           
  3885                           ;Config register CONFIG2H @ 0x300003
  3886                           ;	Watchdog Timer Enable bit
  3887                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  3888                           ;	Watchdog Timer Postscale Select bits
  3889                           ;	WDTPS = 32768, 1:32768
  3890   300003                     	org	3145731
  3891   300003  1E                 	db	30
  3892                           
  3893                           ; Padding undefined space
  3894   300004                     	org	3145732
  3895   300004  FF                 	db	255
  3896                           
  3897                           ;Config register CONFIG3H @ 0x300005
  3898                           ;	CCP2 MUX bit
  3899                           ;	CCP2MX = OFF, CCP2 input/output is multiplexed with RB3
  3900                           ;	PORTB A/D Enable bit
  3901                           ;	PBADEN = ON, PORTB<4:0> pins are configured as analog input channels on Reset
  3902                           ;	Low-Power Timer 1 Oscillator Enable bit
  3903                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  3904                           ;	MCLR Pin Enable bit
  3905                           ;	MCLRE = OFF, RE3 input pin enabled; MCLR pin disabled
  3906   300005                     	org	3145733
  3907   300005  02                 	db	2
  3908                           
  3909                           ;Config register CONFIG4L @ 0x300006
  3910                           ;	Stack Full/Underflow Reset Enable bit
  3911                           ;	STVREN = OFF, Stack full/underflow will not cause Reset
  3912                           ;	Single-Supply ICSP Enable bit
  3913                           ;	LVP = OFF, Single-Supply ICSP disabled
  3914                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
  3915                           ;	ICPRT = ON, ICPORT enabled
  3916                           ;	Extended Instruction Set Enable bit
  3917                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  3918                           ;	Background Debugger Enable bit
  3919                           ;	DEBUG = 0x1, unprogrammed default
  3920   300006                     	org	3145734
  3921   300006  A0                 	db	160
  3922                           
  3923                           ; Padding undefined space
  3924   300007                     	org	3145735
  3925   300007  FF                 	db	255
  3926                           
  3927                           ;Config register CONFIG5L @ 0x300008
  3928                           ;	Code Protection bit
  3929                           ;	CP0 = OFF, Block 0 (000800-001FFFh) is not code-protected
  3930                           ;	Code Protection bit
  3931                           ;	CP1 = OFF, Block 1 (002000-003FFFh) is not code-protected
  3932                           ;	Code Protection bit
  3933                           ;	CP2 = OFF, Block 2 (004000-005FFFh) is not code-protected
  3934                           ;	Code Protection bit
  3935                           ;	CP3 = OFF, Block 3 (006000-007FFFh) is not code-protected
  3936   300008                     	org	3145736
  3937   300008  0F                 	db	15
  3938                           
  3939                           ;Config register CONFIG5H @ 0x300009
  3940                           ;	Boot Block Code Protection bit
  3941                           ;	CPB = OFF, Boot block (000000-0007FFh) is not code-protected
  3942                           ;	Data EEPROM Code Protection bit
  3943                           ;	CPD = OFF, Data EEPROM is not code-protected
  3944   300009                     	org	3145737
  3945   300009  C0                 	db	192
  3946                           
  3947                           ;Config register CONFIG6L @ 0x30000A
  3948                           ;	Write Protection bit
  3949                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) is not write-protected
  3950                           ;	Write Protection bit
  3951                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) is not write-protected
  3952                           ;	Write Protection bit
  3953                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) is not write-protected
  3954                           ;	Write Protection bit
  3955                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) is not write-protected
  3956   30000A                     	org	3145738
  3957   30000A  0F                 	db	15
  3958                           
  3959                           ;Config register CONFIG6H @ 0x30000B
  3960                           ;	Configuration Register Write Protection bit
  3961                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
  3962                           ;	Boot Block Write Protection bit
  3963                           ;	WRTB = OFF, Boot block (000000-0007FFh) is not write-protected
  3964                           ;	Data EEPROM Write Protection bit
  3965                           ;	WRTD = OFF, Data EEPROM is not write-protected
  3966   30000B                     	org	3145739
  3967   30000B  E0                 	db	224
  3968                           
  3969                           ;Config register CONFIG7L @ 0x30000C
  3970                           ;	Table Read Protection bit
  3971                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) is not protected from table reads executed in ot
      +                          her blocks
  3972                           ;	Table Read Protection bit
  3973                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) is not protected from table reads executed in ot
      +                          her blocks
  3974                           ;	Table Read Protection bit
  3975                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) is not protected from table reads executed in ot
      +                          her blocks
  3976                           ;	Table Read Protection bit
  3977                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) is not protected from table reads executed in ot
      +                          her blocks
  3978   30000C                     	org	3145740
  3979   30000C  0F                 	db	15
  3980                           
  3981                           ;Config register CONFIG7H @ 0x30000D
  3982                           ;	Boot Block Table Read Protection bit
  3983                           ;	EBTRB = OFF, Boot block (000000-0007FFh) is not protected from table reads executed in
      +                           other blocks
  3984   30000D                     	org	3145741
  3985   30000D  40                 	db	64
  3986                           tosu	equ	0xFFF
  3987                           tosh	equ	0xFFE
  3988                           tosl	equ	0xFFD
  3989                           stkptr	equ	0xFFC
  3990                           pclatu	equ	0xFFB
  3991                           pclath	equ	0xFFA
  3992                           pcl	equ	0xFF9
  3993                           tblptru	equ	0xFF8
  3994                           tblptrh	equ	0xFF7
  3995                           tblptrl	equ	0xFF6
  3996                           tablat	equ	0xFF5
  3997                           prodh	equ	0xFF4
  3998                           prodl	equ	0xFF3
  3999                           indf0	equ	0xFEF
  4000                           postinc0	equ	0xFEE
  4001                           postdec0	equ	0xFED
  4002                           preinc0	equ	0xFEC
  4003                           plusw0	equ	0xFEB
  4004                           fsr0h	equ	0xFEA
  4005                           fsr0l	equ	0xFE9
  4006                           wreg	equ	0xFE8
  4007                           indf1	equ	0xFE7
  4008                           postinc1	equ	0xFE6
  4009                           postdec1	equ	0xFE5
  4010                           preinc1	equ	0xFE4
  4011                           plusw1	equ	0xFE3
  4012                           fsr1h	equ	0xFE2
  4013                           fsr1l	equ	0xFE1
  4014                           bsr	equ	0xFE0
  4015                           indf2	equ	0xFDF
  4016                           postinc2	equ	0xFDE
  4017                           postdec2	equ	0xFDD
  4018                           preinc2	equ	0xFDC
  4019                           plusw2	equ	0xFDB
  4020                           fsr2h	equ	0xFDA
  4021                           fsr2l	equ	0xFD9
  4022                           status	equ	0xFD8

Data Sizes:
    Strings     131
    Constant    0
    Data        0
    BSS         44
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     68      80
    BANK0           160      0      32
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    f$.$buffer	PTR unsigned char  size(1) Largest target is 20
		 -> mostrar_variable@buffer(COMRAM[20]), 

    f$.$source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(COMRAM[11]), 

    fputc@fp$.$buffer	PTR unsigned char  size(1) Largest target is 20
		 -> mostrar_variable@buffer(COMRAM[20]), 

    fputc@fp$.$source	PTR const unsigned char  size(2) Largest target is 0

    Lcd_Write_String@a	PTR const unsigned char  size(2) Largest target is 20
		 -> mostrar_variable@buffer(COMRAM[20]), STR_10(CODE[9]), STR_11(CODE[7]), STR_12(CODE[5]), 
		 -> STR_13(CODE[3]), STR_14(CODE[4]), STR_15(CODE[4]), STR_2(CODE[13]), 
		 -> STR_3(CODE[14]), STR_4(CODE[6]), STR_5(CODE[15]), STR_6(CODE[16]), 
		 -> STR_7(CODE[15]), STR_8(CODE[11]), STR_9(CODE[6]), 

    S1501$buffer	PTR unsigned char  size(1) Largest target is 20
		 -> mostrar_variable@buffer(COMRAM[20]), 

    S1501$source	PTR const unsigned char  size(2) Largest target is 0

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(COMRAM[2]), 

    sprintf@fmt	PTR const unsigned char  size(1) Largest target is 3
		 -> STR_1(CODE[3]), 

    sprintf@s	PTR unsigned char  size(1) Largest target is 20
		 -> mostrar_variable@buffer(COMRAM[20]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(COMRAM[1]), 

    vfpfcnvrt@cp	PTR unsigned char  size(1) Largest target is 3
		 -> STR_1(CODE[3]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 1
		 -> vfprintf@cfmt(COMRAM[1]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(COMRAM[11]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(COMRAM[1]), 

    vfprintf@cfmt	PTR unsigned char  size(1) Largest target is 3
		 -> STR_1(CODE[3]), 

    vfprintf@fmt	PTR const unsigned char  size(1) Largest target is 3
		 -> STR_1(CODE[3]), 

    vfprintf@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(COMRAM[11]), 


Critical Paths under _main in COMRAM

    _main->_mostrar_conteo
    _mostrar_conteo->_mostrar_variable
    _mostrar_variable->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_abs
    _abs->___awmod
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Clear->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port

Critical Paths under _Stop in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _Stop in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _Stop in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _Stop in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _Stop in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _Stop in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _Stop in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _Stop in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _Stop in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0    4037
                                             64 COMRAM     4     4      0
                            _Lcd_Cmd
                           _Lcd_Init
                     _Lcd_Set_Cursor
                       _init_maqueta
                         _init_ports
                     _mostrar_conteo
 ---------------------------------------------------------------------------------
 (1) _mostrar_conteo                                       1     1      0    3081
                                             63 COMRAM     1     1      0
                          _Lcd_Clear
                            _Lcd_Cmd
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
                   _mostrar_variable
 ---------------------------------------------------------------------------------
 (2) _mostrar_variable                                    22    20      2    2060
                                             41 COMRAM    22    20      2
                   _Lcd_Write_String
                            _sprintf
 ---------------------------------------------------------------------------------
 (3) _sprintf                                             18    14      4    1760
                                             25 COMRAM    16    12      4
                           _vfprintf
 ---------------------------------------------------------------------------------
 (4) _vfprintf                                             4     1      3    1559
                                             21 COMRAM     4     1      3
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (5) _vfpfcnvrt                                           11     8      3    1434
                                             10 COMRAM    11     8      3
                            ___awdiv
                            ___awmod
                                _abs
                              _fputc
 ---------------------------------------------------------------------------------
 (6) _fputc                                                8     5      3     230
                                              0 COMRAM     8     5      3
                              _putch
 ---------------------------------------------------------------------------------
 (7) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (6) _abs                                                  4     2      2      67
                                              6 COMRAM     4     2      2
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (6) ___awmod                                              6     2      4     298
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (6) ___awdiv                                              8     4      4     302
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (3) _Lcd_Write_String                                     6     4      2     225
                                              4 COMRAM     6     4      2
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (4) _Lcd_Write_Char                                       3     3      0     120
                                              1 COMRAM     3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (2) _Lcd_Set_Cursor                                       6     5      1     646
                                              2 COMRAM     6     5      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _init_ports                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_maqueta                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             1     1      0     210
                                              2 COMRAM     1     1      0
                          _Lcd_Clear
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (2) _Lcd_Clear                                            0     0      0      75
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (3) _Lcd_Cmd                                              1     1      0      75
                                              1 COMRAM     1     1      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (5) _Lcd_Port                                             1     1      0      60
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (8) _Stop                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Lcd_Cmd
     _Lcd_Port
   _Lcd_Init
     _Lcd_Clear
       _Lcd_Cmd
     _Lcd_Cmd
     _Lcd_Port
   _Lcd_Set_Cursor
     _Lcd_Cmd
   _init_maqueta
   _init_ports
   _mostrar_conteo
     _Lcd_Clear
     _Lcd_Cmd
     _Lcd_Set_Cursor
     _Lcd_Write_String
       _Lcd_Write_Char
         _Lcd_Port
     _mostrar_variable
       _Lcd_Write_String
       _sprintf
         _vfprintf
           _vfpfcnvrt
             ___awdiv
             ___awmod
             _abs
               ___awmod (ARG)
             _fputc
               _putch

 _Stop (ROOT)

Address spaces:
Name               Size   Autos  Total    Usage
BIGRAM            2047      0       0      0.0%
BITBANK7           256      0       0      0.0%
BANK7              256      0       0      0.0%
BITBANK6           256      0       0      0.0%
BANK6              256      0       0      0.0%
BITBANK5           256      0       0      0.0%
BANK5              256      0       0      0.0%
BITBANK4           256      0       0      0.0%
BANK4              256      0       0      0.0%
BITBANK3           256      0       0      0.0%
BANK3              256      0       0      0.0%
BITBANK2           256      0       0      0.0%
BANK2              256      0       0      0.0%
BITBANK1           256      0       0      0.0%
BANK1              256      0       0      0.0%
BITBANK0           160      0       0      0.0%
BANK0              160      0      32     20.0%
BITBIGSFRh         126      0       0      0.0%
BITCOMRAM           94      0       0      0.0%
COMRAM              94     68      80     85.1%
BITBIGSFRl          32      0       0      0.0%
STACK                0      0       0      0.0%
DATA                 0      0     112      0.0%


Microchip Technology PIC18 Macro Assembler V3.10 build 20250813170317 
Symbol Table                                                                                   Fri Sep 26 11:57:58 2025

                      l73 1554                        l82 1340                        l91 1370  
                      l83 1330                        l76 1534                        l93 137E  
                      l85 133E                        l94 1380                        l86 1360  
                      l87 1350                        l89 135E              ___awdiv@sign 0007  
                     l202 156C                       l131 0948                       l123 08F6  
                     l140 09B8                       l132 098A                       l205 157A  
                     l221 1450                       l109 0D56                       l141 09EA  
                     l125 0904                       l150 0A28                       l134 0998  
                     l126 0920                       l215 100E                       l135 099A  
                     l144 0A02                       l128 092E                       l137 09A8  
                     l129 093A                       l218 131E                       l162 0ADE  
                     l154 0A3A                       l146 0A10                       l138 09AA  
                     l227 12A2                       l164 0AEC                       l148 0A16  
                     l165 0B22                       l167 0B30                       l192 13C4  
                     l184 1398                       l196 13DA                       l188 13AE  
                     l199 13DC                       l631 117C                       l618 10CE  
                     u200 13BE                       u201 13BA                       u210 13D4  
                     u211 13D0                       u400 132E                       u401 132A  
                     u410 133E                       u411 133A                       u180 1392  
                     u420 134E                       u181 138E                       u421 134A  
                     u190 13A8                       u430 135E                       u191 13A4  
                     u431 135A                       u440 136E                       u441 136A  
                     u450 137E                       u451 137A                       u910 1020  
__end_of_mostrar_variable 1556                       u911 101C                       u920 103A  
                     u921 1036                       u930 105E                       u931 105A  
                     u940 107C                       u941 1078                       u950 1098  
                     u951 1094                       u960 10BE                       u961 10BA  
                     u970 10E0                       u971 10DC                       u980 10FA  
                     u981 10F6                       u990 1114                       u991 1110  
                     _abs 148A              ___awmod@sign 0007                       wreg 0FE8  
                    l1103 0F08                      l2001 1008                      l1113 14A4  
                    l2011 0B86                      l2003 0B58                      ?_abs 0008  
                    l1116 14BC                      l1109 1418                      l2021 0BDA  
                    l2013 0B96                      l2005 0B5C                      l2101 08F2  
                    l1311 1432                      l2031 0C2E                      l2023 0BEA  
                    l2015 0BA6                      l2007 0B66                      l2111 0934  
                    l2103 0916                      l1128 1226                      l1241 1392  
                    l1321 1446                      l1313 1434                      l1305 141C  
                    l1065 14EC                      l2041 0C7A                      l2033 0C40  
                    l2025 0BFC                      l2017 0BB8                      l2009 0B76  
                    l2121 09BC                      l2113 0938                      l2105 091A  
                    l1251 13C6                      l1243 139A                      l1323 144E  
                    l1315 143C                      l1307 1428                      l1139 157C  
                    l2051 0CCA                      l2043 0C8A                      l2035 0C50  
                    l2027 0C0C                      l2019 0BC8                      l2131 0A24  
                    l2123 09E8                      l2115 094A                      l2107 091E  
                    l1253 13D4                      l1245 13A8                      l1421 1522  
                    l1413 1514                      l1317 143E                      l1309 142A  
                    l2061 0D08                      l2045 0C9A                      l2053 0CDE  
                    l2037 0C5A                      l2029 0C1E                      l2141 0A6C  
                    l2133 0A48                      l2125 09F8                      l2117 0970  
                    l2109 0930                      l1247 13B0                      l1239 1384  
                    l1431 1530                      l1423 1524                      l1415 1518  
                    l1319 1444                      l2071 0D4C                      l2063 0D18  
                    l2055 0CEE                      l2047 0CAA                      l2039 0C6A  
                    l2151 0AAE                      l2135 0A4C                      l2143 0A70  
                    l2127 09FC                      l2119 0988                      l1249 13BE  
                    l1361 1562                      l1521 12C6                      l1441 134E  
                    l1433 1532                      l1425 152A                      l1417 151E  
                    l2065 0D22                      l2057 0CF4                      l2049 0CBA  
                    l2161 0AD4                      l2153 0AB0                      l2145 0A8C  
                    l2137 0A5A                      l2129 0A00                      l2081 089A  
                    l2073 0886                      l1363 156A                      l1355 1558  
                    l1371 156E                      l1531 12F0                      l1523 12CC  
                    l1515 12A4                      l1443 136E                      l1427 152C  
                    l1419 1520                      l2067 0D32                      l2059 0D02  
                    l2171 0AF4                      l2163 0AD8                      l2155 0AC0  
                    l2147 0A9C                      l2139 0A5E                      l2091 08CC  
                    l2083 08A8                      l2075 088C                      l1357 155A  
                    l1541 130E                      l1533 12F6                      l1525 12D4  
                    l1517 12B0                      l1437 1320                      l1429 152E  
                    l2069 0D3C                      l2181 0B44                      l2173 0B0A  
                    l2165 0ADC                      l2157 0AD0                      l2149 0A9E  
                    l2093 08D0                      l2085 08AE                      l2077 0890  
                    l1359 1560                      l1543 1314                      l1535 12FC  
                    l1527 12DA                      l1519 12B6                      l1439 132E  
                    l2183 0B46                      l2175 0B20                      l2167 0AEE  
                    l2159 0AD2                      l2095 08D4                      l2087 08B8  
                    l2079 0894                      l1545 131A                      l1537 1302  
                    l1529 12EA                      l1801 106E                      l2185 0B48  
                    l2177 0B32                      l2169 0AF2                      l2097 08D8  
                    l2089 08BC                      l1539 1308                      l1811 10A2  
                    l1803 107C                      l2187 0B4A                      l2179 0B42  
                    l2099 08EE                      l1813 10A8                      l1805 1082  
                    l1901 0E54                      l1807 1098                      l1815 10AE  
                    l1831 10EC                      l1823 10D0                      l1911 0EA8  
                    l1903 0E66                      l1817 10BE                      l1809 10A0  
                    l1841 1124                      l1833 10FA                      l1825 10D2  
                    l1913 0EC2                      l1905 0E76                      l1921 0EE6  
                    l1819 10C6                      l1843 1132                      l1851 115C  
                    l1835 1102                      l1827 10E0                      l1907 0E86  
                    l1915 0EC4                      l1931 13F6                      l1781 1012  
                    l1853 116C                      l1845 1148                      l1837 1114  
                    l1829 10E8                      l1861 118E                      l1909 0E96  
                    l1917 0EDA                      l1933 1412                      l1941 14CC  
                    l1951 1232                      l1791 1042                      l1783 1020  
                    l1855 1174                      l1847 1150                      l1839 111C  
                    l1863 119E                      l1927 13DE                      l1943 14D2  
                    l1953 1262                      l1793 1046                      l1785 1028  
                    l1849 1156                      l1873 148A                      l1865 11A8  
                    l1881 0D82                      l1929 13E6                      l1945 14E2  
                    l1937 14BE                      l1971 0F42                      l1963 0F0C  
                    l1955 1266                      l1795 104C                      l1787 102C  
                    l1779 1010                      l1875 1498                      l1867 11C4  
                    l1859 117E                      l1891 0DD2                      l1883 0D8C  
                    l1939 14C6                      l1981 0F84                      l1965 0F1C  
                    l1973 0F4C                      l1949 1228                      l1797 105E  
                    l1789 103A                      l1869 11F6                      l1893 0DEA  
                    l1885 0D90                      l1877 0D58                      l1957 1536  
                    l1991 0FC6                      l1975 0F5E                      l1983 0F8E  
                    l1967 0F2E                      l1799 1066                      l1895 0DF4  
                    l1887 0D9A                      l1879 0D7A                      l1959 154A  
                    l1985 0FA0                      l1993 0FD0                      l1977 0F70  
                    l1969 0F34                      l1897 0E0C                      l1889 0DB6  
                    l1995 0FE2                      l1987 0FB2                      l1979 0F76  
                    l1899 0E3A                      l1997 0FF4                      l1989 0FB8  
                    l1999 0FFA                      STR_1 0881                      STR_2 083D  
                    STR_3 082F                      STR_4 086B                      STR_5 0811  
                    STR_6 0801                      STR_7 0820                      STR_8 084A  
                    STR_9 0865                      u1000 1132                      u1001 112E  
                    u1010 1148                      u1011 1144                      u1020 116C  
                    u1100 0DD2                      u1021 1168                      u1101 0DCE  
                    u1030 118E                      u1110 0E08                      u1031 118A  
                    u1111 0E02                      u1200 1292                      u1040 119E  
                    u1120 0E0A                      u1041 119A                      u1210 12A2  
                    u1050 11C4                      u1130 0E66                      u1211 129E  
                    u1051 11C0                      u1131 0E62                      u1220 0F1C  
                    u1060 11F6                      u1140 0E76                      u1300 0BFC  
                    u1221 0F18                      u1061 11F2                      u1141 0E72  
                    u1301 0BF8                      u1230 0F5E                      u1070 1498  
                    u1150 0E86                      u1310 0C1E                      u1231 0F5A  
                    u1207 1288                      u1071 1494                      u1151 0E82  
                    u1311 0C1A                      u1240 0FA0                      u1160 0E96  
                    u1080 0D7A                      u1320 0C40                      u1400 092E  
                    u1241 0F9C                      u1161 0E92                      u1081 0D76  
                    u1321 0C3C                      u1401 092A                      u1250 0FE2  
                    u1170 0ED6                      u1090 0DB6                      u1330 0C6A  
                    u1410 0948                      u1251 0FDE                      u1171 0ED2  
                    u1091 0DB2                      u1331 0C66                      u1411 0944  
                    u1180 1412                      u1340 0C7A                      u1260 0B76  
                    u1500 0A5A                      u1420 0998                      u1181 140E  
                    u1341 0C76                      u1261 0B72                      u1501 0A56  
                    u1421 0994                      _LATA 0F89                      u1190 125E  
                    u1350 0C9A                      u1270 0B96                      u1510 0A6C  
                    u1430 09A8                      _LATB 0F8A                      u1351 0C96  
                    u1271 0B92                      u1511 0A68                      u1431 09A4  
                    _LATC 0F8B                      u1360 0CBA                      u1280 0BB8  
                    u1520 0A8C                      u1440 09B8                      _LATD 0F8C  
                    u1361 0CB6                      u1281 0BB4                      u1521 0A88  
                    u1441 09B4                      _LATE 0F8D                      u1370 0CCA  
                    u1290 0BDA                      u1530 0A9C                      u1450 09F8  
                    u1371 0CC6                      u1291 0BD6                      u1531 0A98  
                    u1451 09F4                      u1540 0AAE                      u1460 0A10  
                    u1380 0904                      u1197 1254                      u1541 0AAA  
                    u1461 0A0C                      u1381 0900                      u1550 0AC0  
                    u1470 0A24                      u1551 0ABC                      u1471 0A20  
                    u1607 08C2                      u1560 0AD0                      u1480 0A36  
                    u1561 0ACC                      u1481 0A32                      u1617 08E2  
                    u1570 0AEC                      u1490 0A48                      u1707 0CFA  
                    u1571 0AE8                      u1491 0A44                      u1627 0954  
                    u1395 090C                      u1580 0B30                      u1717 1436  
                    u1581 0B2C                      u1637 0966                      u1397 090E  
                    u1807 1564                      u1727 1448                      u1647 097C  
                    u1737 0F3A                      u1657 09C6                      u1747 0F7C  
                    u1667 09DC                      u1757 0FBE                      u1677 0AFE  
                    u1597 08A0                      u1767 1000                      u1687 0B14  
                    u1777 12BC                      u1697 0B38                      u1787 12CE  
                    u1797 12E0                      _Stop 0008                      abs@a 0008  
       ?_Lcd_Write_String 0006                      _dbuf 0060                      _main 0886  
                    _prec 0048                      fsr1h 0FE2                      fsr2h 0FDA  
                    indf1 0FE7                      indf2 0FDF                      fsr1l 0FE1  
                    fsr2l 0FD9                      btemp 0001                      start 000E  
      ??_Lcd_Write_String 0008           __end_of_Lcd_Cmd 156E              ___param_bank 0000  
        ??_mostrar_conteo 0041                     ??_abs 000A                     ?_Stop 0002  
                   ?_main 0002           __end_of___awdiv 10D0                     STR_10 0855  
                   STR_11 085E                     STR_12 0871                     STR_13 087E  
                   STR_14 0876                     STR_15 087A           __end_of___awmod 117E  
         ___awdiv@divisor 0004                     i2l114 146C                     i2l115 1462  
                   i2l116 147A                     i2l117 1486           ___awdiv@counter 0006  
            vfpfcnvrt@fmt 000D                     _TRISA 0F92                     _TRISB 0F93  
                   _TRISC 0F94                     _TRISD 0F95                     _TRISE 0F96  
                   _flags 004A                     _negra 0050                     _fputc 117E  
                   btemp0 0001                     btemp1 0002                     _width 0046  
                   _putch 157C                     tablat 0FF5                     status 0FD8  
         __end_of_sprintf 14EE          __end_of_Lcd_Init 1320          __end_of_Lcd_Port 13DE  
         __initialization 14EE              __end_of_Stop 148A              __end_of_main 0B58  
                  ??_Stop 0002                    ??_main 0042             __activetblptr 0002  
                  ?_fputc 0002          ___awdiv@dividend 0002                    ?_putch 0002  
                  i2l1549 1454                 ??_Lcd_Cmd 0003             vfpfcnvrt@done 0010  
           ?_init_maqueta 0002              vfprintf@cfmt 001A                 ??___awdiv 0006  
               ??___awmod 0006                    _blanca 0051                    _escena 004B  
                  clear_0 14F4                    clear_1 1500          ___awdiv@quotient 0008  
         ___awmod@divisor 0004                    isa$std 0001           ___awmod@counter 0006  
                  fputc@c 0002              __mediumconst 0800                    tblptrh 0FF7  
                  tblptrl 0FF6                    tblptru 0FF8                    putch@c 0002  
        __end_of_vfprintf 141A                 ??_sprintf 001F           Lcd_Set_Cursor@a 0006  
         Lcd_Set_Cursor@b 0004           Lcd_Set_Cursor@y 0008           Lcd_Set_Cursor@z 0007  
          ??_init_maqueta 0002                __accesstop 0060   __end_of__initialization 1506  
       __end_of_Lcd_Clear 157C             ___rparam_used 0001    mostrar_variable@buffer 002D  
          __pcstackCOMRAM 0002             __end_of_fputc 1228             __end_of_putch 157E  
          _Lcd_Set_Cursor 0F0A         ?_mostrar_variable 002B        ??_mostrar_variable 002D  
               ?_Lcd_Init 0002                 ?_Lcd_Port 0002                   ??_fputc 0005  
                 ??_putch 0002                __pbssBANK0 0060    __end_of_Lcd_Set_Cursor 1010  
                 i2u60_40 147A                   i2u60_41 1476                   i2u61_45 1482  
                 i2u61_47 1484                   i2u58_45 145C                   i2u58_47 145E  
                 i2u59_45 146A                   i2u59_47 146C                ??_Lcd_Init 0004  
              ??_Lcd_Port 0002            _Lcd_Write_Char 141A                   _Lcd_Cmd 1556  
                 __Hparam 0000                   __Lparam 0000                   ___awdiv 1010  
                 ___awmod 10D0                 ?_vfprintf 0017              __psmallconst 0800  
                 __pcinit 14EE                _init_ports 1514                   __ramtop 0800  
         ?_Lcd_Set_Cursor 0004                   __ptext0 0886                   __ptext1 0B58  
                 __ptext2 1536                   __ptext3 14BE                   __ptext4 13DE  
                 __ptext5 0D58                   __ptext6 117E                   __ptext7 157C  
                 __ptext8 148A                   __ptext9 10D0      __end_of_init_maqueta 1382  
        ___awmod@dividend 0002                   _sprintf 14BE    __end_of_Lcd_Write_Char 1452  
          __pintcode_body 1452      end_of_initialization 1506                   fputc@fp 0004  
           __Lmediumconst 0000                   int_func 1452         __end_of_vfpfcnvrt 0F0A  
                 postdec2 0FDD                   postinc0 0FEE                   postinc1 0FE6  
                 postinc2 0FDE          vfpfcnvrt@convarg 0012                 Lcd_Port@a 0002  
              ??_vfprintf 001A         mostrar_variable@x 002B                 _PORTAbits 0F80  
               _PORTBbits 0F81                 _PORTCbits 0F82                 _PORTEbits 0F84  
               _TRISDbits 0F95                 _TRISEbits 0F96           ?_Lcd_Write_Char 0002  
       Lcd_Write_String@a 0006         Lcd_Write_String@i 000A                 _Lcd_Clear 156E  
             vfpfcnvrt@ap 000E               vfpfcnvrt@cp 0011               vfpfcnvrt@fp 000C  
        _Lcd_Write_String 1228               ?_init_ports 0002       start_initialization 14EE  
             __end_of_abs 14BE               vfprintf@fmt 0018                ?_Lcd_Clear 0002  
         Lcd_Write_Char@a 0005           Lcd_Write_Char@y 0004               __pbssCOMRAM 0046  
                ?_Lcd_Cmd 0002              _init_maqueta 1320          ??_Lcd_Set_Cursor 0005  
               __pintcode 0008                  ?___awdiv 0002                  ?___awmod 0002  
             __smallconst 0800            _mostrar_conteo 0B58                  ?_sprintf 001B  
                _LATAbits 0F89                  _LATCbits 0F8B                  _LATDbits 0F8C  
                _LATEbits 0F8D                  Lcd_Cmd@a 0003               ??_Lcd_Clear 0004  
                _RCONbits 0FD0                 _vfpfcnvrt 0D58    __end_of_mostrar_conteo 0D58  
              _ADCON1bits 0FC1          ??_Lcd_Write_Char 0003                  _Lcd_Init 12A4  
                _Lcd_Port 1382                vfpfcnvrt@c 0016               _INTCON2bits 0FF1  
__end_of_Lcd_Write_String 12A4          _mostrar_variable 1536                  __Hrparam 0000  
              vfprintf@ap 0019                  __Lrparam 0000                vfprintf@fp 0017  
              ?_vfpfcnvrt 000C              ??_init_ports 0002           ?_mostrar_conteo 0002  
                _banderaB 004D                  _banderaM 004C                  _banderaN 004E  
              sprintf@fmt 001C                  __ptext10 1010                  __ptext11 1228  
                __ptext12 141A                  __ptext13 0F0A                  __ptext14 1514  
                __ptext15 1320                  __ptext16 12A4                  __ptext17 156E  
                __ptext18 1556                  __ptext19 1382                  _metalica 004F  
      __end_of_init_ports 1536                  isa$xinst 0000                  int$flags 0001  
                _vfprintf 13DE                  main@giro 0044                _INTCONbits 0FF2  
      Lcd_Write_Char@temp 0003                  intlevel2 0000                 sprintf@ap 001F  
             ??_vfpfcnvrt 000F        Lcd_Set_Cursor@temp 0009                  sprintf@f 0020  
                sprintf@s 001B  
