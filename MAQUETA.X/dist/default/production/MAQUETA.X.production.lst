

Microchip MPLAB XC8 Assembler V3.00 build 20241204225717 
                                                                                               Thu Sep 25 14:55:44 2025

Microchip MPLAB XC8 C Compiler v3.00 (Free license) build 20241204225717 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,space=0,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,space=0,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	text0,global,reloc=2,class=CODE,space=0,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,space=0,delta=1
    12                           	psect	text2,global,reloc=2,class=CODE,space=0,delta=1
    13                           	psect	text3,global,reloc=2,class=CODE,space=0,delta=1,group=3
    14                           	psect	text4,global,reloc=2,class=CODE,space=0,delta=1,group=1
    15                           	psect	text5,global,reloc=2,class=CODE,space=0,delta=1,group=1
    16                           	psect	text6,global,reloc=2,class=CODE,space=0,delta=1,group=3
    17                           	psect	text7,global,reloc=2,class=CODE,space=0,delta=1,group=3
    18                           	psect	text8,global,reloc=2,class=CODE,space=0,delta=1,group=3
    19                           	psect	text9,global,reloc=2,class=CODE,space=0,delta=1,group=2
    20                           	psect	text10,global,reloc=2,class=CODE,space=0,delta=1,group=2
    21                           	psect	text11,global,reloc=2,class=CODE,space=0,delta=1
    22                           	psect	text12,global,reloc=2,class=CODE,space=0,delta=1
    23                           	psect	text13,global,reloc=2,class=CODE,space=0,delta=1
    24                           	psect	text14,global,reloc=2,class=CODE,space=0,delta=1
    25                           	psect	text15,global,reloc=2,class=CODE,space=0,delta=1
    26                           	psect	text16,global,reloc=2,class=CODE,space=0,delta=1
    27                           	psect	text17,global,reloc=2,class=CODE,space=0,delta=1
    28                           	psect	text18,global,reloc=2,class=CODE,space=0,delta=1
    29                           	psect	text19,global,reloc=2,class=CODE,space=0,delta=1
    30                           	psect	text20,global,reloc=2,class=CODE,space=0,delta=1
    31                           	psect	intcodelo,global,reloc=2,class=CODE,space=0,delta=1
    32                           	psect	intcode,global,reloc=2,class=CODE,space=0,delta=1
    33                           	psect	intcode_body,global,reloc=2,class=CODE,space=0,delta=1
    34                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    35                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    36                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1,lowdata
    37                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    38   000000                     
    39                           ; Generated 17/01/2025 GMT
    40                           ; 
    41                           ; Copyright Â© 2025, Microchip Technology Inc. and its subsidiaries ("Microchip")
    42                           ; All rights reserved.
    43                           ; 
    44                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    45                           ; 
    46                           ; Redistribution and use in source and binary forms, with or without modification, are
    47                           ; permitted provided that the following conditions are met:
    48                           ; 
    49                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    50                           ;        conditions and the following disclaimer.
    51                           ; 
    52                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    53                           ;        of conditions and the following disclaimer in the documentation and/or other
    54                           ;        materials provided with the distribution. Publication is not required when
    55                           ;        this file is used in an embedded application.
    56                           ; 
    57                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    58                           ;        software without specific prior written permission.
    59                           ; 
    60                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    61                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    62                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    63                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    64                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    65                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    66                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    67                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    68                           ; 
    69                           ; 
    70                           ; Code-generator required, PIC18F4550 Definitions
    71                           ; 
    72                           ; SFR Addresses
    73   000FE0                     bsr             equ	4064
    74   000FE9                     fsr0            equ	4073
    75   000FEA                     fsr0h           equ	4074
    76   000FE9                     fsr0l           equ	4073
    77   000FE1                     fsr1            equ	4065
    78   000FE2                     fsr1h           equ	4066
    79   000FE1                     fsr1l           equ	4065
    80   000FD9                     fsr2            equ	4057
    81   000FDA                     fsr2h           equ	4058
    82   000FD9                     fsr2l           equ	4057
    83   000FEF                     indf0           equ	4079
    84   000FE7                     indf1           equ	4071
    85   000FDF                     indf2           equ	4063
    86   000FF2                     intcon          equ	4082
    87   000000                     nvmcon          equ	0
    88   000FF9                     pcl             equ	4089
    89   000FFA                     pclath          equ	4090
    90   000FFB                     pclatu          equ	4091
    91   000FEB                     plusw0          equ	4075
    92   000FE3                     plusw1          equ	4067
    93   000FDB                     plusw2          equ	4059
    94   000FED                     postdec0        equ	4077
    95   000FE5                     postdec1        equ	4069
    96   000FDD                     postdec2        equ	4061
    97   000FEE                     postinc0        equ	4078
    98   000FE6                     postinc1        equ	4070
    99   000FDE                     postinc2        equ	4062
   100   000FEC                     preinc0         equ	4076
   101   000FE4                     preinc1         equ	4068
   102   000FDC                     preinc2         equ	4060
   103   000FF3                     prod            equ	4083
   104   000FF4                     prodh           equ	4084
   105   000FF3                     prodl           equ	4083
   106   000FD8                     status          equ	4056
   107   000FF5                     tablat          equ	4085
   108   000FF6                     tblptr          equ	4086
   109   000FF7                     tblptrh         equ	4087
   110   000FF6                     tblptrl         equ	4086
   111   000FF8                     tblptru         equ	4088
   112   000FFD                     tosl            equ	4093
   113   000FE8                     wreg            equ	4072
   114   000F62                     SPPDATA         equ	3938	;# 
   115   000F63                     SPPCFG          equ	3939	;# 
   116   000F64                     SPPEPS          equ	3940	;# 
   117   000F65                     SPPCON          equ	3941	;# 
   118   000F66                     UFRM            equ	3942	;# 
   119   000F66                     UFRML           equ	3942	;# 
   120   000F67                     UFRMH           equ	3943	;# 
   121   000F68                     UIR             equ	3944	;# 
   122   000F69                     UIE             equ	3945	;# 
   123   000F6A                     UEIR            equ	3946	;# 
   124   000F6B                     UEIE            equ	3947	;# 
   125   000F6C                     USTAT           equ	3948	;# 
   126   000F6D                     UCON            equ	3949	;# 
   127   000F6E                     UADDR           equ	3950	;# 
   128   000F6F                     UCFG            equ	3951	;# 
   129   000F70                     UEP0            equ	3952	;# 
   130   000F71                     UEP1            equ	3953	;# 
   131   000F72                     UEP2            equ	3954	;# 
   132   000F73                     UEP3            equ	3955	;# 
   133   000F74                     UEP4            equ	3956	;# 
   134   000F75                     UEP5            equ	3957	;# 
   135   000F76                     UEP6            equ	3958	;# 
   136   000F77                     UEP7            equ	3959	;# 
   137   000F78                     UEP8            equ	3960	;# 
   138   000F79                     UEP9            equ	3961	;# 
   139   000F7A                     UEP10           equ	3962	;# 
   140   000F7B                     UEP11           equ	3963	;# 
   141   000F7C                     UEP12           equ	3964	;# 
   142   000F7D                     UEP13           equ	3965	;# 
   143   000F7E                     UEP14           equ	3966	;# 
   144   000F7F                     UEP15           equ	3967	;# 
   145   000F80                     PORTA           equ	3968	;# 
   146   000F81                     PORTB           equ	3969	;# 
   147   000F82                     PORTC           equ	3970	;# 
   148   000F83                     PORTD           equ	3971	;# 
   149   000F84                     PORTE           equ	3972	;# 
   150   000F89                     LATA            equ	3977	;# 
   151   000F8A                     LATB            equ	3978	;# 
   152   000F8B                     LATC            equ	3979	;# 
   153   000F8C                     LATD            equ	3980	;# 
   154   000F8D                     LATE            equ	3981	;# 
   155   000F92                     TRISA           equ	3986	;# 
   156   000F92                     DDRA            equ	3986	;# 
   157   000F93                     TRISB           equ	3987	;# 
   158   000F93                     DDRB            equ	3987	;# 
   159   000F94                     TRISC           equ	3988	;# 
   160   000F94                     DDRC            equ	3988	;# 
   161   000F95                     TRISD           equ	3989	;# 
   162   000F95                     DDRD            equ	3989	;# 
   163   000F96                     TRISE           equ	3990	;# 
   164   000F96                     DDRE            equ	3990	;# 
   165   000F9B                     OSCTUNE         equ	3995	;# 
   166   000F9D                     PIE1            equ	3997	;# 
   167   000F9E                     PIR1            equ	3998	;# 
   168   000F9F                     IPR1            equ	3999	;# 
   169   000FA0                     PIE2            equ	4000	;# 
   170   000FA1                     PIR2            equ	4001	;# 
   171   000FA2                     IPR2            equ	4002	;# 
   172   000FA6                     EECON1          equ	4006	;# 
   173   000FA7                     EECON2          equ	4007	;# 
   174   000FA8                     EEDATA          equ	4008	;# 
   175   000FA9                     EEADR           equ	4009	;# 
   176   000FAB                     RCSTA           equ	4011	;# 
   177   000FAB                     RCSTA1          equ	4011	;# 
   178   000FAC                     TXSTA           equ	4012	;# 
   179   000FAC                     TXSTA1          equ	4012	;# 
   180   000FAD                     TXREG           equ	4013	;# 
   181   000FAD                     TXREG1          equ	4013	;# 
   182   000FAE                     RCREG           equ	4014	;# 
   183   000FAE                     RCREG1          equ	4014	;# 
   184   000FAF                     SPBRG           equ	4015	;# 
   185   000FAF                     SPBRG1          equ	4015	;# 
   186   000FB0                     SPBRGH          equ	4016	;# 
   187   000FB1                     T3CON           equ	4017	;# 
   188   000FB2                     TMR3            equ	4018	;# 
   189   000FB2                     TMR3L           equ	4018	;# 
   190   000FB3                     TMR3H           equ	4019	;# 
   191   000FB4                     CMCON           equ	4020	;# 
   192   000FB5                     CVRCON          equ	4021	;# 
   193   000FB6                     ECCP1AS         equ	4022	;# 
   194   000FB6                     CCP1AS          equ	4022	;# 
   195   000FB7                     ECCP1DEL        equ	4023	;# 
   196   000FB7                     CCP1DEL         equ	4023	;# 
   197   000FB8                     BAUDCON         equ	4024	;# 
   198   000FB8                     BAUDCTL         equ	4024	;# 
   199   000FBA                     CCP2CON         equ	4026	;# 
   200   000FBB                     CCPR2           equ	4027	;# 
   201   000FBB                     CCPR2L          equ	4027	;# 
   202   000FBC                     CCPR2H          equ	4028	;# 
   203   000FBD                     CCP1CON         equ	4029	;# 
   204   000FBD                     ECCP1CON        equ	4029	;# 
   205   000FBE                     CCPR1           equ	4030	;# 
   206   000FBE                     CCPR1L          equ	4030	;# 
   207   000FBF                     CCPR1H          equ	4031	;# 
   208   000FC0                     ADCON2          equ	4032	;# 
   209   000FC1                     ADCON1          equ	4033	;# 
   210   000FC2                     ADCON0          equ	4034	;# 
   211   000FC3                     ADRES           equ	4035	;# 
   212   000FC3                     ADRESL          equ	4035	;# 
   213   000FC4                     ADRESH          equ	4036	;# 
   214   000FC5                     SSPCON2         equ	4037	;# 
   215   000FC6                     SSPCON1         equ	4038	;# 
   216   000FC7                     SSPSTAT         equ	4039	;# 
   217   000FC8                     SSPADD          equ	4040	;# 
   218   000FC9                     SSPBUF          equ	4041	;# 
   219   000FCA                     T2CON           equ	4042	;# 
   220   000FCB                     PR2             equ	4043	;# 
   221   000FCB                     MEMCON          equ	4043	;# 
   222   000FCC                     TMR2            equ	4044	;# 
   223   000FCD                     T1CON           equ	4045	;# 
   224   000FCE                     TMR1            equ	4046	;# 
   225   000FCE                     TMR1L           equ	4046	;# 
   226   000FCF                     TMR1H           equ	4047	;# 
   227   000FD0                     RCON            equ	4048	;# 
   228   000FD1                     WDTCON          equ	4049	;# 
   229   000FD2                     HLVDCON         equ	4050	;# 
   230   000FD2                     LVDCON          equ	4050	;# 
   231   000FD3                     OSCCON          equ	4051	;# 
   232   000FD5                     T0CON           equ	4053	;# 
   233   000FD6                     TMR0            equ	4054	;# 
   234   000FD6                     TMR0L           equ	4054	;# 
   235   000FD7                     TMR0H           equ	4055	;# 
   236   000FD8                     STATUS          equ	4056	;# 
   237   000FD9                     FSR2            equ	4057	;# 
   238   000FD9                     FSR2L           equ	4057	;# 
   239   000FDA                     FSR2H           equ	4058	;# 
   240   000FDB                     PLUSW2          equ	4059	;# 
   241   000FDC                     PREINC2         equ	4060	;# 
   242   000FDD                     POSTDEC2        equ	4061	;# 
   243   000FDE                     POSTINC2        equ	4062	;# 
   244   000FDF                     INDF2           equ	4063	;# 
   245   000FE0                     BSR             equ	4064	;# 
   246   000FE1                     FSR1            equ	4065	;# 
   247   000FE1                     FSR1L           equ	4065	;# 
   248   000FE2                     FSR1H           equ	4066	;# 
   249   000FE3                     PLUSW1          equ	4067	;# 
   250   000FE4                     PREINC1         equ	4068	;# 
   251   000FE5                     POSTDEC1        equ	4069	;# 
   252   000FE6                     POSTINC1        equ	4070	;# 
   253   000FE7                     INDF1           equ	4071	;# 
   254   000FE8                     WREG            equ	4072	;# 
   255   000FE9                     FSR0            equ	4073	;# 
   256   000FE9                     FSR0L           equ	4073	;# 
   257   000FEA                     FSR0H           equ	4074	;# 
   258   000FEB                     PLUSW0          equ	4075	;# 
   259   000FEC                     PREINC0         equ	4076	;# 
   260   000FED                     POSTDEC0        equ	4077	;# 
   261   000FEE                     POSTINC0        equ	4078	;# 
   262   000FEF                     INDF0           equ	4079	;# 
   263   000FF0                     INTCON3         equ	4080	;# 
   264   000FF1                     INTCON2         equ	4081	;# 
   265   000FF2                     INTCON          equ	4082	;# 
   266   000FF3                     PROD            equ	4083	;# 
   267   000FF3                     PRODL           equ	4083	;# 
   268   000FF4                     PRODH           equ	4084	;# 
   269   000FF5                     TABLAT          equ	4085	;# 
   270   000FF6                     TBLPTR          equ	4086	;# 
   271   000FF6                     TBLPTRL         equ	4086	;# 
   272   000FF7                     TBLPTRH         equ	4087	;# 
   273   000FF8                     TBLPTRU         equ	4088	;# 
   274   000FF9                     PCLAT           equ	4089	;# 
   275   000FF9                     PC              equ	4089	;# 
   276   000FF9                     PCL             equ	4089	;# 
   277   000FFA                     PCLATH          equ	4090	;# 
   278   000FFB                     PCLATU          equ	4091	;# 
   279   000FFC                     STKPTR          equ	4092	;# 
   280   000FFD                     TOS             equ	4093	;# 
   281   000FFD                     TOSL            equ	4093	;# 
   282   000FFE                     TOSH            equ	4094	;# 
   283   000FFF                     TOSU            equ	4095	;# 
   284   000F62                     SPPDATA         equ	3938	;# 
   285   000F63                     SPPCFG          equ	3939	;# 
   286   000F64                     SPPEPS          equ	3940	;# 
   287   000F65                     SPPCON          equ	3941	;# 
   288   000F66                     UFRM            equ	3942	;# 
   289   000F66                     UFRML           equ	3942	;# 
   290   000F67                     UFRMH           equ	3943	;# 
   291   000F68                     UIR             equ	3944	;# 
   292   000F69                     UIE             equ	3945	;# 
   293   000F6A                     UEIR            equ	3946	;# 
   294   000F6B                     UEIE            equ	3947	;# 
   295   000F6C                     USTAT           equ	3948	;# 
   296   000F6D                     UCON            equ	3949	;# 
   297   000F6E                     UADDR           equ	3950	;# 
   298   000F6F                     UCFG            equ	3951	;# 
   299   000F70                     UEP0            equ	3952	;# 
   300   000F71                     UEP1            equ	3953	;# 
   301   000F72                     UEP2            equ	3954	;# 
   302   000F73                     UEP3            equ	3955	;# 
   303   000F74                     UEP4            equ	3956	;# 
   304   000F75                     UEP5            equ	3957	;# 
   305   000F76                     UEP6            equ	3958	;# 
   306   000F77                     UEP7            equ	3959	;# 
   307   000F78                     UEP8            equ	3960	;# 
   308   000F79                     UEP9            equ	3961	;# 
   309   000F7A                     UEP10           equ	3962	;# 
   310   000F7B                     UEP11           equ	3963	;# 
   311   000F7C                     UEP12           equ	3964	;# 
   312   000F7D                     UEP13           equ	3965	;# 
   313   000F7E                     UEP14           equ	3966	;# 
   314   000F7F                     UEP15           equ	3967	;# 
   315   000F80                     PORTA           equ	3968	;# 
   316   000F81                     PORTB           equ	3969	;# 
   317   000F82                     PORTC           equ	3970	;# 
   318   000F83                     PORTD           equ	3971	;# 
   319   000F84                     PORTE           equ	3972	;# 
   320   000F89                     LATA            equ	3977	;# 
   321   000F8A                     LATB            equ	3978	;# 
   322   000F8B                     LATC            equ	3979	;# 
   323   000F8C                     LATD            equ	3980	;# 
   324   000F8D                     LATE            equ	3981	;# 
   325   000F92                     TRISA           equ	3986	;# 
   326   000F92                     DDRA            equ	3986	;# 
   327   000F93                     TRISB           equ	3987	;# 
   328   000F93                     DDRB            equ	3987	;# 
   329   000F94                     TRISC           equ	3988	;# 
   330   000F94                     DDRC            equ	3988	;# 
   331   000F95                     TRISD           equ	3989	;# 
   332   000F95                     DDRD            equ	3989	;# 
   333   000F96                     TRISE           equ	3990	;# 
   334   000F96                     DDRE            equ	3990	;# 
   335   000F9B                     OSCTUNE         equ	3995	;# 
   336   000F9D                     PIE1            equ	3997	;# 
   337   000F9E                     PIR1            equ	3998	;# 
   338   000F9F                     IPR1            equ	3999	;# 
   339   000FA0                     PIE2            equ	4000	;# 
   340   000FA1                     PIR2            equ	4001	;# 
   341   000FA2                     IPR2            equ	4002	;# 
   342   000FA6                     EECON1          equ	4006	;# 
   343   000FA7                     EECON2          equ	4007	;# 
   344   000FA8                     EEDATA          equ	4008	;# 
   345   000FA9                     EEADR           equ	4009	;# 
   346   000FAB                     RCSTA           equ	4011	;# 
   347   000FAB                     RCSTA1          equ	4011	;# 
   348   000FAC                     TXSTA           equ	4012	;# 
   349   000FAC                     TXSTA1          equ	4012	;# 
   350   000FAD                     TXREG           equ	4013	;# 
   351   000FAD                     TXREG1          equ	4013	;# 
   352   000FAE                     RCREG           equ	4014	;# 
   353   000FAE                     RCREG1          equ	4014	;# 
   354   000FAF                     SPBRG           equ	4015	;# 
   355   000FAF                     SPBRG1          equ	4015	;# 
   356   000FB0                     SPBRGH          equ	4016	;# 
   357   000FB1                     T3CON           equ	4017	;# 
   358   000FB2                     TMR3            equ	4018	;# 
   359   000FB2                     TMR3L           equ	4018	;# 
   360   000FB3                     TMR3H           equ	4019	;# 
   361   000FB4                     CMCON           equ	4020	;# 
   362   000FB5                     CVRCON          equ	4021	;# 
   363   000FB6                     ECCP1AS         equ	4022	;# 
   364   000FB6                     CCP1AS          equ	4022	;# 
   365   000FB7                     ECCP1DEL        equ	4023	;# 
   366   000FB7                     CCP1DEL         equ	4023	;# 
   367   000FB8                     BAUDCON         equ	4024	;# 
   368   000FB8                     BAUDCTL         equ	4024	;# 
   369   000FBA                     CCP2CON         equ	4026	;# 
   370   000FBB                     CCPR2           equ	4027	;# 
   371   000FBB                     CCPR2L          equ	4027	;# 
   372   000FBC                     CCPR2H          equ	4028	;# 
   373   000FBD                     CCP1CON         equ	4029	;# 
   374   000FBD                     ECCP1CON        equ	4029	;# 
   375   000FBE                     CCPR1           equ	4030	;# 
   376   000FBE                     CCPR1L          equ	4030	;# 
   377   000FBF                     CCPR1H          equ	4031	;# 
   378   000FC0                     ADCON2          equ	4032	;# 
   379   000FC1                     ADCON1          equ	4033	;# 
   380   000FC2                     ADCON0          equ	4034	;# 
   381   000FC3                     ADRES           equ	4035	;# 
   382   000FC3                     ADRESL          equ	4035	;# 
   383   000FC4                     ADRESH          equ	4036	;# 
   384   000FC5                     SSPCON2         equ	4037	;# 
   385   000FC6                     SSPCON1         equ	4038	;# 
   386   000FC7                     SSPSTAT         equ	4039	;# 
   387   000FC8                     SSPADD          equ	4040	;# 
   388   000FC9                     SSPBUF          equ	4041	;# 
   389   000FCA                     T2CON           equ	4042	;# 
   390   000FCB                     PR2             equ	4043	;# 
   391   000FCB                     MEMCON          equ	4043	;# 
   392   000FCC                     TMR2            equ	4044	;# 
   393   000FCD                     T1CON           equ	4045	;# 
   394   000FCE                     TMR1            equ	4046	;# 
   395   000FCE                     TMR1L           equ	4046	;# 
   396   000FCF                     TMR1H           equ	4047	;# 
   397   000FD0                     RCON            equ	4048	;# 
   398   000FD1                     WDTCON          equ	4049	;# 
   399   000FD2                     HLVDCON         equ	4050	;# 
   400   000FD2                     LVDCON          equ	4050	;# 
   401   000FD3                     OSCCON          equ	4051	;# 
   402   000FD5                     T0CON           equ	4053	;# 
   403   000FD6                     TMR0            equ	4054	;# 
   404   000FD6                     TMR0L           equ	4054	;# 
   405   000FD7                     TMR0H           equ	4055	;# 
   406   000FD8                     STATUS          equ	4056	;# 
   407   000FD9                     FSR2            equ	4057	;# 
   408   000FD9                     FSR2L           equ	4057	;# 
   409   000FDA                     FSR2H           equ	4058	;# 
   410   000FDB                     PLUSW2          equ	4059	;# 
   411   000FDC                     PREINC2         equ	4060	;# 
   412   000FDD                     POSTDEC2        equ	4061	;# 
   413   000FDE                     POSTINC2        equ	4062	;# 
   414   000FDF                     INDF2           equ	4063	;# 
   415   000FE0                     BSR             equ	4064	;# 
   416   000FE1                     FSR1            equ	4065	;# 
   417   000FE1                     FSR1L           equ	4065	;# 
   418   000FE2                     FSR1H           equ	4066	;# 
   419   000FE3                     PLUSW1          equ	4067	;# 
   420   000FE4                     PREINC1         equ	4068	;# 
   421   000FE5                     POSTDEC1        equ	4069	;# 
   422   000FE6                     POSTINC1        equ	4070	;# 
   423   000FE7                     INDF1           equ	4071	;# 
   424   000FE8                     WREG            equ	4072	;# 
   425   000FE9                     FSR0            equ	4073	;# 
   426   000FE9                     FSR0L           equ	4073	;# 
   427   000FEA                     FSR0H           equ	4074	;# 
   428   000FEB                     PLUSW0          equ	4075	;# 
   429   000FEC                     PREINC0         equ	4076	;# 
   430   000FED                     POSTDEC0        equ	4077	;# 
   431   000FEE                     POSTINC0        equ	4078	;# 
   432   000FEF                     INDF0           equ	4079	;# 
   433   000FF0                     INTCON3         equ	4080	;# 
   434   000FF1                     INTCON2         equ	4081	;# 
   435   000FF2                     INTCON          equ	4082	;# 
   436   000FF3                     PROD            equ	4083	;# 
   437   000FF3                     PRODL           equ	4083	;# 
   438   000FF4                     PRODH           equ	4084	;# 
   439   000FF5                     TABLAT          equ	4085	;# 
   440   000FF6                     TBLPTR          equ	4086	;# 
   441   000FF6                     TBLPTRL         equ	4086	;# 
   442   000FF7                     TBLPTRH         equ	4087	;# 
   443   000FF8                     TBLPTRU         equ	4088	;# 
   444   000FF9                     PCLAT           equ	4089	;# 
   445   000FF9                     PC              equ	4089	;# 
   446   000FF9                     PCL             equ	4089	;# 
   447   000FFA                     PCLATH          equ	4090	;# 
   448   000FFB                     PCLATU          equ	4091	;# 
   449   000FFC                     STKPTR          equ	4092	;# 
   450   000FFD                     TOS             equ	4093	;# 
   451   000FFD                     TOSL            equ	4093	;# 
   452   000FFE                     TOSH            equ	4094	;# 
   453   000FFF                     TOSU            equ	4095	;# 
   454   000F95                     _TRISDbits      set	3989
   455   000F96                     _TRISEbits      set	3990
   456   000F8D                     _LATEbits       set	3981
   457   000F82                     _PORTCbits      set	3970
   458   000F81                     _PORTB          set	3969
   459   000F8B                     _LATCbits       set	3979
   460   000F80                     _PORTAbits      set	3968
   461   000F8C                     _LATDbits       set	3980
   462   000F89                     _LATAbits       set	3977
   463   000F81                     _PORTBbits      set	3969
   464   000FF1                     _INTCON2bits    set	4081
   465   000FD0                     _RCONbits       set	4048
   466   000FF2                     _INTCONbits     set	4082
   467   000F94                     _TRISCbits      set	3988
   468   000F94                     _TRISC          set	3988
   469   000F8D                     _LATE           set	3981
   470   000F96                     _TRISE          set	3990
   471   000F95                     _TRISD          set	3989
   472   000F89                     _LATA           set	3977
   473   000F92                     _TRISA          set	3986
   474   000F93                     _TRISB          set	3987
   475   000FC1                     _ADCON1bits     set	4033
   476                           
   477                           	psect	smallconst
   478   000800                     __psmallconst:
   479                           	callstack 0
   480   000800  00                 	db	0
   481   000801                     STR_2:
   482   000801  49                 	db	73	;'I'
   483   000802  6E                 	db	110	;'n'
   484   000803  69                 	db	105	;'i'
   485   000804  63                 	db	99	;'c'
   486   000805  69                 	db	105	;'i'
   487   000806  61                 	db	97	;'a'
   488   000807  6C                 	db	108	;'l'
   489   000808  69                 	db	105	;'i'
   490   000809  7A                 	db	122	;'z'
   491   00080A  61                 	db	97	;'a'
   492   00080B  6E                 	db	110	;'n'
   493   00080C  64                 	db	100	;'d'
   494   00080D  6F                 	db	111	;'o'
   495   00080E  00                 	db	0
   496   00080F                     STR_9:
   497   00080F  4D                 	db	77	;'M'
   498   000810  45                 	db	69	;'E'
   499   000811  54                 	db	84	;'T'
   500   000812  41                 	db	65	;'A'
   501   000813  4C                 	db	76	;'L'
   502   000814  49                 	db	73	;'I'
   503   000815  43                 	db	67	;'C'
   504   000816  41                 	db	65	;'A'
   505   000817  00                 	db	0
   506   000818                     STR_10:
   507   000818  42                 	db	66	;'B'
   508   000819  4C                 	db	76	;'L'
   509   00081A  41                 	db	65	;'A'
   510   00081B  4E                 	db	78	;'N'
   511   00081C  43                 	db	67	;'C'
   512   00081D  41                 	db	65	;'A'
   513   00081E  00                 	db	0
   514   00081F                     STR_8:
   515   00081F  4E                 	db	78	;'N'
   516   000820  45                 	db	69	;'E'
   517   000821  47                 	db	71	;'G'
   518   000822  52                 	db	82	;'R'
   519   000823  41                 	db	65	;'A'
   520   000824  00                 	db	0
   521   000825                     STR_4:
   522   000825  43                 	db	67	;'C'
   523   000826  49                 	db	73	;'I'
   524   000827  4E                 	db	78	;'N'
   525   000828  54                 	db	84	;'T'
   526   000829  41                 	db	65	;'A'
   527   00082A  00                 	db	0
   528   00082B                     STR_5:
   529   00082B  50                 	db	80	;'P'
   530   00082C  49                 	db	73	;'I'
   531   00082D  4E                 	db	78	;'N'
   532   00082E  5A                 	db	90	;'Z'
   533   00082F  41                 	db	65	;'A'
   534   000830  00                 	db	0
   535   000831                     STR_6:
   536   000831  50                 	db	80	;'P'
   537   000832  4C                 	db	76	;'L'
   538   000833  41                 	db	65	;'A'
   539   000834  54                 	db	84	;'T'
   540   000835  4F                 	db	79	;'O'
   541   000836  00                 	db	0
   542   000837                     STR_3:
   543   000837  53                 	db	83	;'S'
   544   000838  54                 	db	84	;'T'
   545   000839  41                 	db	65	;'A'
   546   00083A  52                 	db	82	;'R'
   547   00083B  54                 	db	84	;'T'
   548   00083C  00                 	db	0
   549   00083D                     STR_11:
   550   00083D  4E                 	db	78	;'N'
   551   00083E  41                 	db	65	;'A'
   552   00083F  44                 	db	68	;'D'
   553   000840  41                 	db	65	;'A'
   554   000841  00                 	db	0
   555   000842                     STR_13:
   556   000842  20                 	db	32
   557   000843  42                 	db	66	;'B'
   558   000844  3A                 	db	58	;':'
   559   000845  00                 	db	0
   560   000846                     STR_14:
   561   000846  20                 	db	32
   562   000847  4E                 	db	78	;'N'
   563   000848  3A                 	db	58	;':'
   564   000849  00                 	db	0
   565   00084A                     STR_12:
   566   00084A  4D                 	db	77	;'M'
   567   00084B  3A                 	db	58	;':'
   568   00084C  00                 	db	0
   569   00084D                     STR_1:
   570   00084D  25                 	db	37
   571   00084E  64                 	db	100	;'d'
   572   00084F  00                 	db	0
   573   000825                     STR_7           equ	STR_4
   574   000850  00                 	db	0	; dummy byte at the end
   575   000800                     __smallconst    set	__psmallconst
   576   000800                     __mediumconst   set	__psmallconst
   577   000002                     __activetblptr  equ	2
   578                           
   579                           ; #config settings
   580                           
   581                           	psect	cinit
   582   0013EA                     __pcinit:
   583                           	callstack 0
   584   0013EA                     start_initialization:
   585                           	callstack 0
   586   0013EA                     __initialization:
   587                           	callstack 0
   588                           
   589                           ; Clear objects allocated to BANK0 (32 bytes)
   590   0013EA  EE00  F060         	lfsr	0,__pbssBANK0
   591   0013EE  0E20               	movlw	32
   592   0013F0                     clear_0:
   593   0013F0  6AEE               	clrf	postinc0,c
   594   0013F2  06E8               	decf	wreg,f,c
   595   0013F4  E1FD               	bnz	clear_0
   596                           
   597                           ; Clear objects allocated to COMRAM (12 bytes)
   598   0013F6  EE00  F046         	lfsr	0,__pbssCOMRAM
   599   0013FA  0E0C               	movlw	12
   600   0013FC                     clear_1:
   601   0013FC  6AEE               	clrf	postinc0,c
   602   0013FE  06E8               	decf	wreg,f,c
   603   001400  E1FD               	bnz	clear_1
   604   001402                     end_of_initialization:
   605                           	callstack 0
   606   001402                     __end_of__initialization:
   607                           	callstack 0
   608   001402  9052               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   609   001404  9252               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   610   001406  0E00               	movlw	low (__Lmediumconst shr (0+16))
   611   001408  6EF8               	movwf	tblptru,c
   612   00140A  0100               	movlb	0
   613   00140C  EF29  F004         	goto	_main	;jump to C main() function
   614                           
   615                           	psect	bssCOMRAM
   616   000046                     __pbssCOMRAM:
   617                           	callstack 0
   618   000046                     _width:
   619                           	callstack 0
   620   000046                     	ds	2
   621   000048                     _prec:
   622                           	callstack 0
   623   000048                     	ds	2
   624   00004A                     _flags:
   625                           	callstack 0
   626   00004A                     	ds	1
   627   00004B                     _escena:
   628                           	callstack 0
   629   00004B                     	ds	1
   630   00004C                     _banderaM:
   631                           	callstack 0
   632   00004C                     	ds	1
   633   00004D                     _banderaB:
   634                           	callstack 0
   635   00004D                     	ds	1
   636   00004E                     _banderaN:
   637                           	callstack 0
   638   00004E                     	ds	1
   639   00004F                     _metalica:
   640                           	callstack 0
   641   00004F                     	ds	1
   642   000050                     _negra:
   643                           	callstack 0
   644   000050                     	ds	1
   645   000051                     _blanca:
   646                           	callstack 0
   647   000051                     	ds	1
   648                           
   649                           	psect	bssBANK0
   650   000060                     __pbssBANK0:
   651                           	callstack 0
   652   000060                     _dbuf:
   653                           	callstack 0
   654   000060                     	ds	32
   655                           
   656                           	psect	cstackCOMRAM
   657   000001                     __pcstackCOMRAM:
   658                           	callstack 0
   659   000001                     ??_LowISR:
   660                           
   661                           ; 1 bytes @ 0x0
   662   000001                     	ds	1
   663   000002                     LowISR@dummy:
   664                           	callstack 0
   665                           
   666                           ; 1 bytes @ 0x1
   667   000002                     	ds	1
   668   000003                     ?___awdiv:
   669                           	callstack 0
   670   000003                     ?___awmod:
   671                           	callstack 0
   672   000003                     Lcd_Port@a:
   673                           	callstack 0
   674   000003                     ___awdiv@dividend:
   675                           	callstack 0
   676   000003                     ___awmod@dividend:
   677                           	callstack 0
   678   000003                     fputc@c:
   679                           	callstack 0
   680   000003                     
   681                           ; 1 bytes @ 0x2
   682   000003                     	ds	1
   683   000004                     Lcd_Write_Char@temp:
   684                           	callstack 0
   685   000004                     ??_Lcd_Cmd:
   686   000004                     
   687                           ; 1 bytes @ 0x3
   688   000004                     	ds	1
   689   000005                     Lcd_Cmd@a:
   690                           	callstack 0
   691   000005                     Lcd_Write_Char@y:
   692                           	callstack 0
   693   000005                     fputc@fp:
   694                           	callstack 0
   695   000005                     ___awdiv@divisor:
   696                           	callstack 0
   697   000005                     ___awmod@divisor:
   698                           	callstack 0
   699                           
   700                           ; 2 bytes @ 0x4
   701   000005                     	ds	1
   702   000006                     Lcd_Set_Cursor@b:
   703                           	callstack 0
   704   000006                     Lcd_Write_Char@a:
   705                           	callstack 0
   706   000006                     ??_Lcd_Init:
   707   000006                     ??_fputc:
   708                           
   709                           ; 1 bytes @ 0x5
   710   000006                     	ds	1
   711   000007                     Lcd_Set_Cursor@a:
   712                           	callstack 0
   713   000007                     ___awdiv@counter:
   714                           	callstack 0
   715   000007                     ___awmod@counter:
   716                           	callstack 0
   717   000007                     Lcd_Write_String@a:
   718                           	callstack 0
   719   000007                     
   720                           ; 1 bytes @ 0x6
   721   000007                     	ds	1
   722   000008                     Lcd_Set_Cursor@z:
   723                           	callstack 0
   724   000008                     ___awdiv@sign:
   725                           	callstack 0
   726   000008                     ___awmod@sign:
   727                           	callstack 0
   728                           
   729                           ; 1 bytes @ 0x7
   730   000008                     	ds	1
   731   000009                     ?_abs:
   732                           	callstack 0
   733   000009                     Lcd_Set_Cursor@y:
   734                           	callstack 0
   735   000009                     ___awdiv@quotient:
   736                           	callstack 0
   737   000009                     abs@a:
   738                           	callstack 0
   739   000009                     ??_Lcd_Write_String:
   740                           
   741                           ; 1 bytes @ 0x8
   742   000009                     	ds	1
   743   00000A                     Lcd_Set_Cursor@temp:
   744                           	callstack 0
   745                           
   746                           ; 1 bytes @ 0x9
   747   00000A                     	ds	1
   748   00000B                     Lcd_Write_String@i:
   749                           	callstack 0
   750   00000B                     ??_abs:
   751                           
   752                           ; 1 bytes @ 0xA
   753   00000B                     	ds	2
   754   00000D                     vfpfcnvrt@fp:
   755                           	callstack 0
   756                           
   757                           ; 1 bytes @ 0xC
   758   00000D                     	ds	1
   759   00000E                     vfpfcnvrt@fmt:
   760                           	callstack 0
   761                           
   762                           ; 1 bytes @ 0xD
   763   00000E                     	ds	1
   764   00000F                     vfpfcnvrt@ap:
   765                           	callstack 0
   766                           
   767                           ; 1 bytes @ 0xE
   768   00000F                     	ds	1
   769   000010                     ??_vfpfcnvrt:
   770                           
   771                           ; 1 bytes @ 0xF
   772   000010                     	ds	1
   773   000011                     vfpfcnvrt@done:
   774                           	callstack 0
   775                           
   776                           ; 1 bytes @ 0x10
   777   000011                     	ds	1
   778   000012                     vfpfcnvrt@cp:
   779                           	callstack 0
   780                           
   781                           ; 1 bytes @ 0x11
   782   000012                     	ds	1
   783   000013                     vfpfcnvrt@convarg:
   784                           	callstack 0
   785                           
   786                           ; 4 bytes @ 0x12
   787   000013                     	ds	4
   788   000017                     vfpfcnvrt@c:
   789                           	callstack 0
   790                           
   791                           ; 1 bytes @ 0x16
   792   000017                     	ds	1
   793   000018                     ?_vfprintf:
   794                           	callstack 0
   795   000018                     vfprintf@fp:
   796                           	callstack 0
   797                           
   798                           ; 1 bytes @ 0x17
   799   000018                     	ds	1
   800   000019                     vfprintf@fmt:
   801                           	callstack 0
   802                           
   803                           ; 1 bytes @ 0x18
   804   000019                     	ds	1
   805   00001A                     vfprintf@ap:
   806                           	callstack 0
   807                           
   808                           ; 1 bytes @ 0x19
   809   00001A                     	ds	1
   810   00001B                     vfprintf@cfmt:
   811                           	callstack 0
   812   00001B                     
   813                           ; 1 bytes @ 0x1A
   814   00001B                     	ds	1
   815   00001C                     ?_sprintf:
   816                           	callstack 0
   817   00001C                     sprintf@s:
   818                           	callstack 0
   819                           
   820                           ; 1 bytes @ 0x1B
   821   00001C                     	ds	1
   822   00001D                     sprintf@fmt:
   823                           	callstack 0
   824                           
   825                           ; 1 bytes @ 0x1C
   826   00001D                     	ds	3
   827   000020                     sprintf@ap:
   828                           	callstack 0
   829   000020                     
   830                           ; 1 bytes @ 0x1F
   831   000020                     	ds	1
   832   000021                     sprintf@f:
   833                           	callstack 0
   834                           
   835                           ; 11 bytes @ 0x20
   836   000021                     	ds	11
   837   00002C                     mostrar_variable@x:
   838                           	callstack 0
   839                           
   840                           ; 2 bytes @ 0x2B
   841   00002C                     	ds	2
   842   00002E                     mostrar_variable@buffer:
   843                           	callstack 0
   844   00002E                     
   845                           ; 1 bytes @ 0x2D
   846   00002E                     	ds	20
   847   000042                     ??_main:
   848                           
   849                           ; 1 bytes @ 0x41
   850   000042                     	ds	2
   851   000044                     main@giro:
   852                           	callstack 0
   853                           
   854                           ; 2 bytes @ 0x43
   855   000044                     	ds	2
   856                           
   857 ;;
   858 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   859 ;;
   860 ;; *************** function _main *****************
   861 ;; Defined at:
   862 ;;		line 145 in file "Cinta.c"
   863 ;; Parameters:    Size  Location     Type
   864 ;;		None
   865 ;; Auto vars:     Size  Location     Type
   866 ;;  giro            2   67[COMRAM] int 
   867 ;; Return value:  Size  Location     Type
   868 ;;                  1    wreg      void 
   869 ;; Registers used:
   870 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   871 ;; Tracked objects:
   872 ;;		On entry : 0/0
   873 ;;		On exit  : 0/0
   874 ;;		Unchanged: 0/0
   875 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   876 ;;      Params:         0       0       0       0       0       0       0       0       0
   877 ;;      Locals:         2       0       0       0       0       0       0       0       0
   878 ;;      Temps:          2       0       0       0       0       0       0       0       0
   879 ;;      Totals:         4       0       0       0       0       0       0       0       0
   880 ;;Total ram usage:        4 bytes
   881 ;; Hardware stack levels required when called: 9
   882 ;; This function calls:
   883 ;;		_Lcd_Cmd
   884 ;;		_Lcd_Init
   885 ;;		_Lcd_Set_Cursor
   886 ;;		_init_int
   887 ;;		_init_maqueta
   888 ;;		_init_ports
   889 ;;		_mostrar_conteo
   890 ;; This function is called by:
   891 ;;		Startup code after reset
   892 ;; This function uses a non-reentrant model
   893 ;;
   894                           
   895                           	psect	text0
   896   000852                     __ptext0:
   897                           	callstack 0
   898   000852                     _main:
   899                           	callstack 22
   900   000852                     
   901                           ;Cinta.c: 146:     int giro=0;
   902   000852  0E00               	movlw	0
   903   000854  6E45               	movwf	(main@giro+1)^0,c
   904   000856  0E00               	movlw	0
   905   000858  6E44               	movwf	main@giro^0,c
   906   00085A                     
   907                           ;Cinta.c: 147:     init_int();
   908   00085A  EC34  F00A         	call	_init_int	;wreg free
   909                           
   910                           ;Cinta.c: 148:     init_ports();
   911   00085E  EC28  F00A         	call	_init_ports	;wreg free
   912                           
   913                           ;Cinta.c: 149:     Lcd_Init();
   914   000862  ECA7  F008         	call	_Lcd_Init	;wreg free
   915                           
   916                           ;Cinta.c: 150:     Lcd_Cmd(0x00);
   917   000866  0E00               	movlw	0
   918   000868  EC18  F00A         	call	_Lcd_Cmd
   919   00086C                     
   920                           ;Cinta.c: 151:     _delay((unsigned long)((10)*(4000000/4000.0)));
   921   00086C  0E0D               	movlw	13
   922   00086E  6E42               	movwf	??_main^0,c
   923   000870  0EFC               	movlw	252
   924   000872                     u1547:
   925   000872  2EE8               	decfsz	wreg,f,c
   926   000874  D7FE               	bra	u1547
   927   000876  2E42               	decfsz	??_main^0,f,c
   928   000878  D7FC               	bra	u1547
   929   00087A                     
   930                           ;Cinta.c: 152:     Lcd_Cmd(0x0E);
   931   00087A  0E0E               	movlw	14
   932   00087C  EC18  F00A         	call	_Lcd_Cmd
   933   000880                     
   934                           ;Cinta.c: 153:     Lcd_Set_Cursor(1,1);
   935   000880  0E01               	movlw	1
   936   000882  6E06               	movwf	Lcd_Set_Cursor@b^0,c
   937   000884  0E01               	movlw	1
   938   000886  EC31  F007         	call	_Lcd_Set_Cursor
   939   00088A                     
   940                           ;Cinta.c: 154:     escena=1;
   941   00088A  0E01               	movlw	1
   942   00088C  6E4B               	movwf	_escena^0,c
   943   00088E                     
   944                           ;Cinta.c: 155:     mostrar_conteo();
   945   00088E  EC6C  F005         	call	_mostrar_conteo	;wreg free
   946   000892                     
   947                           ;Cinta.c: 156:     init_maqueta();
   948   000892  EC27  F009         	call	_init_maqueta	;wreg free
   949   000896                     
   950                           ;Cinta.c: 157:     _delay((unsigned long)((1000)*(4000000/4000.0)));
   951   000896  0E06               	movlw	6
   952   000898  6E43               	movwf	(??_main+1)^0,c
   953   00089A  0E13               	movlw	19
   954   00089C  6E42               	movwf	??_main^0,c
   955   00089E  0EAE               	movlw	174
   956   0008A0                     u1557:
   957   0008A0  2EE8               	decfsz	wreg,f,c
   958   0008A2  D7FE               	bra	u1557
   959   0008A4  2E42               	decfsz	??_main^0,f,c
   960   0008A6  D7FC               	bra	u1557
   961   0008A8  2E43               	decfsz	(??_main+1)^0,f,c
   962   0008AA  D7FA               	bra	u1557
   963   0008AC                     
   964                           ;Cinta.c: 158:     escena=2;
   965   0008AC  0E02               	movlw	2
   966   0008AE  6E4B               	movwf	_escena^0,c
   967   0008B0                     
   968                           ;Cinta.c: 159:     mostrar_conteo();
   969   0008B0  EC6C  F005         	call	_mostrar_conteo	;wreg free
   970   0008B4                     l120:
   971   0008B4  A081               	btfss	129,0,c	;volatile
   972   0008B6  EF5F  F004         	goto	u1331
   973   0008BA  EF61  F004         	goto	u1330
   974   0008BE                     u1331:
   975   0008BE  EF5A  F004         	goto	l120
   976   0008C2                     u1330:
   977   0008C2                     
   978                           ;Cinta.c: 162:     LATDbits.LATD0=1;
   979   0008C2  808C               	bsf	140,0,c	;volatile
   980   0008C4                     
   981                           ;Cinta.c: 163:     escena=3;
   982   0008C4  0E03               	movlw	3
   983   0008C6  6E4B               	movwf	_escena^0,c
   984   0008C8                     
   985                           ;Cinta.c: 164:     mostrar_conteo();
   986   0008C8  EC6C  F005         	call	_mostrar_conteo	;wreg free
   987   0008CC                     l123:
   988   0008CC  AE82               	btfss	130,7,c	;volatile
   989   0008CE  EF6B  F004         	goto	u1341
   990   0008D2  EF6D  F004         	goto	u1340
   991   0008D6                     u1341:
   992   0008D6  EF66  F004         	goto	l123
   993   0008DA                     u1340:
   994   0008DA                     
   995                           ;Cinta.c: 166:     escena=4;
   996   0008DA  0E04               	movlw	4
   997   0008DC  6E4B               	movwf	_escena^0,c
   998   0008DE                     
   999                           ;Cinta.c: 167:     mostrar_conteo();
  1000   0008DE  EC6C  F005         	call	_mostrar_conteo	;wreg free
  1001   0008E2                     
  1002                           ;Cinta.c: 168:     LATDbits.LATD0=0;
  1003   0008E2  908C               	bcf	140,0,c	;volatile
  1004   0008E4                     
  1005                           ;Cinta.c: 169:     LATDbits.LATD2=1;
  1006   0008E4  848C               	bsf	140,2,c	;volatile
  1007   0008E6                     l126:
  1008   0008E6  B481               	btfsc	129,2,c	;volatile
  1009   0008E8  EF78  F004         	goto	u1351
  1010   0008EC  EF7A  F004         	goto	u1350
  1011   0008F0                     u1351:
  1012   0008F0  EF73  F004         	goto	l126
  1013   0008F4                     u1350:
  1014   0008F4                     
  1015                           ;Cinta.c: 171:     LATDbits.LATD2=0;
  1016   0008F4  948C               	bcf	140,2,c	;volatile
  1017   0008F6                     
  1018                           ;Cinta.c: 172:     _delay((unsigned long)((1500)*(4000000/4000.0)));
  1019   0008F6  0E08               	movlw	8
  1020   0008F8  6E43               	movwf	(??_main+1)^0,c
  1021   0008FA  0E9D               	movlw	157
  1022   0008FC  6E42               	movwf	??_main^0,c
  1023   0008FE  0E06               	movlw	6
  1024   000900                     u1567:
  1025   000900  2EE8               	decfsz	wreg,f,c
  1026   000902  D7FE               	bra	u1567
  1027   000904  2E42               	decfsz	??_main^0,f,c
  1028   000906  D7FC               	bra	u1567
  1029   000908  2E43               	decfsz	(??_main+1)^0,f,c
  1030   00090A  D7FA               	bra	u1567
  1031   00090C                     
  1032                           ;Cinta.c: 173:     LATAbits.LA4=1;
  1033   00090C  8889               	bsf	137,4,c	;volatile
  1034                           
  1035                           ;Cinta.c: 174:     _delay((unsigned long)((1000)*(4000000/4000.0)));
  1036   00090E  0E06               	movlw	6
  1037   000910  6E43               	movwf	(??_main+1)^0,c
  1038   000912  0E13               	movlw	19
  1039   000914  6E42               	movwf	??_main^0,c
  1040   000916  0EAE               	movlw	174
  1041   000918                     u1577:
  1042   000918  2EE8               	decfsz	wreg,f,c
  1043   00091A  D7FE               	bra	u1577
  1044   00091C  2E42               	decfsz	??_main^0,f,c
  1045   00091E  D7FC               	bra	u1577
  1046   000920  2E43               	decfsz	(??_main+1)^0,f,c
  1047   000922  D7FA               	bra	u1577
  1048   000924                     
  1049                           ;Cinta.c: 175:     LATAbits.LA5=1;
  1050   000924  8A89               	bsf	137,5,c	;volatile
  1051   000926                     l129:
  1052   000926  B881               	btfsc	129,4,c	;volatile
  1053   000928  EF98  F004         	goto	u1361
  1054   00092C  EF9A  F004         	goto	u1360
  1055   000930                     u1361:
  1056   000930  EF93  F004         	goto	l129
  1057   000934                     u1360:
  1058   000934                     
  1059                           ;Cinta.c: 177:     LATAbits.LA4=0;
  1060   000934  9889               	bcf	137,4,c	;volatile
  1061   000936                     l132:
  1062   000936  B681               	btfsc	129,3,c	;volatile
  1063   000938  EFA0  F004         	goto	u1371
  1064   00093C  EFA2  F004         	goto	u1370
  1065   000940                     u1371:
  1066   000940  EF9B  F004         	goto	l132
  1067   000944                     u1370:
  1068   000944                     
  1069                           ;Cinta.c: 179:     LATDbits.LATD3=1;
  1070   000944  868C               	bsf	140,3,c	;volatile
  1071   000946                     l135:
  1072   000946  B281               	btfsc	129,1,c	;volatile
  1073   000948  EFA8  F004         	goto	u1381
  1074   00094C  EFAA  F004         	goto	u1380
  1075   000950                     u1381:
  1076   000950  EFA3  F004         	goto	l135
  1077   000954                     u1380:
  1078   000954                     
  1079                           ;Cinta.c: 181:     LATAbits.LA4=1;
  1080   000954  8889               	bsf	137,4,c	;volatile
  1081                           
  1082                           ;Cinta.c: 182:     LATDbits.LATD3=0;
  1083   000956  968C               	bcf	140,3,c	;volatile
  1084   000958                     
  1085                           ;Cinta.c: 183:     _delay((unsigned long)((2000)*(4000000/4000.0)));
  1086   000958  0E0B               	movlw	11
  1087   00095A  6E43               	movwf	(??_main+1)^0,c
  1088   00095C  0E26               	movlw	38
  1089   00095E  6E42               	movwf	??_main^0,c
  1090   000960  0E5E               	movlw	94
  1091   000962                     u1587:
  1092   000962  2EE8               	decfsz	wreg,f,c
  1093   000964  D7FE               	bra	u1587
  1094   000966  2E42               	decfsz	??_main^0,f,c
  1095   000968  D7FC               	bra	u1587
  1096   00096A  2E43               	decfsz	(??_main+1)^0,f,c
  1097   00096C  D7FA               	bra	u1587
  1098   00096E                     
  1099                           ;Cinta.c: 184:     LATAbits.LA5=0;
  1100   00096E  9A89               	bcf	137,5,c	;volatile
  1101   000970                     l138:
  1102   000970  B881               	btfsc	129,4,c	;volatile
  1103   000972  EFBD  F004         	goto	u1391
  1104   000976  EFBF  F004         	goto	u1390
  1105   00097A                     u1391:
  1106   00097A  EFB8  F004         	goto	l138
  1107   00097E                     u1390:
  1108   00097E                     
  1109                           ;Cinta.c: 186:     escena=5;
  1110   00097E  0E05               	movlw	5
  1111   000980  6E4B               	movwf	_escena^0,c
  1112   000982                     
  1113                           ;Cinta.c: 187:     mostrar_conteo();
  1114   000982  EC6C  F005         	call	_mostrar_conteo	;wreg free
  1115   000986                     
  1116                           ;Cinta.c: 188:     LATAbits.LA4=0;
  1117   000986  9889               	bcf	137,4,c	;volatile
  1118   000988                     l141:
  1119   000988  B681               	btfsc	129,3,c	;volatile
  1120   00098A  EFC9  F004         	goto	u1401
  1121   00098E  EFCB  F004         	goto	u1400
  1122   000992                     u1401:
  1123   000992  EFC4  F004         	goto	l141
  1124   000996                     u1400:
  1125   000996                     
  1126                           ;Cinta.c: 190:     LATAbits.LA6=1;
  1127   000996  8C89               	bsf	137,6,c	;volatile
  1128   000998                     
  1129                           ;Cinta.c: 191:     _delay((unsigned long)((50)*(4000000/4000.0)));
  1130   000998  0E41               	movlw	65
  1131   00099A  6E42               	movwf	??_main^0,c
  1132   00099C  0EEE               	movlw	238
  1133   00099E                     u1597:
  1134   00099E  2EE8               	decfsz	wreg,f,c
  1135   0009A0  D7FE               	bra	u1597
  1136   0009A2  2E42               	decfsz	??_main^0,f,c
  1137   0009A4  D7FC               	bra	u1597
  1138   0009A6  D000               	nop2	
  1139                           
  1140                           ;Cinta.c: 192:     while (giro < 2) {
  1141   0009A8  EF06  F005         	goto	l1973
  1142   0009AC                     l146:
  1143   0009AC  AA81               	btfss	129,5,c	;volatile
  1144   0009AE  EFDB  F004         	goto	u1411
  1145   0009B2  EFDD  F004         	goto	u1410
  1146   0009B6                     u1411:
  1147   0009B6  EFD6  F004         	goto	l146
  1148   0009BA                     u1410:
  1149   0009BA                     
  1150                           ;Cinta.c: 195:         if((PORTBbits.RB7==1)&&(PORTAbits.RA1==1)){
  1151   0009BA  AE81               	btfss	129,7,c	;volatile
  1152   0009BC  EFE2  F004         	goto	u1421
  1153   0009C0  EFE4  F004         	goto	u1420
  1154   0009C4                     u1421:
  1155   0009C4  EFED  F004         	goto	l1965
  1156   0009C8                     u1420:
  1157   0009C8  A280               	btfss	128,1,c	;volatile
  1158   0009CA  EFE9  F004         	goto	u1431
  1159   0009CE  EFEB  F004         	goto	u1430
  1160   0009D2                     u1431:
  1161   0009D2  EFED  F004         	goto	l1965
  1162   0009D6                     u1430:
  1163   0009D6                     
  1164                           ;Cinta.c: 196:             banderaN=1;
  1165   0009D6  0E01               	movlw	1
  1166   0009D8  6E4E               	movwf	_banderaN^0,c
  1167   0009DA                     l1965:
  1168                           
  1169                           ;Cinta.c: 199:          if((PORTAbits.RA1==0)&&(PORTBbits.RB7==0)){
  1170   0009DA  B280               	btfsc	128,1,c	;volatile
  1171   0009DC  EFF2  F004         	goto	u1441
  1172   0009E0  EFF4  F004         	goto	u1440
  1173   0009E4                     u1441:
  1174   0009E4  EFFD  F004         	goto	l151
  1175   0009E8                     u1440:
  1176   0009E8  BE81               	btfsc	129,7,c	;volatile
  1177   0009EA  EFF9  F004         	goto	u1451
  1178   0009EE  EFFB  F004         	goto	u1450
  1179   0009F2                     u1451:
  1180   0009F2  EFFD  F004         	goto	l151
  1181   0009F6                     u1450:
  1182   0009F6                     
  1183                           ;Cinta.c: 200:             banderaM=1;
  1184   0009F6  0E01               	movlw	1
  1185   0009F8  6E4C               	movwf	_banderaM^0,c
  1186   0009FA                     l151:
  1187   0009FA  BA81               	btfsc	129,5,c	;volatile
  1188   0009FC  EF02  F005         	goto	u1461
  1189   000A00  EF04  F005         	goto	u1460
  1190   000A04                     u1461:
  1191   000A04  EFFD  F004         	goto	l151
  1192   000A08                     u1460:
  1193   000A08                     
  1194                           ;Cinta.c: 203:         giro++;
  1195   000A08  4A44               	infsnz	main@giro^0,f,c
  1196   000A0A  2A45               	incf	(main@giro+1)^0,f,c
  1197   000A0C                     l1973:
  1198                           
  1199                           ;Cinta.c: 192:     while (giro < 2) {
  1200   000A0C  BE45               	btfsc	(main@giro+1)^0,7,c
  1201   000A0E  EF12  F005         	goto	u1471
  1202   000A12  5045               	movf	(main@giro+1)^0,w,c
  1203   000A14  E109               	bnz	u1470
  1204   000A16  0E02               	movlw	2
  1205   000A18  5C44               	subwf	main@giro^0,w,c
  1206   000A1A  A0D8               	btfss	status,0,c
  1207   000A1C  EF12  F005         	goto	u1471
  1208   000A20  EF14  F005         	goto	u1470
  1209   000A24                     u1471:
  1210   000A24  EFD6  F004         	goto	l146
  1211   000A28                     u1470:
  1212   000A28                     
  1213                           ;Cinta.c: 205:     if(banderaN==1){
  1214   000A28  044E               	decf	_banderaN^0,w,c
  1215   000A2A  A4D8               	btfss	status,2,c
  1216   000A2C  EF1A  F005         	goto	u1481
  1217   000A30  EF1C  F005         	goto	u1480
  1218   000A34                     u1481:
  1219   000A34  EF1D  F005         	goto	l1979
  1220   000A38                     u1480:
  1221   000A38                     
  1222                           ;Cinta.c: 206:         negra++;
  1223   000A38  2A50               	incf	_negra^0,f,c
  1224   000A3A                     l1979:
  1225                           
  1226                           ;Cinta.c: 208:     if(banderaM==1){
  1227   000A3A  044C               	decf	_banderaM^0,w,c
  1228   000A3C  A4D8               	btfss	status,2,c
  1229   000A3E  EF23  F005         	goto	u1491
  1230   000A42  EF25  F005         	goto	u1490
  1231   000A46                     u1491:
  1232   000A46  EF26  F005         	goto	l1983
  1233   000A4A                     u1490:
  1234   000A4A                     
  1235                           ;Cinta.c: 209:         metalica++;
  1236   000A4A  2A4F               	incf	_metalica^0,f,c
  1237   000A4C                     l1983:
  1238                           
  1239                           ;Cinta.c: 211:     if((banderaM==0)&&(banderaN==0)){
  1240   000A4C  504C               	movf	_banderaM^0,w,c
  1241   000A4E  A4D8               	btfss	status,2,c
  1242   000A50  EF2C  F005         	goto	u1501
  1243   000A54  EF2E  F005         	goto	u1500
  1244   000A58                     u1501:
  1245   000A58  EF37  F005         	goto	l1989
  1246   000A5C                     u1500:
  1247   000A5C  504E               	movf	_banderaN^0,w,c
  1248   000A5E  A4D8               	btfss	status,2,c
  1249   000A60  EF34  F005         	goto	u1511
  1250   000A64  EF36  F005         	goto	u1510
  1251   000A68                     u1511:
  1252   000A68  EF37  F005         	goto	l1989
  1253   000A6C                     u1510:
  1254   000A6C                     
  1255                           ;Cinta.c: 212:         blanca++;
  1256   000A6C  2A51               	incf	_blanca^0,f,c
  1257   000A6E                     l1989:
  1258                           
  1259                           ;Cinta.c: 214:      mostrar_conteo();
  1260   000A6E  EC6C  F005         	call	_mostrar_conteo	;wreg free
  1261   000A72                     
  1262                           ;Cinta.c: 215:     LATAbits.LA6=0;
  1263   000A72  9C89               	bcf	137,6,c	;volatile
  1264   000A74                     
  1265                           ;Cinta.c: 216:     LATCbits.LC0=1;
  1266   000A74  808B               	bsf	139,0,c	;volatile
  1267   000A76                     l158:
  1268   000A76  B480               	btfsc	128,2,c	;volatile
  1269   000A78  EF40  F005         	goto	u1521
  1270   000A7C  EF42  F005         	goto	u1520
  1271   000A80                     u1521:
  1272   000A80  EF3B  F005         	goto	l158
  1273   000A84                     u1520:
  1274   000A84                     
  1275                           ;Cinta.c: 218:     LATCbits.LC0=0;
  1276   000A84  908B               	bcf	139,0,c	;volatile
  1277   000A86                     
  1278                           ;Cinta.c: 219:     escena=6;
  1279   000A86  0E06               	movlw	6
  1280   000A88  6E4B               	movwf	_escena^0,c
  1281   000A8A                     
  1282                           ;Cinta.c: 220:     mostrar_conteo();
  1283   000A8A  EC6C  F005         	call	_mostrar_conteo	;wreg free
  1284   000A8E                     
  1285                           ;Cinta.c: 221:     LATCbits.LC6=1;
  1286   000A8E  8C8B               	bsf	139,6,c	;volatile
  1287   000A90                     
  1288                           ;Cinta.c: 222:     _delay((unsigned long)((2000)*(4000000/4000.0)));
  1289   000A90  0E0B               	movlw	11
  1290   000A92  6E43               	movwf	(??_main+1)^0,c
  1291   000A94  0E26               	movlw	38
  1292   000A96  6E42               	movwf	??_main^0,c
  1293   000A98  0E5E               	movlw	94
  1294   000A9A                     u1607:
  1295   000A9A  2EE8               	decfsz	wreg,f,c
  1296   000A9C  D7FE               	bra	u1607
  1297   000A9E  2E42               	decfsz	??_main^0,f,c
  1298   000AA0  D7FC               	bra	u1607
  1299   000AA2  2E43               	decfsz	(??_main+1)^0,f,c
  1300   000AA4  D7FA               	bra	u1607
  1301   000AA6                     
  1302                           ;Cinta.c: 223:     LATCbits.LC1=1;
  1303   000AA6  828B               	bsf	139,1,c	;volatile
  1304   000AA8                     l161:
  1305   000AA8  B680               	btfsc	128,3,c	;volatile
  1306   000AAA  EF59  F005         	goto	u1531
  1307   000AAE  EF5B  F005         	goto	u1530
  1308   000AB2                     u1531:
  1309   000AB2  EF54  F005         	goto	l161
  1310   000AB6                     u1530:
  1311   000AB6                     
  1312                           ;Cinta.c: 225:     LATCbits.LC1=0;
  1313   000AB6  928B               	bcf	139,1,c	;volatile
  1314   000AB8                     
  1315                           ;Cinta.c: 226:     _delay((unsigned long)((500)*(4000000/4000.0)));
  1316   000AB8  0E03               	movlw	3
  1317   000ABA  6E43               	movwf	(??_main+1)^0,c
  1318   000ABC  0E8A               	movlw	138
  1319   000ABE  6E42               	movwf	??_main^0,c
  1320   000AC0  0E56               	movlw	86
  1321   000AC2                     u1617:
  1322   000AC2  2EE8               	decfsz	wreg,f,c
  1323   000AC4  D7FE               	bra	u1617
  1324   000AC6  2E42               	decfsz	??_main^0,f,c
  1325   000AC8  D7FC               	bra	u1617
  1326   000ACA  2E43               	decfsz	(??_main+1)^0,f,c
  1327   000ACC  D7FA               	bra	u1617
  1328   000ACE                     
  1329                           ;Cinta.c: 227:     LATCbits.LC6=0;
  1330   000ACE  9C8B               	bcf	139,6,c	;volatile
  1331   000AD0                     
  1332                           ;Cinta.c: 228:     banderaM=0;
  1333   000AD0  6A4C               	clrf	_banderaM^0,c
  1334   000AD2                     
  1335                           ;Cinta.c: 229:     banderaN=0;
  1336   000AD2  6A4E               	clrf	_banderaN^0,c
  1337   000AD4  EF1D  F000         	goto	start
  1338   000AD8                     __end_of_main:
  1339                           	callstack 0
  1340                           
  1341 ;; *************** function _mostrar_conteo *****************
  1342 ;; Defined at:
  1343 ;;		line 84 in file "Cinta.c"
  1344 ;; Parameters:    Size  Location     Type
  1345 ;;		None
  1346 ;; Auto vars:     Size  Location     Type
  1347 ;;		None
  1348 ;; Return value:  Size  Location     Type
  1349 ;;                  1    wreg      void 
  1350 ;; Registers used:
  1351 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1352 ;; Tracked objects:
  1353 ;;		On entry : 0/0
  1354 ;;		On exit  : 0/0
  1355 ;;		Unchanged: 0/0
  1356 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1357 ;;      Params:         0       0       0       0       0       0       0       0       0
  1358 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1359 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1360 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1361 ;;Total ram usage:        0 bytes
  1362 ;; Hardware stack levels used: 1
  1363 ;; Hardware stack levels required when called: 8
  1364 ;; This function calls:
  1365 ;;		_Lcd_Clear
  1366 ;;		_Lcd_Cmd
  1367 ;;		_Lcd_Set_Cursor
  1368 ;;		_Lcd_Write_String
  1369 ;;		_mostrar_variable
  1370 ;; This function is called by:
  1371 ;;		_main
  1372 ;; This function uses a non-reentrant model
  1373 ;;
  1374                           
  1375                           	psect	text1
  1376   000AD8                     __ptext1:
  1377                           	callstack 0
  1378   000AD8                     _mostrar_conteo:
  1379                           	callstack 22
  1380   000AD8                     
  1381                           ;Cinta.c: 85:     Lcd_Clear();
  1382   000AD8  EC3B  F00A         	call	_Lcd_Clear	;wreg free
  1383   000ADC                     
  1384                           ;Cinta.c: 86:     Lcd_Set_Cursor(1,1);
  1385   000ADC  0E01               	movlw	1
  1386   000ADE  6E06               	movwf	Lcd_Set_Cursor@b^0,c
  1387   000AE0  0E01               	movlw	1
  1388   000AE2  EC31  F007         	call	_Lcd_Set_Cursor
  1389   000AE6                     
  1390                           ;Cinta.c: 87:     if(escena==1){
  1391   000AE6  044B               	decf	_escena^0,w,c
  1392   000AE8  A4D8               	btfss	status,2,c
  1393   000AEA  EF79  F005         	goto	u1221
  1394   000AEE  EF7B  F005         	goto	u1220
  1395   000AF2                     u1221:
  1396   000AF2  EF83  F005         	goto	l1857
  1397   000AF6                     u1220:
  1398   000AF6                     
  1399                           ;Cinta.c: 88:     Lcd_Write_String("Inicializando");
  1400   000AF6  0E01               	movlw	low STR_2
  1401   000AF8  6E07               	movwf	Lcd_Write_String@a^0,c
  1402   000AFA  5007               	movf	Lcd_Write_String@a^0,w,c
  1403   000AFC  A4D8               	btfss	status,2,c
  1404   000AFE  0E08               	movlw	high __smallconst
  1405   000B00  6E08               	movwf	(Lcd_Write_String@a+1)^0,c
  1406   000B02  ECE8  F008         	call	_Lcd_Write_String	;wreg free
  1407   000B06                     l1857:
  1408                           
  1409                           ;Cinta.c: 90:     if(escena==2){
  1410   000B06  0E02               	movlw	2
  1411   000B08  184B               	xorwf	_escena^0,w,c
  1412   000B0A  A4D8               	btfss	status,2,c
  1413   000B0C  EF8A  F005         	goto	u1231
  1414   000B10  EF8C  F005         	goto	u1230
  1415   000B14                     u1231:
  1416   000B14  EF94  F005         	goto	l1861
  1417   000B18                     u1230:
  1418   000B18                     
  1419                           ;Cinta.c: 91:     Lcd_Write_String("START");
  1420   000B18  0E37               	movlw	low STR_3
  1421   000B1A  6E07               	movwf	Lcd_Write_String@a^0,c
  1422   000B1C  5007               	movf	Lcd_Write_String@a^0,w,c
  1423   000B1E  A4D8               	btfss	status,2,c
  1424   000B20  0E08               	movlw	high __smallconst
  1425   000B22  6E08               	movwf	(Lcd_Write_String@a+1)^0,c
  1426   000B24  ECE8  F008         	call	_Lcd_Write_String	;wreg free
  1427   000B28                     l1861:
  1428                           
  1429                           ;Cinta.c: 93:     if(escena==3){
  1430   000B28  0E03               	movlw	3
  1431   000B2A  184B               	xorwf	_escena^0,w,c
  1432   000B2C  A4D8               	btfss	status,2,c
  1433   000B2E  EF9B  F005         	goto	u1241
  1434   000B32  EF9D  F005         	goto	u1240
  1435   000B36                     u1241:
  1436   000B36  EFA5  F005         	goto	l1865
  1437   000B3A                     u1240:
  1438   000B3A                     
  1439                           ;Cinta.c: 94:     Lcd_Write_String("CINTA");
  1440   000B3A  0E25               	movlw	low STR_4
  1441   000B3C  6E07               	movwf	Lcd_Write_String@a^0,c
  1442   000B3E  5007               	movf	Lcd_Write_String@a^0,w,c
  1443   000B40  A4D8               	btfss	status,2,c
  1444   000B42  0E08               	movlw	high __smallconst
  1445   000B44  6E08               	movwf	(Lcd_Write_String@a+1)^0,c
  1446   000B46  ECE8  F008         	call	_Lcd_Write_String	;wreg free
  1447   000B4A                     l1865:
  1448                           
  1449                           ;Cinta.c: 96:     if(escena==4){
  1450   000B4A  0E04               	movlw	4
  1451   000B4C  184B               	xorwf	_escena^0,w,c
  1452   000B4E  A4D8               	btfss	status,2,c
  1453   000B50  EFAC  F005         	goto	u1251
  1454   000B54  EFAE  F005         	goto	u1250
  1455   000B58                     u1251:
  1456   000B58  EFB6  F005         	goto	l1869
  1457   000B5C                     u1250:
  1458   000B5C                     
  1459                           ;Cinta.c: 97:     Lcd_Write_String("PINZA");
  1460   000B5C  0E2B               	movlw	low STR_5
  1461   000B5E  6E07               	movwf	Lcd_Write_String@a^0,c
  1462   000B60  5007               	movf	Lcd_Write_String@a^0,w,c
  1463   000B62  A4D8               	btfss	status,2,c
  1464   000B64  0E08               	movlw	high __smallconst
  1465   000B66  6E08               	movwf	(Lcd_Write_String@a+1)^0,c
  1466   000B68  ECE8  F008         	call	_Lcd_Write_String	;wreg free
  1467   000B6C                     l1869:
  1468                           
  1469                           ;Cinta.c: 99:     if(escena==5){
  1470   000B6C  0E05               	movlw	5
  1471   000B6E  184B               	xorwf	_escena^0,w,c
  1472   000B70  A4D8               	btfss	status,2,c
  1473   000B72  EFBD  F005         	goto	u1261
  1474   000B76  EFBF  F005         	goto	u1260
  1475   000B7A                     u1261:
  1476   000B7A  EFC7  F005         	goto	l1873
  1477   000B7E                     u1260:
  1478   000B7E                     
  1479                           ;Cinta.c: 100:     Lcd_Write_String("PLATO");
  1480   000B7E  0E31               	movlw	low STR_6
  1481   000B80  6E07               	movwf	Lcd_Write_String@a^0,c
  1482   000B82  5007               	movf	Lcd_Write_String@a^0,w,c
  1483   000B84  A4D8               	btfss	status,2,c
  1484   000B86  0E08               	movlw	high __smallconst
  1485   000B88  6E08               	movwf	(Lcd_Write_String@a+1)^0,c
  1486   000B8A  ECE8  F008         	call	_Lcd_Write_String	;wreg free
  1487   000B8E                     l1873:
  1488                           
  1489                           ;Cinta.c: 102:     if(escena==6){
  1490   000B8E  0E06               	movlw	6
  1491   000B90  184B               	xorwf	_escena^0,w,c
  1492   000B92  A4D8               	btfss	status,2,c
  1493   000B94  EFCE  F005         	goto	u1271
  1494   000B98  EFD0  F005         	goto	u1270
  1495   000B9C                     u1271:
  1496   000B9C  EFD8  F005         	goto	l1877
  1497   000BA0                     u1270:
  1498   000BA0                     
  1499                           ;Cinta.c: 103:     Lcd_Write_String("CINTA");
  1500   000BA0  0E25               	movlw	low STR_4
  1501   000BA2  6E07               	movwf	Lcd_Write_String@a^0,c
  1502   000BA4  5007               	movf	Lcd_Write_String@a^0,w,c
  1503   000BA6  A4D8               	btfss	status,2,c
  1504   000BA8  0E08               	movlw	high __smallconst
  1505   000BAA  6E08               	movwf	(Lcd_Write_String@a+1)^0,c
  1506   000BAC  ECE8  F008         	call	_Lcd_Write_String	;wreg free
  1507   000BB0                     l1877:
  1508                           
  1509                           ;Cinta.c: 105:     Lcd_Set_Cursor(2,1);
  1510   000BB0  0E01               	movlw	1
  1511   000BB2  6E06               	movwf	Lcd_Set_Cursor@b^0,c
  1512   000BB4  0E02               	movlw	2
  1513   000BB6  EC31  F007         	call	_Lcd_Set_Cursor
  1514   000BBA                     
  1515                           ;Cinta.c: 106:     if (escena>4){
  1516   000BBA  0E04               	movlw	4
  1517   000BBC  644B               	cpfsgt	_escena^0,c
  1518   000BBE  EFE3  F005         	goto	u1281
  1519   000BC2  EFE5  F005         	goto	u1280
  1520   000BC6                     u1281:
  1521   000BC6  EF1F  F006         	goto	l1895
  1522   000BCA                     u1280:
  1523   000BCA                     
  1524                           ;Cinta.c: 107:     if(banderaN==1){
  1525   000BCA  044E               	decf	_banderaN^0,w,c
  1526   000BCC  A4D8               	btfss	status,2,c
  1527   000BCE  EFEB  F005         	goto	u1291
  1528   000BD2  EFED  F005         	goto	u1290
  1529   000BD6                     u1291:
  1530   000BD6  EFF5  F005         	goto	l1885
  1531   000BDA                     u1290:
  1532   000BDA                     
  1533                           ;Cinta.c: 108:     Lcd_Write_String("NEGRA");
  1534   000BDA  0E1F               	movlw	low STR_8
  1535   000BDC  6E07               	movwf	Lcd_Write_String@a^0,c
  1536   000BDE  5007               	movf	Lcd_Write_String@a^0,w,c
  1537   000BE0  A4D8               	btfss	status,2,c
  1538   000BE2  0E08               	movlw	high __smallconst
  1539   000BE4  6E08               	movwf	(Lcd_Write_String@a+1)^0,c
  1540   000BE6  ECE8  F008         	call	_Lcd_Write_String	;wreg free
  1541   000BEA                     l1885:
  1542                           
  1543                           ;Cinta.c: 110:     if(banderaM==1){
  1544   000BEA  044C               	decf	_banderaM^0,w,c
  1545   000BEC  A4D8               	btfss	status,2,c
  1546   000BEE  EFFB  F005         	goto	u1301
  1547   000BF2  EFFD  F005         	goto	u1300
  1548   000BF6                     u1301:
  1549   000BF6  EF05  F006         	goto	l1889
  1550   000BFA                     u1300:
  1551   000BFA                     
  1552                           ;Cinta.c: 111:      Lcd_Write_String("METALICA");
  1553   000BFA  0E0F               	movlw	low STR_9
  1554   000BFC  6E07               	movwf	Lcd_Write_String@a^0,c
  1555   000BFE  5007               	movf	Lcd_Write_String@a^0,w,c
  1556   000C00  A4D8               	btfss	status,2,c
  1557   000C02  0E08               	movlw	high __smallconst
  1558   000C04  6E08               	movwf	(Lcd_Write_String@a+1)^0,c
  1559   000C06  ECE8  F008         	call	_Lcd_Write_String	;wreg free
  1560   000C0A                     l1889:
  1561                           
  1562                           ;Cinta.c: 113:     if ((banderaM==0)&&(banderaN==0)) {
  1563   000C0A  504C               	movf	_banderaM^0,w,c
  1564   000C0C  A4D8               	btfss	status,2,c
  1565   000C0E  EF0B  F006         	goto	u1311
  1566   000C12  EF0D  F006         	goto	u1310
  1567   000C16                     u1311:
  1568   000C16  EF27  F006         	goto	l1897
  1569   000C1A                     u1310:
  1570   000C1A  504E               	movf	_banderaN^0,w,c
  1571   000C1C  A4D8               	btfss	status,2,c
  1572   000C1E  EF13  F006         	goto	u1321
  1573   000C22  EF15  F006         	goto	u1320
  1574   000C26                     u1321:
  1575   000C26  EF27  F006         	goto	l1897
  1576   000C2A                     u1320:
  1577   000C2A                     
  1578                           ;Cinta.c: 114:       Lcd_Write_String("BLANCA");
  1579   000C2A  0E18               	movlw	low STR_10
  1580   000C2C  6E07               	movwf	Lcd_Write_String@a^0,c
  1581   000C2E  5007               	movf	Lcd_Write_String@a^0,w,c
  1582   000C30  A4D8               	btfss	status,2,c
  1583   000C32  0E08               	movlw	high __smallconst
  1584   000C34  6E08               	movwf	(Lcd_Write_String@a+1)^0,c
  1585   000C36  ECE8  F008         	call	_Lcd_Write_String	;wreg free
  1586   000C3A  EF27  F006         	goto	l1897
  1587   000C3E                     l1895:
  1588                           
  1589                           ;Cinta.c: 118:        Lcd_Write_String("NADA");
  1590   000C3E  0E3D               	movlw	low STR_11
  1591   000C40  6E07               	movwf	Lcd_Write_String@a^0,c
  1592   000C42  5007               	movf	Lcd_Write_String@a^0,w,c
  1593   000C44  A4D8               	btfss	status,2,c
  1594   000C46  0E08               	movlw	high __smallconst
  1595   000C48  6E08               	movwf	(Lcd_Write_String@a+1)^0,c
  1596   000C4A  ECE8  F008         	call	_Lcd_Write_String	;wreg free
  1597   000C4E                     l1897:
  1598                           
  1599                           ;Cinta.c: 120:     Lcd_Cmd(0x09);
  1600   000C4E  0E09               	movlw	9
  1601   000C50  EC18  F00A         	call	_Lcd_Cmd
  1602   000C54                     
  1603                           ;Cinta.c: 121:     Lcd_Cmd(0x00);
  1604   000C54  0E00               	movlw	0
  1605   000C56  EC18  F00A         	call	_Lcd_Cmd
  1606                           
  1607                           ;Cinta.c: 122:     Lcd_Write_String("M:");
  1608   000C5A  0E4A               	movlw	low STR_12
  1609   000C5C  6E07               	movwf	Lcd_Write_String@a^0,c
  1610   000C5E  5007               	movf	Lcd_Write_String@a^0,w,c
  1611   000C60  A4D8               	btfss	status,2,c
  1612   000C62  0E08               	movlw	high __smallconst
  1613   000C64  6E08               	movwf	(Lcd_Write_String@a+1)^0,c
  1614   000C66  ECE8  F008         	call	_Lcd_Write_String	;wreg free
  1615   000C6A                     
  1616                           ;Cinta.c: 123:     mostrar_variable(metalica);
  1617   000C6A  C04F  F02C         	movff	_metalica,mostrar_variable@x
  1618   000C6E  6A2D               	clrf	(mostrar_variable@x+1)^0,c
  1619   000C70  EC08  F00A         	call	_mostrar_variable	;wreg free
  1620   000C74                     
  1621                           ;Cinta.c: 124:     Lcd_Write_String(" B:");
  1622   000C74  0E42               	movlw	low STR_13
  1623   000C76  6E07               	movwf	Lcd_Write_String@a^0,c
  1624   000C78  5007               	movf	Lcd_Write_String@a^0,w,c
  1625   000C7A  A4D8               	btfss	status,2,c
  1626   000C7C  0E08               	movlw	high __smallconst
  1627   000C7E  6E08               	movwf	(Lcd_Write_String@a+1)^0,c
  1628   000C80  ECE8  F008         	call	_Lcd_Write_String	;wreg free
  1629                           
  1630                           ;Cinta.c: 125:     mostrar_variable(blanca);
  1631   000C84  C051  F02C         	movff	_blanca,mostrar_variable@x
  1632   000C88  6A2D               	clrf	(mostrar_variable@x+1)^0,c
  1633   000C8A  EC08  F00A         	call	_mostrar_variable	;wreg free
  1634   000C8E                     
  1635                           ;Cinta.c: 126:     Lcd_Write_String(" N:");
  1636   000C8E  0E46               	movlw	low STR_14
  1637   000C90  6E07               	movwf	Lcd_Write_String@a^0,c
  1638   000C92  5007               	movf	Lcd_Write_String@a^0,w,c
  1639   000C94  A4D8               	btfss	status,2,c
  1640   000C96  0E08               	movlw	high __smallconst
  1641   000C98  6E08               	movwf	(Lcd_Write_String@a+1)^0,c
  1642   000C9A  ECE8  F008         	call	_Lcd_Write_String	;wreg free
  1643   000C9E                     
  1644                           ;Cinta.c: 127:     mostrar_variable(negra);
  1645   000C9E  C050  F02C         	movff	_negra,mostrar_variable@x
  1646   000CA2  6A2D               	clrf	(mostrar_variable@x+1)^0,c
  1647   000CA4  EC08  F00A         	call	_mostrar_variable	;wreg free
  1648   000CA8  0012               	return		;funcret
  1649   000CAA                     __end_of_mostrar_conteo:
  1650                           	callstack 0
  1651                           
  1652 ;; *************** function _mostrar_variable *****************
  1653 ;; Defined at:
  1654 ;;		line 40 in file "Cinta.c"
  1655 ;; Parameters:    Size  Location     Type
  1656 ;;  x               2   43[COMRAM] int 
  1657 ;; Auto vars:     Size  Location     Type
  1658 ;;  buffer         20   45[COMRAM] unsigned char [20]
  1659 ;; Return value:  Size  Location     Type
  1660 ;;                  1    wreg      void 
  1661 ;; Registers used:
  1662 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1663 ;; Tracked objects:
  1664 ;;		On entry : 0/0
  1665 ;;		On exit  : 0/0
  1666 ;;		Unchanged: 0/0
  1667 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1668 ;;      Params:         2       0       0       0       0       0       0       0       0
  1669 ;;      Locals:        20       0       0       0       0       0       0       0       0
  1670 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1671 ;;      Totals:        22       0       0       0       0       0       0       0       0
  1672 ;;Total ram usage:       22 bytes
  1673 ;; Hardware stack levels used: 1
  1674 ;; Hardware stack levels required when called: 7
  1675 ;; This function calls:
  1676 ;;		_Lcd_Write_String
  1677 ;;		_sprintf
  1678 ;; This function is called by:
  1679 ;;		_mostrar_conteo
  1680 ;; This function uses a non-reentrant model
  1681 ;;
  1682                           
  1683                           	psect	text2
  1684   001410                     __ptext2:
  1685                           	callstack 0
  1686   001410                     _mostrar_variable:
  1687                           	callstack 22
  1688   001410                     
  1689                           ;Cinta.c: 41:     char buffer[20];;Cinta.c: 42:      sprintf(buffer,"%d",x);
  1690   001410  0E2E               	movlw	low mostrar_variable@buffer
  1691   001412  6E1C               	movwf	sprintf@s^0,c
  1692   001414  0E4D               	movlw	low STR_1
  1693   001416  6E1D               	movwf	sprintf@fmt^0,c
  1694   001418  C02C  F01E         	movff	mostrar_variable@x,?_sprintf+2
  1695   00141C  C02D  F01F         	movff	mostrar_variable@x+1,?_sprintf+3
  1696   001420  ECC1  F009         	call	_sprintf	;wreg free
  1697   001424                     
  1698                           ;Cinta.c: 43:     Lcd_Write_String(buffer);
  1699   001424  0E2E               	movlw	low mostrar_variable@buffer
  1700   001426  6E07               	movwf	Lcd_Write_String@a^0,c
  1701   001428  6A08               	clrf	(Lcd_Write_String@a+1)^0,c
  1702   00142A  ECE8  F008         	call	_Lcd_Write_String	;wreg free
  1703   00142E  0012               	return		;funcret
  1704   001430                     __end_of_mostrar_variable:
  1705                           	callstack 0
  1706                           
  1707 ;; *************** function _sprintf *****************
  1708 ;; Defined at:
  1709 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\nf_sprintf.c"
  1710 ;; Parameters:    Size  Location     Type
  1711 ;;  s               1   27[COMRAM] PTR unsigned char 
  1712 ;;		 -> mostrar_variable@buffer(20), 
  1713 ;;  fmt             1   28[COMRAM] PTR const unsigned char 
  1714 ;;		 -> STR_1(3), 
  1715 ;; Auto vars:     Size  Location     Type
  1716 ;;  f              11   32[COMRAM] struct _IO_FILE
  1717 ;;  ret             2    0        int 
  1718 ;;  ap              1   31[COMRAM] PTR void [1]
  1719 ;;		 -> ?_sprintf(2), 
  1720 ;; Return value:  Size  Location     Type
  1721 ;;                  2   27[COMRAM] int 
  1722 ;; Registers used:
  1723 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1724 ;; Tracked objects:
  1725 ;;		On entry : 0/0
  1726 ;;		On exit  : 0/0
  1727 ;;		Unchanged: 0/0
  1728 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1729 ;;      Params:         4       0       0       0       0       0       0       0       0
  1730 ;;      Locals:        12       0       0       0       0       0       0       0       0
  1731 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1732 ;;      Totals:        16       0       0       0       0       0       0       0       0
  1733 ;;Total ram usage:       16 bytes
  1734 ;; Hardware stack levels used: 1
  1735 ;; Hardware stack levels required when called: 6
  1736 ;; This function calls:
  1737 ;;		_vfprintf
  1738 ;; This function is called by:
  1739 ;;		_mostrar_variable
  1740 ;; This function uses a non-reentrant model
  1741 ;;
  1742                           
  1743                           	psect	text3
  1744   001382                     __ptext3:
  1745                           	callstack 0
  1746   001382                     _sprintf:
  1747                           	callstack 22
  1748   001382  0E1E               	movlw	low (?_sprintf+2)
  1749   001384  6E20               	movwf	sprintf@ap^0,c
  1750   001386  C01C  F021         	movff	sprintf@s,sprintf@f
  1751   00138A  0E00               	movlw	0
  1752   00138C  6E24               	movwf	(sprintf@f+3)^0,c
  1753   00138E  0E00               	movlw	0
  1754   001390  6E23               	movwf	(sprintf@f+2)^0,c
  1755   001392  0E00               	movlw	0
  1756   001394  6E2B               	movwf	(sprintf@f+10)^0,c
  1757   001396  0E00               	movlw	0
  1758   001398  6E2A               	movwf	(sprintf@f+9)^0,c
  1759   00139A  0E21               	movlw	low sprintf@f
  1760   00139C  6E18               	movwf	vfprintf@fp^0,c
  1761   00139E  C01D  F019         	movff	sprintf@fmt,vfprintf@fmt
  1762   0013A2  0E20               	movlw	low sprintf@ap
  1763   0013A4  6E1A               	movwf	vfprintf@ap^0,c
  1764   0013A6  EC86  F009         	call	_vfprintf	;wreg free
  1765   0013AA  501C               	movf	sprintf@s^0,w,c
  1766   0013AC  2423               	addwf	(sprintf@f+2)^0,w,c
  1767   0013AE  6ED9               	movwf	fsr2l,c
  1768   0013B0  6ADA               	clrf	fsr2h,c
  1769   0013B2  6ADF               	clrf	indf2,c
  1770   0013B4  0012               	return		;funcret
  1771   0013B6                     __end_of_sprintf:
  1772                           	callstack 0
  1773                           
  1774 ;; *************** function _vfprintf *****************
  1775 ;; Defined at:
  1776 ;;		line 1817 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c"
  1777 ;; Parameters:    Size  Location     Type
  1778 ;;  fp              1   23[COMRAM] PTR struct _IO_FILE
  1779 ;;		 -> sprintf@f(11), 
  1780 ;;  fmt             1   24[COMRAM] PTR const unsigned char 
  1781 ;;		 -> STR_1(3), 
  1782 ;;  ap              1   25[COMRAM] PTR PTR void 
  1783 ;;		 -> sprintf@ap(1), 
  1784 ;; Auto vars:     Size  Location     Type
  1785 ;;  cfmt            1   26[COMRAM] PTR unsigned char 
  1786 ;;		 -> STR_1(3), 
  1787 ;; Return value:  Size  Location     Type
  1788 ;;                  2   23[COMRAM] int 
  1789 ;; Registers used:
  1790 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1791 ;; Tracked objects:
  1792 ;;		On entry : 0/0
  1793 ;;		On exit  : 0/0
  1794 ;;		Unchanged: 0/0
  1795 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1796 ;;      Params:         3       0       0       0       0       0       0       0       0
  1797 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1798 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1799 ;;      Totals:         4       0       0       0       0       0       0       0       0
  1800 ;;Total ram usage:        4 bytes
  1801 ;; Hardware stack levels used: 1
  1802 ;; Hardware stack levels required when called: 5
  1803 ;; This function calls:
  1804 ;;		_vfpfcnvrt
  1805 ;; This function is called by:
  1806 ;;		_sprintf
  1807 ;; This function uses a non-reentrant model
  1808 ;;
  1809                           
  1810                           	psect	text4
  1811   00130C                     __ptext4:
  1812                           	callstack 0
  1813   00130C                     _vfprintf:
  1814                           	callstack 22
  1815   00130C                     
  1816                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1817: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v3.00\pic\source
      +                          s\c99\common\doprnt.c: 1818: {;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\comm
      +                          on\doprnt.c: 1820:     char *cfmt;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\
      +                          common\doprnt.c: 1822:     cfmt = (char *)fmt;
  1817   00130C  C019  F01B         	movff	vfprintf@fmt,vfprintf@cfmt
  1818                           
  1819                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  1820   001310  EF92  F009         	goto	l1785
  1821   001314                     l1783:
  1822                           
  1823                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1830:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  1824   001314  C018  F00D         	movff	vfprintf@fp,vfpfcnvrt@fp
  1825   001318  0E1B               	movlw	low vfprintf@cfmt
  1826   00131A  6E0E               	movwf	vfpfcnvrt@fmt^0,c
  1827   00131C  C01A  F00F         	movff	vfprintf@ap,vfpfcnvrt@ap
  1828   001320  EC55  F006         	call	_vfpfcnvrt	;wreg free
  1829   001324                     l1785:
  1830                           
  1831                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  1832   001324  C01B  FFF6         	movff	vfprintf@cfmt,tblptrl
  1833   001328                     	if	1	;There is more than 1 active tblptr byte
  1834   001328  0E08               	movlw	high __smallconst
  1835   00132A  6EF7               	movwf	tblptrh,c
  1836   00132C                     	endif
  1837   00132C                     	if	0	;tblptru may be non-zero
  1838   00132C                     	endif
  1839   00132C                     	if	0	;tblptru may be non-zero
  1840   00132C                     	endif
  1841   00132C  0008               	tblrd		*
  1842   00132E  50F5               	movf	tablat,w,c
  1843   001330  0900               	iorlw	0
  1844   001332  A4D8               	btfss	status,2,c
  1845   001334  EF9E  F009         	goto	u1141
  1846   001338  EFA0  F009         	goto	u1140
  1847   00133C                     u1141:
  1848   00133C  EF8A  F009         	goto	l1783
  1849   001340                     u1140:
  1850   001340                     
  1851                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1835:  return 0;
  1852   001340  0E00               	movlw	0
  1853   001342  6E19               	movwf	(?_vfprintf+1)^0,c
  1854   001344  0E00               	movlw	0
  1855   001346  6E18               	movwf	?_vfprintf^0,c
  1856   001348  0012               	return		;funcret
  1857   00134A                     __end_of_vfprintf:
  1858                           	callstack 0
  1859                           
  1860 ;; *************** function _vfpfcnvrt *****************
  1861 ;; Defined at:
  1862 ;;		line 1177 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c"
  1863 ;; Parameters:    Size  Location     Type
  1864 ;;  fp              1   12[COMRAM] PTR struct _IO_FILE
  1865 ;;		 -> sprintf@f(11), 
  1866 ;;  fmt             1   13[COMRAM] PTR PTR unsigned char 
  1867 ;;		 -> vfprintf@cfmt(1), 
  1868 ;;  ap              1   14[COMRAM] PTR PTR void 
  1869 ;;		 -> sprintf@ap(1), 
  1870 ;; Auto vars:     Size  Location     Type
  1871 ;;  convarg         4   18[COMRAM] struct .
  1872 ;;  c               1   22[COMRAM] unsigned char 
  1873 ;;  cp              1   17[COMRAM] PTR unsigned char 
  1874 ;;		 -> STR_1(3), 
  1875 ;;  done            1   16[COMRAM] _Bool 
  1876 ;; Return value:  Size  Location     Type
  1877 ;;                  1    wreg      void 
  1878 ;; Registers used:
  1879 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1880 ;; Tracked objects:
  1881 ;;		On entry : 0/0
  1882 ;;		On exit  : 0/0
  1883 ;;		Unchanged: 0/0
  1884 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1885 ;;      Params:         3       0       0       0       0       0       0       0       0
  1886 ;;      Locals:         7       0       0       0       0       0       0       0       0
  1887 ;;      Temps:          1       0       0       0       0       0       0       0       0
  1888 ;;      Totals:        11       0       0       0       0       0       0       0       0
  1889 ;;Total ram usage:       11 bytes
  1890 ;; Hardware stack levels used: 1
  1891 ;; Hardware stack levels required when called: 4
  1892 ;; This function calls:
  1893 ;;		___awdiv
  1894 ;;		___awmod
  1895 ;;		_abs
  1896 ;;		_fputc
  1897 ;; This function is called by:
  1898 ;;		_vfprintf
  1899 ;; This function uses a non-reentrant model
  1900 ;;
  1901                           
  1902                           	psect	text5
  1903   000CAA                     __ptext5:
  1904                           	callstack 0
  1905   000CAA                     _vfpfcnvrt:
  1906                           	callstack 22
  1907   000CAA                     
  1908                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1177: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\c
      +                          ommon\doprnt.c: 1178: {;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\dopr
      +                          nt.c: 1179:     char c, *cp;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common
      +                          \doprnt.c: 1180:     _Bool done;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\co
      +                          mmon\doprnt.c: 1188:  } convarg;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\co
      +                          mmon\doprnt.c: 1201:     if ((*fmt)[0] == '%') {
  1909   000CAA  500E               	movf	vfpfcnvrt@fmt^0,w,c
  1910   000CAC  6ED9               	movwf	fsr2l,c
  1911   000CAE  6ADA               	clrf	fsr2h,c
  1912   000CB0  CFDF FFF6          	movff	indf2,tblptrl
  1913   000CB4                     	if	1	;There is more than 1 active tblptr byte
  1914   000CB4  0E08               	movlw	high __smallconst
  1915   000CB6  6EF7               	movwf	tblptrh,c
  1916   000CB8                     	endif
  1917   000CB8                     	if	0	;tblptru may be non-zero
  1918   000CB8                     	endif
  1919   000CB8                     	if	0	;tblptru may be non-zero
  1920   000CB8                     	endif
  1921   000CB8  0008               	tblrd		*
  1922   000CBA  50F5               	movf	tablat,w,c
  1923   000CBC  0A25               	xorlw	37
  1924   000CBE  A4D8               	btfss	status,2,c
  1925   000CC0  EF64  F006         	goto	u1041
  1926   000CC4  EF66  F006         	goto	u1040
  1927   000CC8                     u1041:
  1928   000CC8  EF1F  F007         	goto	l1775
  1929   000CCC                     u1040:
  1930   000CCC                     
  1931                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1202:         ++*
      +                          fmt;
  1932   000CCC  500E               	movf	vfpfcnvrt@fmt^0,w,c
  1933   000CCE  6ED9               	movwf	fsr2l,c
  1934   000CD0  6ADA               	clrf	fsr2h,c
  1935   000CD2  2ADF               	incf	indf2,f,c
  1936   000CD4                     
  1937                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1204:         fla
      +                          gs = width = 0;
  1938   000CD4  0E00               	movlw	0
  1939   000CD6  6E47               	movwf	(_width+1)^0,c
  1940   000CD8  0E00               	movlw	0
  1941   000CDA  6E46               	movwf	_width^0,c
  1942   000CDC  C046  F04A         	movff	_width,_flags
  1943   000CE0                     
  1944                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1205:         pre
      +                          c = -1;
  1945   000CE0  6848               	setf	_prec^0,c
  1946   000CE2  6849               	setf	(_prec+1)^0,c
  1947   000CE4                     
  1948                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1291:   cp = *fmt
      +                          ;
  1949   000CE4  500E               	movf	vfpfcnvrt@fmt^0,w,c
  1950   000CE6  6ED9               	movwf	fsr2l,c
  1951   000CE8  6ADA               	clrf	fsr2h,c
  1952   000CEA  50DF               	movf	indf2,w,c
  1953   000CEC  6E12               	movwf	vfpfcnvrt@cp^0,c
  1954   000CEE                     
  1955                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1361:   if (*cp =
      +                          = 'd' || *cp == 'i') {
  1956   000CEE  C012  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  1957   000CF2                     	if	1	;There is more than 1 active tblptr byte
  1958   000CF2  0E08               	movlw	high __smallconst
  1959   000CF4  6EF7               	movwf	tblptrh,c
  1960   000CF6                     	endif
  1961   000CF6                     	if	0	;tblptru may be non-zero
  1962   000CF6                     	endif
  1963   000CF6                     	if	0	;tblptru may be non-zero
  1964   000CF6                     	endif
  1965   000CF6  0008               	tblrd		*
  1966   000CF8  50F5               	movf	tablat,w,c
  1967   000CFA  0A64               	xorlw	100
  1968   000CFC  B4D8               	btfsc	status,2,c
  1969   000CFE  EF83  F006         	goto	u1051
  1970   000D02  EF85  F006         	goto	u1050
  1971   000D06                     u1051:
  1972   000D06  EF93  F006         	goto	l1745
  1973   000D0A                     u1050:
  1974   000D0A  C012  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  1975   000D0E                     	if	1	;There is more than 1 active tblptr byte
  1976   000D0E  0E08               	movlw	high __smallconst
  1977   000D10  6EF7               	movwf	tblptrh,c
  1978   000D12                     	endif
  1979   000D12                     	if	0	;tblptru may be non-zero
  1980   000D12                     	endif
  1981   000D12                     	if	0	;tblptru may be non-zero
  1982   000D12                     	endif
  1983   000D12  0008               	tblrd		*
  1984   000D14  50F5               	movf	tablat,w,c
  1985   000D16  0A69               	xorlw	105
  1986   000D18  A4D8               	btfss	status,2,c
  1987   000D1A  EF91  F006         	goto	u1061
  1988   000D1E  EF93  F006         	goto	u1060
  1989   000D22                     u1061:
  1990   000D22  EF19  F007         	goto	l1771
  1991   000D26                     u1060:
  1992   000D26                     l1745:
  1993                           
  1994                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1404:    convarg.
      +                          sint = (vfpf_sint_t)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
  1995   000D26  500F               	movf	vfpfcnvrt@ap^0,w,c
  1996   000D28  6ED9               	movwf	fsr2l,c
  1997   000D2A  6ADA               	clrf	fsr2h,c
  1998   000D2C  0E02               	movlw	2
  1999   000D2E  26DF               	addwf	indf2,f,c
  2000   000D30  5CDF               	subwf	indf2,w,c
  2001   000D32  6ED9               	movwf	fsr2l,c
  2002   000D34  6ADA               	clrf	fsr2h,c
  2003   000D36  CFDE F013          	movff	postinc2,vfpfcnvrt@convarg
  2004   000D3A  CFDE F014          	movff	postinc2,vfpfcnvrt@convarg+1
  2005   000D3E                     
  2006                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1406:    *fmt = c
      +                          p+1;
  2007   000D3E  500E               	movf	vfpfcnvrt@fmt^0,w,c
  2008   000D40  6ED9               	movwf	fsr2l,c
  2009   000D42  6ADA               	clrf	fsr2h,c
  2010   000D44  2812               	incf	vfpfcnvrt@cp^0,w,c
  2011   000D46  6EDF               	movwf	indf2,c
  2012   000D48                     
  2013                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1408:    c = size
      +                          of(dbuf);
  2014   000D48  0E20               	movlw	32
  2015   000D4A  6E17               	movwf	vfpfcnvrt@c^0,c
  2016                           
  2017                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1409:    done = c
      +                          onvarg.sint < 0;
  2018   000D4C  BE14               	btfsc	(vfpfcnvrt@convarg+1)^0,7,c
  2019   000D4E  EFAB  F006         	goto	u1071
  2020   000D52  EFAE  F006         	goto	u1070
  2021   000D56                     u1071:
  2022   000D56  0E01               	movlw	1
  2023   000D58  EFAF  F006         	goto	u1080
  2024   000D5C                     u1070:
  2025   000D5C  0E00               	movlw	0
  2026   000D5E                     u1080:
  2027   000D5E  6E11               	movwf	vfpfcnvrt@done^0,c
  2028   000D60                     l1751:
  2029                           
  2030                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1411:     dbuf[--
      +                          c] = abs(convarg.sint % 10) + '0';
  2031   000D60  0617               	decf	vfpfcnvrt@c^0,f,c
  2032   000D62  5017               	movf	vfpfcnvrt@c^0,w,c
  2033   000D64  0F60               	addlw	low _dbuf
  2034   000D66  6ED9               	movwf	fsr2l,c
  2035   000D68  6ADA               	clrf	fsr2h,c
  2036   000D6A  C013  F003         	movff	vfpfcnvrt@convarg,___awmod@dividend
  2037   000D6E  C014  F004         	movff	vfpfcnvrt@convarg+1,___awmod@dividend+1
  2038   000D72  0E00               	movlw	0
  2039   000D74  6E06               	movwf	(___awmod@divisor+1)^0,c
  2040   000D76  0E0A               	movlw	10
  2041   000D78  6E05               	movwf	___awmod@divisor^0,c
  2042   000D7A  ECFB  F007         	call	___awmod	;wreg free
  2043   000D7E  C003  F009         	movff	?___awmod,abs@a
  2044   000D82  C004  F00A         	movff	?___awmod+1,abs@a+1
  2045   000D86  ECDB  F009         	call	_abs	;wreg free
  2046   000D8A  5009               	movf	?_abs^0,w,c
  2047   000D8C  0F30               	addlw	48
  2048   000D8E  6EDF               	movwf	indf2,c
  2049   000D90                     
  2050                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1412:     convarg
      +                          .sint /= 10;
  2051   000D90  C013  F003         	movff	vfpfcnvrt@convarg,___awdiv@dividend
  2052   000D94  C014  F004         	movff	vfpfcnvrt@convarg+1,___awdiv@dividend+1
  2053   000D98  0E00               	movlw	0
  2054   000D9A  6E06               	movwf	(___awdiv@divisor+1)^0,c
  2055   000D9C  0E0A               	movlw	10
  2056   000D9E  6E05               	movwf	___awdiv@divisor^0,c
  2057   000DA0  EC9A  F007         	call	___awdiv	;wreg free
  2058   000DA4  C003  F013         	movff	?___awdiv,vfpfcnvrt@convarg
  2059   000DA8  C004  F014         	movff	?___awdiv+1,vfpfcnvrt@convarg+1
  2060   000DAC                     
  2061                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1416:    } while 
      +                          (convarg.sint != 0 && c != 0);
  2062   000DAC  5013               	movf	vfpfcnvrt@convarg^0,w,c
  2063   000DAE  1014               	iorwf	(vfpfcnvrt@convarg+1)^0,w,c
  2064   000DB0  B4D8               	btfsc	status,2,c
  2065   000DB2  EFDD  F006         	goto	u1091
  2066   000DB6  EFDF  F006         	goto	u1090
  2067   000DBA                     u1091:
  2068   000DBA  EFE7  F006         	goto	l1759
  2069   000DBE                     u1090:
  2070   000DBE  5017               	movf	vfpfcnvrt@c^0,w,c
  2071   000DC0  A4D8               	btfss	status,2,c
  2072   000DC2  EFE5  F006         	goto	u1101
  2073   000DC6  EFE7  F006         	goto	u1100
  2074   000DCA                     u1101:
  2075   000DCA  EFB0  F006         	goto	l1751
  2076   000DCE                     u1100:
  2077   000DCE                     l1759:
  2078                           
  2079                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1417:    if (c !=
      +                           0 && done) {
  2080   000DCE  5017               	movf	vfpfcnvrt@c^0,w,c
  2081   000DD0  B4D8               	btfsc	status,2,c
  2082   000DD2  EFED  F006         	goto	u1111
  2083   000DD6  EFEF  F006         	goto	u1110
  2084   000DDA                     u1111:
  2085   000DDA  EF0E  F007         	goto	l1769
  2086   000DDE                     u1110:
  2087   000DDE  5011               	movf	vfpfcnvrt@done^0,w,c
  2088   000DE0  B4D8               	btfsc	status,2,c
  2089   000DE2  EFF5  F006         	goto	u1121
  2090   000DE6  EFF7  F006         	goto	u1120
  2091   000DEA                     u1121:
  2092   000DEA  EF0E  F007         	goto	l1769
  2093   000DEE                     u1120:
  2094   000DEE                     
  2095                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1418:     dbuf[--
      +                          c] = '-';
  2096   000DEE  0617               	decf	vfpfcnvrt@c^0,f,c
  2097   000DF0  5017               	movf	vfpfcnvrt@c^0,w,c
  2098   000DF2  0F60               	addlw	low _dbuf
  2099   000DF4  6ED9               	movwf	fsr2l,c
  2100   000DF6  6ADA               	clrf	fsr2h,c
  2101   000DF8  0E2D               	movlw	45
  2102   000DFA  6EDF               	movwf	indf2,c
  2103   000DFC  EF0E  F007         	goto	l1769
  2104   000E00                     l1765:
  2105                           
  2106                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1424:     fputc(d
      +                          buf[c++], fp);
  2107   000E00  5017               	movf	vfpfcnvrt@c^0,w,c
  2108   000E02  0F60               	addlw	low _dbuf
  2109   000E04  6ED9               	movwf	fsr2l,c
  2110   000E06  6ADA               	clrf	fsr2h,c
  2111   000E08  50DF               	movf	indf2,w,c
  2112   000E0A  6E10               	movwf	??_vfpfcnvrt^0,c
  2113   000E0C  5010               	movf	??_vfpfcnvrt^0,w,c
  2114   000E0E  6E03               	movwf	fputc@c^0,c
  2115   000E10  6A04               	clrf	(fputc@c+1)^0,c
  2116   000E12  C00D  F005         	movff	vfpfcnvrt@fp,fputc@fp
  2117   000E16  EC52  F008         	call	_fputc	;wreg free
  2118   000E1A  2A17               	incf	vfpfcnvrt@c^0,f,c
  2119   000E1C                     l1769:
  2120                           
  2121                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1423:    while (c
      +                           != sizeof(dbuf)) {
  2122   000E1C  0E20               	movlw	32
  2123   000E1E  1817               	xorwf	vfpfcnvrt@c^0,w,c
  2124   000E20  A4D8               	btfss	status,2,c
  2125   000E22  EF15  F007         	goto	u1131
  2126   000E26  EF17  F007         	goto	u1130
  2127   000E2A                     u1131:
  2128   000E2A  EF00  F007         	goto	l1765
  2129   000E2E                     u1130:
  2130   000E2E  EF30  F007         	goto	l987
  2131   000E32                     l1771:
  2132                           
  2133                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1806:         ++*
      +                          fmt;
  2134   000E32  500E               	movf	vfpfcnvrt@fmt^0,w,c
  2135   000E34  6ED9               	movwf	fsr2l,c
  2136   000E36  6ADA               	clrf	fsr2h,c
  2137   000E38  2ADF               	incf	indf2,f,c
  2138   000E3A  EF30  F007         	goto	l987
  2139   000E3E                     l1775:
  2140                           
  2141                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1811:     fputc((
      +                          int)(*fmt)[0], fp);
  2142   000E3E  500E               	movf	vfpfcnvrt@fmt^0,w,c
  2143   000E40  6ED9               	movwf	fsr2l,c
  2144   000E42  6ADA               	clrf	fsr2h,c
  2145   000E44  CFDF FFF6          	movff	indf2,tblptrl
  2146   000E48                     	if	1	;There is more than 1 active tblptr byte
  2147   000E48  0E08               	movlw	high __smallconst
  2148   000E4A  6EF7               	movwf	tblptrh,c
  2149   000E4C                     	endif
  2150   000E4C                     	if	0	;tblptru may be non-zero
  2151   000E4C                     	endif
  2152   000E4C                     	if	0	;tblptru may be non-zero
  2153   000E4C                     	endif
  2154   000E4C  0008               	tblrd		*
  2155   000E4E  50F5               	movf	tablat,w,c
  2156   000E50  6E03               	movwf	fputc@c^0,c
  2157   000E52  6A04               	clrf	(fputc@c+1)^0,c
  2158   000E54  C00D  F005         	movff	vfpfcnvrt@fp,fputc@fp
  2159   000E58  EC52  F008         	call	_fputc	;wreg free
  2160   000E5C  EF19  F007         	goto	l1771
  2161   000E60                     l987:
  2162   000E60  0012               	return		;funcret
  2163   000E62                     __end_of_vfpfcnvrt:
  2164                           	callstack 0
  2165                           
  2166 ;; *************** function _fputc *****************
  2167 ;; Defined at:
  2168 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\nf_fputc.c"
  2169 ;; Parameters:    Size  Location     Type
  2170 ;;  c               2    2[COMRAM] int 
  2171 ;;  fp              1    4[COMRAM] PTR struct _IO_FILE
  2172 ;;		 -> sprintf@f(11), 
  2173 ;; Auto vars:     Size  Location     Type
  2174 ;;		None
  2175 ;; Return value:  Size  Location     Type
  2176 ;;                  2    2[COMRAM] int 
  2177 ;; Registers used:
  2178 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2179 ;; Tracked objects:
  2180 ;;		On entry : 0/0
  2181 ;;		On exit  : 0/0
  2182 ;;		Unchanged: 0/0
  2183 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2184 ;;      Params:         3       0       0       0       0       0       0       0       0
  2185 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2186 ;;      Temps:          5       0       0       0       0       0       0       0       0
  2187 ;;      Totals:         8       0       0       0       0       0       0       0       0
  2188 ;;Total ram usage:        8 bytes
  2189 ;; Hardware stack levels used: 1
  2190 ;; Hardware stack levels required when called: 3
  2191 ;; This function calls:
  2192 ;;		_putch
  2193 ;; This function is called by:
  2194 ;;		_vfpfcnvrt
  2195 ;; This function uses a non-reentrant model
  2196 ;;
  2197                           
  2198                           	psect	text6
  2199   0010A4                     __ptext6:
  2200                           	callstack 0
  2201   0010A4                     _fputc:
  2202                           	callstack 22
  2203   0010A4  5005               	movf	fputc@fp^0,w,c
  2204   0010A6  B4D8               	btfsc	status,2,c
  2205   0010A8  EF58  F008         	goto	u991
  2206   0010AC  EF5A  F008         	goto	u990
  2207   0010B0                     u991:
  2208   0010B0  EF62  F008         	goto	l1717
  2209   0010B4                     u990:
  2210   0010B4  5005               	movf	fputc@fp^0,w,c
  2211   0010B6  A4D8               	btfss	status,2,c
  2212   0010B8  EF60  F008         	goto	u1001
  2213   0010BC  EF62  F008         	goto	u1000
  2214   0010C0                     u1001:
  2215   0010C0  EF67  F008         	goto	l1719
  2216   0010C4                     u1000:
  2217   0010C4                     l1717:
  2218   0010C4  5003               	movf	fputc@c^0,w,c
  2219   0010C6  EC45  F00A         	call	_putch
  2220   0010CA  EFA6  F008         	goto	l1012
  2221   0010CE                     l1719:
  2222   0010CE  5005               	movf	fputc@fp^0,w,c
  2223   0010D0  6ED9               	movwf	fsr2l,c
  2224   0010D2  6ADA               	clrf	fsr2h,c
  2225   0010D4  0E09               	movlw	9
  2226   0010D6  26D9               	addwf	fsr2l,f,c
  2227   0010D8  50DE               	movf	postinc2,w,c
  2228   0010DA  10DE               	iorwf	postinc2,w,c
  2229   0010DC  B4D8               	btfsc	status,2,c
  2230   0010DE  EF73  F008         	goto	u1011
  2231   0010E2  EF75  F008         	goto	u1010
  2232   0010E6                     u1011:
  2233   0010E6  EF8E  F008         	goto	l1723
  2234   0010EA                     u1010:
  2235   0010EA  5005               	movf	fputc@fp^0,w,c
  2236   0010EC  6ED9               	movwf	fsr2l,c
  2237   0010EE  6ADA               	clrf	fsr2h,c
  2238   0010F0  0E09               	movlw	9
  2239   0010F2  26D9               	addwf	fsr2l,f,c
  2240   0010F4  5005               	movf	fputc@fp^0,w,c
  2241   0010F6  6EE1               	movwf	fsr1l,c
  2242   0010F8  6AE2               	clrf	fsr1h,c
  2243   0010FA  0E02               	movlw	2
  2244   0010FC  26E1               	addwf	fsr1l,f,c
  2245   0010FE  50DE               	movf	postinc2,w,c
  2246   001100  5CE6               	subwf	postinc1,w,c
  2247   001102  50E6               	movf	postinc1,w,c
  2248   001104  0A80               	xorlw	128
  2249   001106  6E0A               	movwf	(??_fputc+4)^0,c
  2250   001108  50DE               	movf	postinc2,w,c
  2251   00110A  0A80               	xorlw	128
  2252   00110C  580A               	subwfb	(??_fputc+4)^0,w,c
  2253   00110E  B0D8               	btfsc	status,0,c
  2254   001110  EF8C  F008         	goto	u1021
  2255   001114  EF8E  F008         	goto	u1020
  2256   001118                     u1021:
  2257   001118  EFA6  F008         	goto	l1012
  2258   00111C                     u1020:
  2259   00111C                     l1723:
  2260   00111C  5005               	movf	fputc@fp^0,w,c
  2261   00111E  6ED9               	movwf	fsr2l,c
  2262   001120  6ADA               	clrf	fsr2h,c
  2263   001122  0E02               	movlw	2
  2264   001124  26D9               	addwf	fsr2l,f,c
  2265   001126  50DF               	movf	indf2,w,c
  2266   001128  6E06               	movwf	??_fputc^0,c
  2267   00112A  5005               	movf	fputc@fp^0,w,c
  2268   00112C  6ED9               	movwf	fsr2l,c
  2269   00112E  6ADA               	clrf	fsr2h,c
  2270   001130  50DF               	movf	indf2,w,c
  2271   001132  2406               	addwf	??_fputc^0,w,c
  2272   001134  6ED9               	movwf	fsr2l,c
  2273   001136  6ADA               	clrf	fsr2h,c
  2274   001138  C003  FFDF         	movff	fputc@c,indf2
  2275   00113C  5005               	movf	fputc@fp^0,w,c
  2276   00113E  6ED9               	movwf	fsr2l,c
  2277   001140  6ADA               	clrf	fsr2h,c
  2278   001142  0E02               	movlw	2
  2279   001144  26D9               	addwf	fsr2l,f,c
  2280   001146  2ADE               	incf	postinc2,f,c
  2281   001148  0E00               	movlw	0
  2282   00114A  22DD               	addwfc	postdec2,f,c
  2283   00114C                     l1012:
  2284   00114C  0012               	return		;funcret
  2285   00114E                     __end_of_fputc:
  2286                           	callstack 0
  2287                           
  2288 ;; *************** function _putch *****************
  2289 ;; Defined at:
  2290 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\putch.c"
  2291 ;; Parameters:    Size  Location     Type
  2292 ;;  c               1    wreg     unsigned char 
  2293 ;; Auto vars:     Size  Location     Type
  2294 ;;  c               1    0[COMRAM] unsigned char 
  2295 ;; Return value:  Size  Location     Type
  2296 ;;                  1    wreg      void 
  2297 ;; Registers used:
  2298 ;;		wreg
  2299 ;; Tracked objects:
  2300 ;;		On entry : 0/0
  2301 ;;		On exit  : 0/0
  2302 ;;		Unchanged: 0/0
  2303 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2304 ;;      Params:         0       0       0       0       0       0       0       0       0
  2305 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2306 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2307 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2308 ;;Total ram usage:        0 bytes
  2309 ;; Hardware stack levels used: 1
  2310 ;; Hardware stack levels required when called: 2
  2311 ;; This function calls:
  2312 ;;		Nothing
  2313 ;; This function is called by:
  2314 ;;		_fputc
  2315 ;; This function uses a non-reentrant model
  2316 ;;
  2317                           
  2318                           	psect	text7
  2319   00148A                     __ptext7:
  2320                           	callstack 0
  2321   00148A                     _putch:
  2322                           	callstack 22
  2323   00148A  0012               	return		;funcret
  2324   00148C                     __end_of_putch:
  2325                           	callstack 0
  2326                           
  2327 ;; *************** function _abs *****************
  2328 ;; Defined at:
  2329 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\abs.c"
  2330 ;; Parameters:    Size  Location     Type
  2331 ;;  a               2    8[COMRAM] int 
  2332 ;; Auto vars:     Size  Location     Type
  2333 ;;		None
  2334 ;; Return value:  Size  Location     Type
  2335 ;;                  2    8[COMRAM] int 
  2336 ;; Registers used:
  2337 ;;		wreg, status,2, status,0
  2338 ;; Tracked objects:
  2339 ;;		On entry : 0/0
  2340 ;;		On exit  : 0/0
  2341 ;;		Unchanged: 0/0
  2342 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2343 ;;      Params:         2       0       0       0       0       0       0       0       0
  2344 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2345 ;;      Temps:          2       0       0       0       0       0       0       0       0
  2346 ;;      Totals:         4       0       0       0       0       0       0       0       0
  2347 ;;Total ram usage:        4 bytes
  2348 ;; Hardware stack levels used: 1
  2349 ;; Hardware stack levels required when called: 2
  2350 ;; This function calls:
  2351 ;;		Nothing
  2352 ;; This function is called by:
  2353 ;;		_vfpfcnvrt
  2354 ;; This function uses a non-reentrant model
  2355 ;;
  2356                           
  2357                           	psect	text8
  2358   0013B6                     __ptext8:
  2359                           	callstack 0
  2360   0013B6                     _abs:
  2361                           	callstack 23
  2362   0013B6  BE0A               	btfsc	(abs@a+1)^0,7,c
  2363   0013B8  EFE0  F009         	goto	u1031
  2364   0013BC  EFE2  F009         	goto	u1030
  2365   0013C0                     u1031:
  2366   0013C0  EFE8  F009         	goto	l997
  2367   0013C4                     u1030:
  2368   0013C4  C009  F009         	movff	abs@a,?_abs
  2369   0013C8  C00A  F00A         	movff	abs@a+1,?_abs+1
  2370   0013CC  EFF4  F009         	goto	l1000
  2371   0013D0                     l997:
  2372   0013D0  C009  F00B         	movff	abs@a,??_abs
  2373   0013D4  C00A  F00C         	movff	abs@a+1,??_abs+1
  2374   0013D8  1E0B               	comf	??_abs^0,f,c
  2375   0013DA  1E0C               	comf	(??_abs+1)^0,f,c
  2376   0013DC  4A0B               	infsnz	??_abs^0,f,c
  2377   0013DE  2A0C               	incf	(??_abs+1)^0,f,c
  2378   0013E0  C00B  F009         	movff	??_abs,?_abs
  2379   0013E4  C00C  F00A         	movff	??_abs+1,?_abs+1
  2380   0013E8                     l1000:
  2381   0013E8  0012               	return		;funcret
  2382   0013EA                     __end_of_abs:
  2383                           	callstack 0
  2384                           
  2385 ;; *************** function ___awmod *****************
  2386 ;; Defined at:
  2387 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\awmod.c"
  2388 ;; Parameters:    Size  Location     Type
  2389 ;;  dividend        2    2[COMRAM] int 
  2390 ;;  divisor         2    4[COMRAM] int 
  2391 ;; Auto vars:     Size  Location     Type
  2392 ;;  sign            1    7[COMRAM] unsigned char 
  2393 ;;  counter         1    6[COMRAM] unsigned char 
  2394 ;; Return value:  Size  Location     Type
  2395 ;;                  2    2[COMRAM] int 
  2396 ;; Registers used:
  2397 ;;		wreg, status,2, status,0
  2398 ;; Tracked objects:
  2399 ;;		On entry : 0/0
  2400 ;;		On exit  : 0/0
  2401 ;;		Unchanged: 0/0
  2402 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2403 ;;      Params:         4       0       0       0       0       0       0       0       0
  2404 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2405 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2406 ;;      Totals:         6       0       0       0       0       0       0       0       0
  2407 ;;Total ram usage:        6 bytes
  2408 ;; Hardware stack levels used: 1
  2409 ;; Hardware stack levels required when called: 2
  2410 ;; This function calls:
  2411 ;;		Nothing
  2412 ;; This function is called by:
  2413 ;;		_vfpfcnvrt
  2414 ;; This function uses a non-reentrant model
  2415 ;;
  2416                           
  2417                           	psect	text9
  2418   000FF6                     __ptext9:
  2419                           	callstack 0
  2420   000FF6                     ___awmod:
  2421                           	callstack 23
  2422   000FF6  6A08               	clrf	___awmod@sign^0,c
  2423   000FF8  BE04               	btfsc	(___awmod@dividend+1)^0,7,c
  2424   000FFA  EF03  F008         	goto	u930
  2425   000FFE  EF01  F008         	goto	u931
  2426   001002                     u931:
  2427   001002  EF09  F008         	goto	l1685
  2428   001006                     u930:
  2429   001006  6C03               	negf	___awmod@dividend^0,c
  2430   001008  1E04               	comf	(___awmod@dividend+1)^0,f,c
  2431   00100A  B0D8               	btfsc	status,0,c
  2432   00100C  2A04               	incf	(___awmod@dividend+1)^0,f,c
  2433   00100E  0E01               	movlw	1
  2434   001010  6E08               	movwf	___awmod@sign^0,c
  2435   001012                     l1685:
  2436   001012  BE06               	btfsc	(___awmod@divisor+1)^0,7,c
  2437   001014  EF10  F008         	goto	u940
  2438   001018  EF0E  F008         	goto	u941
  2439   00101C                     u941:
  2440   00101C  EF14  F008         	goto	l1689
  2441   001020                     u940:
  2442   001020  6C05               	negf	___awmod@divisor^0,c
  2443   001022  1E06               	comf	(___awmod@divisor+1)^0,f,c
  2444   001024  B0D8               	btfsc	status,0,c
  2445   001026  2A06               	incf	(___awmod@divisor+1)^0,f,c
  2446   001028                     l1689:
  2447   001028  5005               	movf	___awmod@divisor^0,w,c
  2448   00102A  1006               	iorwf	(___awmod@divisor+1)^0,w,c
  2449   00102C  B4D8               	btfsc	status,2,c
  2450   00102E  EF1B  F008         	goto	u951
  2451   001032  EF1D  F008         	goto	u950
  2452   001036                     u951:
  2453   001036  EF41  F008         	goto	l1705
  2454   00103A                     u950:
  2455   00103A  0E01               	movlw	1
  2456   00103C  6E07               	movwf	___awmod@counter^0,c
  2457   00103E  EF25  F008         	goto	l1695
  2458   001042                     l1693:
  2459   001042  90D8               	bcf	status,0,c
  2460   001044  3605               	rlcf	___awmod@divisor^0,f,c
  2461   001046  3606               	rlcf	(___awmod@divisor+1)^0,f,c
  2462   001048  2A07               	incf	___awmod@counter^0,f,c
  2463   00104A                     l1695:
  2464   00104A  AE06               	btfss	(___awmod@divisor+1)^0,7,c
  2465   00104C  EF2A  F008         	goto	u961
  2466   001050  EF2C  F008         	goto	u960
  2467   001054                     u961:
  2468   001054  EF21  F008         	goto	l1693
  2469   001058                     u960:
  2470   001058                     l1697:
  2471   001058  5005               	movf	___awmod@divisor^0,w,c
  2472   00105A  5C03               	subwf	___awmod@dividend^0,w,c
  2473   00105C  5006               	movf	(___awmod@divisor+1)^0,w,c
  2474   00105E  5804               	subwfb	(___awmod@dividend+1)^0,w,c
  2475   001060  A0D8               	btfss	status,0,c
  2476   001062  EF35  F008         	goto	u971
  2477   001066  EF37  F008         	goto	u970
  2478   00106A                     u971:
  2479   00106A  EF3B  F008         	goto	l1701
  2480   00106E                     u970:
  2481   00106E  5005               	movf	___awmod@divisor^0,w,c
  2482   001070  5E03               	subwf	___awmod@dividend^0,f,c
  2483   001072  5006               	movf	(___awmod@divisor+1)^0,w,c
  2484   001074  5A04               	subwfb	(___awmod@dividend+1)^0,f,c
  2485   001076                     l1701:
  2486   001076  90D8               	bcf	status,0,c
  2487   001078  3206               	rrcf	(___awmod@divisor+1)^0,f,c
  2488   00107A  3205               	rrcf	___awmod@divisor^0,f,c
  2489   00107C  2E07               	decfsz	___awmod@counter^0,f,c
  2490   00107E  EF2C  F008         	goto	l1697
  2491   001082                     l1705:
  2492   001082  5008               	movf	___awmod@sign^0,w,c
  2493   001084  B4D8               	btfsc	status,2,c
  2494   001086  EF47  F008         	goto	u981
  2495   00108A  EF49  F008         	goto	u980
  2496   00108E                     u981:
  2497   00108E  EF4D  F008         	goto	l1709
  2498   001092                     u980:
  2499   001092  6C03               	negf	___awmod@dividend^0,c
  2500   001094  1E04               	comf	(___awmod@dividend+1)^0,f,c
  2501   001096  B0D8               	btfsc	status,0,c
  2502   001098  2A04               	incf	(___awmod@dividend+1)^0,f,c
  2503   00109A                     l1709:
  2504   00109A  C003  F003         	movff	___awmod@dividend,?___awmod
  2505   00109E  C004  F004         	movff	___awmod@dividend+1,?___awmod+1
  2506   0010A2  0012               	return		;funcret
  2507   0010A4                     __end_of___awmod:
  2508                           	callstack 0
  2509                           
  2510 ;; *************** function ___awdiv *****************
  2511 ;; Defined at:
  2512 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\awdiv.c"
  2513 ;; Parameters:    Size  Location     Type
  2514 ;;  dividend        2    2[COMRAM] int 
  2515 ;;  divisor         2    4[COMRAM] int 
  2516 ;; Auto vars:     Size  Location     Type
  2517 ;;  quotient        2    8[COMRAM] int 
  2518 ;;  sign            1    7[COMRAM] unsigned char 
  2519 ;;  counter         1    6[COMRAM] unsigned char 
  2520 ;; Return value:  Size  Location     Type
  2521 ;;                  2    2[COMRAM] int 
  2522 ;; Registers used:
  2523 ;;		wreg, status,2, status,0
  2524 ;; Tracked objects:
  2525 ;;		On entry : 0/0
  2526 ;;		On exit  : 0/0
  2527 ;;		Unchanged: 0/0
  2528 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2529 ;;      Params:         4       0       0       0       0       0       0       0       0
  2530 ;;      Locals:         4       0       0       0       0       0       0       0       0
  2531 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2532 ;;      Totals:         8       0       0       0       0       0       0       0       0
  2533 ;;Total ram usage:        8 bytes
  2534 ;; Hardware stack levels used: 1
  2535 ;; Hardware stack levels required when called: 2
  2536 ;; This function calls:
  2537 ;;		Nothing
  2538 ;; This function is called by:
  2539 ;;		_vfpfcnvrt
  2540 ;; This function uses a non-reentrant model
  2541 ;;
  2542                           
  2543                           	psect	text10
  2544   000F34                     __ptext10:
  2545                           	callstack 0
  2546   000F34                     ___awdiv:
  2547                           	callstack 23
  2548   000F34  6A08               	clrf	___awdiv@sign^0,c
  2549   000F36  BE06               	btfsc	(___awdiv@divisor+1)^0,7,c
  2550   000F38  EFA2  F007         	goto	u870
  2551   000F3C  EFA0  F007         	goto	u871
  2552   000F40                     u871:
  2553   000F40  EFA8  F007         	goto	l1641
  2554   000F44                     u870:
  2555   000F44  6C05               	negf	___awdiv@divisor^0,c
  2556   000F46  1E06               	comf	(___awdiv@divisor+1)^0,f,c
  2557   000F48  B0D8               	btfsc	status,0,c
  2558   000F4A  2A06               	incf	(___awdiv@divisor+1)^0,f,c
  2559   000F4C  0E01               	movlw	1
  2560   000F4E  6E08               	movwf	___awdiv@sign^0,c
  2561   000F50                     l1641:
  2562   000F50  BE04               	btfsc	(___awdiv@dividend+1)^0,7,c
  2563   000F52  EFAF  F007         	goto	u880
  2564   000F56  EFAD  F007         	goto	u881
  2565   000F5A                     u881:
  2566   000F5A  EFB5  F007         	goto	l1647
  2567   000F5E                     u880:
  2568   000F5E  6C03               	negf	___awdiv@dividend^0,c
  2569   000F60  1E04               	comf	(___awdiv@dividend+1)^0,f,c
  2570   000F62  B0D8               	btfsc	status,0,c
  2571   000F64  2A04               	incf	(___awdiv@dividend+1)^0,f,c
  2572   000F66  0E01               	movlw	1
  2573   000F68  1A08               	xorwf	___awdiv@sign^0,f,c
  2574   000F6A                     l1647:
  2575   000F6A  0E00               	movlw	0
  2576   000F6C  6E0A               	movwf	(___awdiv@quotient+1)^0,c
  2577   000F6E  0E00               	movlw	0
  2578   000F70  6E09               	movwf	___awdiv@quotient^0,c
  2579   000F72  5005               	movf	___awdiv@divisor^0,w,c
  2580   000F74  1006               	iorwf	(___awdiv@divisor+1)^0,w,c
  2581   000F76  B4D8               	btfsc	status,2,c
  2582   000F78  EFC0  F007         	goto	u891
  2583   000F7C  EFC2  F007         	goto	u890
  2584   000F80                     u891:
  2585   000F80  EFEA  F007         	goto	l1669
  2586   000F84                     u890:
  2587   000F84  0E01               	movlw	1
  2588   000F86  6E07               	movwf	___awdiv@counter^0,c
  2589   000F88  EFCA  F007         	goto	l1655
  2590   000F8C                     l1653:
  2591   000F8C  90D8               	bcf	status,0,c
  2592   000F8E  3605               	rlcf	___awdiv@divisor^0,f,c
  2593   000F90  3606               	rlcf	(___awdiv@divisor+1)^0,f,c
  2594   000F92  2A07               	incf	___awdiv@counter^0,f,c
  2595   000F94                     l1655:
  2596   000F94  AE06               	btfss	(___awdiv@divisor+1)^0,7,c
  2597   000F96  EFCF  F007         	goto	u901
  2598   000F9A  EFD1  F007         	goto	u900
  2599   000F9E                     u901:
  2600   000F9E  EFC6  F007         	goto	l1653
  2601   000FA2                     u900:
  2602   000FA2                     l1657:
  2603   000FA2  90D8               	bcf	status,0,c
  2604   000FA4  3609               	rlcf	___awdiv@quotient^0,f,c
  2605   000FA6  360A               	rlcf	(___awdiv@quotient+1)^0,f,c
  2606   000FA8  5005               	movf	___awdiv@divisor^0,w,c
  2607   000FAA  5C03               	subwf	___awdiv@dividend^0,w,c
  2608   000FAC  5006               	movf	(___awdiv@divisor+1)^0,w,c
  2609   000FAE  5804               	subwfb	(___awdiv@dividend+1)^0,w,c
  2610   000FB0  A0D8               	btfss	status,0,c
  2611   000FB2  EFDD  F007         	goto	u911
  2612   000FB6  EFDF  F007         	goto	u910
  2613   000FBA                     u911:
  2614   000FBA  EFE4  F007         	goto	l1665
  2615   000FBE                     u910:
  2616   000FBE  5005               	movf	___awdiv@divisor^0,w,c
  2617   000FC0  5E03               	subwf	___awdiv@dividend^0,f,c
  2618   000FC2  5006               	movf	(___awdiv@divisor+1)^0,w,c
  2619   000FC4  5A04               	subwfb	(___awdiv@dividend+1)^0,f,c
  2620   000FC6  8009               	bsf	___awdiv@quotient^0,0,c
  2621   000FC8                     l1665:
  2622   000FC8  90D8               	bcf	status,0,c
  2623   000FCA  3206               	rrcf	(___awdiv@divisor+1)^0,f,c
  2624   000FCC  3205               	rrcf	___awdiv@divisor^0,f,c
  2625   000FCE  2E07               	decfsz	___awdiv@counter^0,f,c
  2626   000FD0  EFD1  F007         	goto	l1657
  2627   000FD4                     l1669:
  2628   000FD4  5008               	movf	___awdiv@sign^0,w,c
  2629   000FD6  B4D8               	btfsc	status,2,c
  2630   000FD8  EFF0  F007         	goto	u921
  2631   000FDC  EFF2  F007         	goto	u920
  2632   000FE0                     u921:
  2633   000FE0  EFF6  F007         	goto	l1673
  2634   000FE4                     u920:
  2635   000FE4  6C09               	negf	___awdiv@quotient^0,c
  2636   000FE6  1E0A               	comf	(___awdiv@quotient+1)^0,f,c
  2637   000FE8  B0D8               	btfsc	status,0,c
  2638   000FEA  2A0A               	incf	(___awdiv@quotient+1)^0,f,c
  2639   000FEC                     l1673:
  2640   000FEC  C009  F003         	movff	___awdiv@quotient,?___awdiv
  2641   000FF0  C00A  F004         	movff	___awdiv@quotient+1,?___awdiv+1
  2642   000FF4  0012               	return		;funcret
  2643   000FF6                     __end_of___awdiv:
  2644                           	callstack 0
  2645                           
  2646 ;; *************** function _Lcd_Write_String *****************
  2647 ;; Defined at:
  2648 ;;		line 104 in file "lcd.c"
  2649 ;; Parameters:    Size  Location     Type
  2650 ;;  a               2    6[COMRAM] PTR const unsigned char 
  2651 ;;		 -> STR_14(4), STR_13(4), STR_12(3), STR_11(5), 
  2652 ;;		 -> STR_10(7), STR_9(9), STR_8(6), STR_7(6), 
  2653 ;;		 -> STR_6(6), STR_5(6), STR_4(6), STR_3(6), 
  2654 ;;		 -> STR_2(14), mostrar_variable@buffer(20), 
  2655 ;; Auto vars:     Size  Location     Type
  2656 ;;  i               2   10[COMRAM] int 
  2657 ;; Return value:  Size  Location     Type
  2658 ;;                  1    wreg      void 
  2659 ;; Registers used:
  2660 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2661 ;; Tracked objects:
  2662 ;;		On entry : 0/0
  2663 ;;		On exit  : 0/0
  2664 ;;		Unchanged: 0/0
  2665 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2666 ;;      Params:         2       0       0       0       0       0       0       0       0
  2667 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2668 ;;      Temps:          2       0       0       0       0       0       0       0       0
  2669 ;;      Totals:         6       0       0       0       0       0       0       0       0
  2670 ;;Total ram usage:        6 bytes
  2671 ;; Hardware stack levels used: 1
  2672 ;; Hardware stack levels required when called: 4
  2673 ;; This function calls:
  2674 ;;		_Lcd_Write_Char
  2675 ;; This function is called by:
  2676 ;;		_mostrar_variable
  2677 ;;		_mostrar_conteo
  2678 ;; This function uses a non-reentrant model
  2679 ;;
  2680                           
  2681                           	psect	text11
  2682   0011D0                     __ptext11:
  2683                           	callstack 0
  2684   0011D0                     _Lcd_Write_String:
  2685                           	callstack 24
  2686   0011D0                     
  2687                           ;lcd.c: 104: void Lcd_Write_String(const char *a);lcd.c: 105: {;lcd.c: 106:     int i;;l
      +                          cd.c: 107:     for(i=0;a[i]!='\0';i++)
  2688   0011D0  0E00               	movlw	0
  2689   0011D2  6E0C               	movwf	(Lcd_Write_String@i+1)^0,c
  2690   0011D4  0E00               	movlw	0
  2691   0011D6  6E0B               	movwf	Lcd_Write_String@i^0,c
  2692   0011D8  EF08  F009         	goto	l1809
  2693   0011DC                     l1805:
  2694                           
  2695                           ;lcd.c: 108:         Lcd_Write_Char(a[i]);
  2696   0011DC  500B               	movf	Lcd_Write_String@i^0,w,c
  2697   0011DE  2407               	addwf	Lcd_Write_String@a^0,w,c
  2698   0011E0  6E09               	movwf	??_Lcd_Write_String^0,c
  2699   0011E2  500C               	movf	(Lcd_Write_String@i+1)^0,w,c
  2700   0011E4  2008               	addwfc	(Lcd_Write_String@a+1)^0,w,c
  2701   0011E6  6E0A               	movwf	(??_Lcd_Write_String+1)^0,c
  2702   0011E8  C009  FFF6         	movff	??_Lcd_Write_String,tblptrl
  2703   0011EC  C00A  FFF7         	movff	??_Lcd_Write_String+1,tblptrh
  2704   0011F0  6AF8               	clrf	tblptru,c
  2705   0011F2  0E07               	movlw	(high __ramtop+-1)
  2706   0011F4  64F7               	cpfsgt	tblptrh,c
  2707   0011F6  D003               	bra	u1157
  2708   0011F8  0008               	tblrd		*
  2709   0011FA  50F5               	movf	tablat,w,c
  2710   0011FC  D005               	bra	u1150
  2711   0011FE                     u1157:
  2712   0011FE  CFF6 FFE1          	movff	tblptrl,fsr1l
  2713   001202  CFF7 FFE2          	movff	tblptrh,fsr1h
  2714   001206  50E7               	movf	indf1,w,c
  2715   001208                     u1150:
  2716   001208  ECA5  F009         	call	_Lcd_Write_Char
  2717   00120C  4A0B               	infsnz	Lcd_Write_String@i^0,f,c
  2718   00120E  2A0C               	incf	(Lcd_Write_String@i+1)^0,f,c
  2719   001210                     l1809:
  2720   001210  500B               	movf	Lcd_Write_String@i^0,w,c
  2721   001212  2407               	addwf	Lcd_Write_String@a^0,w,c
  2722   001214  6E09               	movwf	??_Lcd_Write_String^0,c
  2723   001216  500C               	movf	(Lcd_Write_String@i+1)^0,w,c
  2724   001218  2008               	addwfc	(Lcd_Write_String@a+1)^0,w,c
  2725   00121A  6E0A               	movwf	(??_Lcd_Write_String+1)^0,c
  2726   00121C  C009  FFF6         	movff	??_Lcd_Write_String,tblptrl
  2727   001220  C00A  FFF7         	movff	??_Lcd_Write_String+1,tblptrh
  2728   001224  6AF8               	clrf	tblptru,c
  2729   001226  0E07               	movlw	(high __ramtop+-1)
  2730   001228  64F7               	cpfsgt	tblptrh,c
  2731   00122A  D003               	bra	u1167
  2732   00122C  0008               	tblrd		*
  2733   00122E  50F5               	movf	tablat,w,c
  2734   001230  D005               	bra	u1160
  2735   001232                     u1167:
  2736   001232  CFF6 FFE1          	movff	tblptrl,fsr1l
  2737   001236  CFF7 FFE2          	movff	tblptrh,fsr1h
  2738   00123A  50E7               	movf	indf1,w,c
  2739   00123C                     u1160:
  2740   00123C  0900               	iorlw	0
  2741   00123E  A4D8               	btfss	status,2,c
  2742   001240  EF24  F009         	goto	u1171
  2743   001244  EF26  F009         	goto	u1170
  2744   001248                     u1171:
  2745   001248  EFEE  F008         	goto	l1805
  2746   00124C                     u1170:
  2747   00124C  0012               	return		;funcret
  2748   00124E                     __end_of_Lcd_Write_String:
  2749                           	callstack 0
  2750                           
  2751 ;; *************** function _Lcd_Write_Char *****************
  2752 ;; Defined at:
  2753 ;;		line 88 in file "lcd.c"
  2754 ;; Parameters:    Size  Location     Type
  2755 ;;  a               1    wreg     unsigned char 
  2756 ;; Auto vars:     Size  Location     Type
  2757 ;;  a               1    5[COMRAM] unsigned char 
  2758 ;;  y               1    4[COMRAM] unsigned char 
  2759 ;;  temp            1    3[COMRAM] unsigned char 
  2760 ;; Return value:  Size  Location     Type
  2761 ;;                  1    wreg      void 
  2762 ;; Registers used:
  2763 ;;		wreg, status,2, status,0, cstack
  2764 ;; Tracked objects:
  2765 ;;		On entry : 0/0
  2766 ;;		On exit  : 0/0
  2767 ;;		Unchanged: 0/0
  2768 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2769 ;;      Params:         0       0       0       0       0       0       0       0       0
  2770 ;;      Locals:         3       0       0       0       0       0       0       0       0
  2771 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2772 ;;      Totals:         3       0       0       0       0       0       0       0       0
  2773 ;;Total ram usage:        3 bytes
  2774 ;; Hardware stack levels used: 1
  2775 ;; Hardware stack levels required when called: 3
  2776 ;; This function calls:
  2777 ;;		_Lcd_Port
  2778 ;; This function is called by:
  2779 ;;		_Lcd_Write_String
  2780 ;;		_Lcd_CGRAM_CreateChar
  2781 ;; This function uses a non-reentrant model
  2782 ;;
  2783                           
  2784                           	psect	text12
  2785   00134A                     __ptext12:
  2786                           	callstack 0
  2787   00134A                     _Lcd_Write_Char:
  2788                           	callstack 24
  2789                           
  2790                           ;incstack = 0
  2791                           ;Lcd_Write_Char@a stored from wreg
  2792   00134A  6E06               	movwf	Lcd_Write_Char@a^0,c
  2793   00134C                     
  2794                           ;lcd.c: 88: void Lcd_Write_Char(char a);lcd.c: 89: {;lcd.c: 90:     char temp,y;;lcd.c: 
      +                          91:     temp = a&0x0F;
  2795   00134C  5006               	movf	Lcd_Write_Char@a^0,w,c
  2796   00134E  0B0F               	andlw	15
  2797   001350  6E04               	movwf	Lcd_Write_Char@temp^0,c
  2798                           
  2799                           ;lcd.c: 92:     y = a&0xF0;
  2800   001352  5006               	movf	Lcd_Write_Char@a^0,w,c
  2801   001354  0BF0               	andlw	240
  2802   001356  6E05               	movwf	Lcd_Write_Char@y^0,c
  2803   001358                     
  2804                           ;lcd.c: 93:     LATEbits.LE1 = 1;
  2805   001358  828D               	bsf	141,1,c	;volatile
  2806   00135A                     
  2807                           ;lcd.c: 94:     Lcd_Port(y>>4);
  2808   00135A  3805               	swapf	Lcd_Write_Char@y^0,w,c
  2809   00135C  0B0F               	andlw	15
  2810   00135E  EC58  F009         	call	_Lcd_Port
  2811   001362                     
  2812                           ;lcd.c: 95:     LATEbits.LE0 = 1;
  2813   001362  808D               	bsf	141,0,c	;volatile
  2814   001364                     
  2815                           ;lcd.c: 96:     _delay((unsigned long)((40)*(4000000/4000000.0)));
  2816   001364  0E0D               	movlw	13
  2817   001366                     u1627:
  2818   001366  2EE8               	decfsz	wreg,f,c
  2819   001368  D7FE               	bra	u1627
  2820   00136A  0000               	nop	
  2821   00136C                     
  2822                           ;lcd.c: 97:     LATEbits.LE0 = 0;
  2823   00136C  908D               	bcf	141,0,c	;volatile
  2824   00136E                     
  2825                           ;lcd.c: 98:     Lcd_Port(temp);
  2826   00136E  5004               	movf	Lcd_Write_Char@temp^0,w,c
  2827   001370  EC58  F009         	call	_Lcd_Port
  2828   001374                     
  2829                           ;lcd.c: 99:     LATEbits.LE0 = 1;
  2830   001374  808D               	bsf	141,0,c	;volatile
  2831   001376                     
  2832                           ;lcd.c: 100:     _delay((unsigned long)((40)*(4000000/4000000.0)));
  2833   001376  0E0D               	movlw	13
  2834   001378                     u1637:
  2835   001378  2EE8               	decfsz	wreg,f,c
  2836   00137A  D7FE               	bra	u1637
  2837   00137C  0000               	nop	
  2838   00137E                     
  2839                           ;lcd.c: 101:     LATEbits.LE0 = 0;
  2840   00137E  908D               	bcf	141,0,c	;volatile
  2841   001380  0012               	return		;funcret
  2842   001382                     __end_of_Lcd_Write_Char:
  2843                           	callstack 0
  2844                           
  2845 ;; *************** function _Lcd_Set_Cursor *****************
  2846 ;; Defined at:
  2847 ;;		line 26 in file "lcd.c"
  2848 ;; Parameters:    Size  Location     Type
  2849 ;;  a               1    wreg     unsigned char 
  2850 ;;  b               1    5[COMRAM] unsigned char 
  2851 ;; Auto vars:     Size  Location     Type
  2852 ;;  a               1    6[COMRAM] unsigned char 
  2853 ;;  temp            1    9[COMRAM] unsigned char 
  2854 ;;  y               1    8[COMRAM] unsigned char 
  2855 ;;  z               1    7[COMRAM] unsigned char 
  2856 ;; Return value:  Size  Location     Type
  2857 ;;                  1    wreg      void 
  2858 ;; Registers used:
  2859 ;;		wreg, status,2, status,0, cstack
  2860 ;; Tracked objects:
  2861 ;;		On entry : 0/0
  2862 ;;		On exit  : 0/0
  2863 ;;		Unchanged: 0/0
  2864 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2865 ;;      Params:         1       0       0       0       0       0       0       0       0
  2866 ;;      Locals:         4       0       0       0       0       0       0       0       0
  2867 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2868 ;;      Totals:         5       0       0       0       0       0       0       0       0
  2869 ;;Total ram usage:        5 bytes
  2870 ;; Hardware stack levels used: 1
  2871 ;; Hardware stack levels required when called: 4
  2872 ;; This function calls:
  2873 ;;		_Lcd_Cmd
  2874 ;; This function is called by:
  2875 ;;		_mostrar_conteo
  2876 ;;		_main
  2877 ;; This function uses a non-reentrant model
  2878 ;;
  2879                           
  2880                           	psect	text13
  2881   000E62                     __ptext13:
  2882                           	callstack 0
  2883   000E62                     _Lcd_Set_Cursor:
  2884                           	callstack 25
  2885                           
  2886                           ;incstack = 0
  2887                           ;Lcd_Set_Cursor@a stored from wreg
  2888   000E62  6E07               	movwf	Lcd_Set_Cursor@a^0,c
  2889   000E64                     
  2890                           ;lcd.c: 26: void Lcd_Set_Cursor(char a, char b);lcd.c: 27: {;lcd.c: 28:     char temp,z,
      +                          y;;lcd.c: 29:     if(a == 1)
  2891   000E64  0407               	decf	Lcd_Set_Cursor@a^0,w,c
  2892   000E66  A4D8               	btfss	status,2,c
  2893   000E68  EF38  F007         	goto	u1181
  2894   000E6C  EF3A  F007         	goto	u1180
  2895   000E70                     u1181:
  2896   000E70  EF4B  F007         	goto	l1825
  2897   000E74                     u1180:
  2898   000E74                     
  2899                           ;lcd.c: 30:     {;lcd.c: 31:         temp = 0x80 + b - 1;
  2900   000E74  5006               	movf	Lcd_Set_Cursor@b^0,w,c
  2901   000E76  0F7F               	addlw	127
  2902   000E78  6E0A               	movwf	Lcd_Set_Cursor@temp^0,c
  2903                           
  2904                           ;lcd.c: 32:         z = temp>>4;
  2905   000E7A  380A               	swapf	Lcd_Set_Cursor@temp^0,w,c
  2906   000E7C  0B0F               	andlw	15
  2907   000E7E  6E08               	movwf	Lcd_Set_Cursor@z^0,c
  2908                           
  2909                           ;lcd.c: 33:         y = temp & 0x0F;
  2910   000E80  500A               	movf	Lcd_Set_Cursor@temp^0,w,c
  2911   000E82  0B0F               	andlw	15
  2912   000E84  6E09               	movwf	Lcd_Set_Cursor@y^0,c
  2913   000E86                     
  2914                           ;lcd.c: 34:         Lcd_Cmd(z);
  2915   000E86  5008               	movf	Lcd_Set_Cursor@z^0,w,c
  2916   000E88  EC18  F00A         	call	_Lcd_Cmd
  2917   000E8C                     
  2918                           ;lcd.c: 35:         Lcd_Cmd(y);
  2919   000E8C  5009               	movf	Lcd_Set_Cursor@y^0,w,c
  2920   000E8E  EC18  F00A         	call	_Lcd_Cmd
  2921                           
  2922                           ;lcd.c: 36:     }
  2923   000E92  EF99  F007         	goto	l209
  2924   000E96                     l1825:
  2925   000E96  0E02               	movlw	2
  2926   000E98  1807               	xorwf	Lcd_Set_Cursor@a^0,w,c
  2927   000E9A  A4D8               	btfss	status,2,c
  2928   000E9C  EF52  F007         	goto	u1191
  2929   000EA0  EF54  F007         	goto	u1190
  2930   000EA4                     u1191:
  2931   000EA4  EF65  F007         	goto	l1833
  2932   000EA8                     u1190:
  2933   000EA8                     
  2934                           ;lcd.c: 38:     {;lcd.c: 39:         temp = 0xC0 + b - 1;
  2935   000EA8  5006               	movf	Lcd_Set_Cursor@b^0,w,c
  2936   000EAA  0FBF               	addlw	191
  2937   000EAC  6E0A               	movwf	Lcd_Set_Cursor@temp^0,c
  2938                           
  2939                           ;lcd.c: 40:         z = temp>>4;
  2940   000EAE  380A               	swapf	Lcd_Set_Cursor@temp^0,w,c
  2941   000EB0  0B0F               	andlw	15
  2942   000EB2  6E08               	movwf	Lcd_Set_Cursor@z^0,c
  2943                           
  2944                           ;lcd.c: 41:         y = temp & 0x0F;
  2945   000EB4  500A               	movf	Lcd_Set_Cursor@temp^0,w,c
  2946   000EB6  0B0F               	andlw	15
  2947   000EB8  6E09               	movwf	Lcd_Set_Cursor@y^0,c
  2948   000EBA                     
  2949                           ;lcd.c: 42:         Lcd_Cmd(z);
  2950   000EBA  5008               	movf	Lcd_Set_Cursor@z^0,w,c
  2951   000EBC  EC18  F00A         	call	_Lcd_Cmd
  2952   000EC0                     
  2953                           ;lcd.c: 43:         Lcd_Cmd(y);
  2954   000EC0  5009               	movf	Lcd_Set_Cursor@y^0,w,c
  2955   000EC2  EC18  F00A         	call	_Lcd_Cmd
  2956                           
  2957                           ;lcd.c: 44:     }
  2958   000EC6  EF99  F007         	goto	l209
  2959   000ECA                     l1833:
  2960   000ECA  0E03               	movlw	3
  2961   000ECC  1807               	xorwf	Lcd_Set_Cursor@a^0,w,c
  2962   000ECE  A4D8               	btfss	status,2,c
  2963   000ED0  EF6C  F007         	goto	u1201
  2964   000ED4  EF6E  F007         	goto	u1200
  2965   000ED8                     u1201:
  2966   000ED8  EF7F  F007         	goto	l1841
  2967   000EDC                     u1200:
  2968   000EDC                     
  2969                           ;lcd.c: 46:     {;lcd.c: 47:         temp = 0x94 + b - 1;
  2970   000EDC  5006               	movf	Lcd_Set_Cursor@b^0,w,c
  2971   000EDE  0F93               	addlw	147
  2972   000EE0  6E0A               	movwf	Lcd_Set_Cursor@temp^0,c
  2973                           
  2974                           ;lcd.c: 48:         z = temp>>4;
  2975   000EE2  380A               	swapf	Lcd_Set_Cursor@temp^0,w,c
  2976   000EE4  0B0F               	andlw	15
  2977   000EE6  6E08               	movwf	Lcd_Set_Cursor@z^0,c
  2978                           
  2979                           ;lcd.c: 49:         y = temp & 0x0F;
  2980   000EE8  500A               	movf	Lcd_Set_Cursor@temp^0,w,c
  2981   000EEA  0B0F               	andlw	15
  2982   000EEC  6E09               	movwf	Lcd_Set_Cursor@y^0,c
  2983   000EEE                     
  2984                           ;lcd.c: 50:         Lcd_Cmd(z);
  2985   000EEE  5008               	movf	Lcd_Set_Cursor@z^0,w,c
  2986   000EF0  EC18  F00A         	call	_Lcd_Cmd
  2987   000EF4                     
  2988                           ;lcd.c: 51:         Lcd_Cmd(y);
  2989   000EF4  5009               	movf	Lcd_Set_Cursor@y^0,w,c
  2990   000EF6  EC18  F00A         	call	_Lcd_Cmd
  2991                           
  2992                           ;lcd.c: 52:     }
  2993   000EFA  EF99  F007         	goto	l209
  2994   000EFE                     l1841:
  2995   000EFE  0E04               	movlw	4
  2996   000F00  1807               	xorwf	Lcd_Set_Cursor@a^0,w,c
  2997   000F02  A4D8               	btfss	status,2,c
  2998   000F04  EF86  F007         	goto	u1211
  2999   000F08  EF88  F007         	goto	u1210
  3000   000F0C                     u1211:
  3001   000F0C  EF99  F007         	goto	l205
  3002   000F10                     u1210:
  3003   000F10                     
  3004                           ;lcd.c: 54:     {;lcd.c: 55:         temp = 0xD4 + b - 1;
  3005   000F10  5006               	movf	Lcd_Set_Cursor@b^0,w,c
  3006   000F12  0FD3               	addlw	211
  3007   000F14  6E0A               	movwf	Lcd_Set_Cursor@temp^0,c
  3008                           
  3009                           ;lcd.c: 56:         z = temp>>4;
  3010   000F16  380A               	swapf	Lcd_Set_Cursor@temp^0,w,c
  3011   000F18  0B0F               	andlw	15
  3012   000F1A  6E08               	movwf	Lcd_Set_Cursor@z^0,c
  3013                           
  3014                           ;lcd.c: 57:         y = temp & 0x0F;
  3015   000F1C  500A               	movf	Lcd_Set_Cursor@temp^0,w,c
  3016   000F1E  0B0F               	andlw	15
  3017   000F20  6E09               	movwf	Lcd_Set_Cursor@y^0,c
  3018   000F22                     
  3019                           ;lcd.c: 58:         Lcd_Cmd(z);
  3020   000F22  5008               	movf	Lcd_Set_Cursor@z^0,w,c
  3021   000F24  EC18  F00A         	call	_Lcd_Cmd
  3022   000F28                     
  3023                           ;lcd.c: 59:         Lcd_Cmd(y);
  3024   000F28  5009               	movf	Lcd_Set_Cursor@y^0,w,c
  3025   000F2A  EC18  F00A         	call	_Lcd_Cmd
  3026   000F2E  EF99  F007         	goto	l209
  3027   000F32                     l205:
  3028   000F32                     l209:
  3029   000F32  0012               	return		;funcret
  3030   000F34                     __end_of_Lcd_Set_Cursor:
  3031                           	callstack 0
  3032                           
  3033 ;; *************** function _init_ports *****************
  3034 ;; Defined at:
  3035 ;;		line 46 in file "Cinta.c"
  3036 ;; Parameters:    Size  Location     Type
  3037 ;;		None
  3038 ;; Auto vars:     Size  Location     Type
  3039 ;;		None
  3040 ;; Return value:  Size  Location     Type
  3041 ;;                  1    wreg      void 
  3042 ;; Registers used:
  3043 ;;		wreg, status,2
  3044 ;; Tracked objects:
  3045 ;;		On entry : 0/0
  3046 ;;		On exit  : 0/0
  3047 ;;		Unchanged: 0/0
  3048 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3049 ;;      Params:         0       0       0       0       0       0       0       0       0
  3050 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3051 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3052 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3053 ;;Total ram usage:        0 bytes
  3054 ;; Hardware stack levels used: 1
  3055 ;; Hardware stack levels required when called: 2
  3056 ;; This function calls:
  3057 ;;		Nothing
  3058 ;; This function is called by:
  3059 ;;		_main
  3060 ;; This function uses a non-reentrant model
  3061 ;;
  3062                           
  3063                           	psect	text14
  3064   001450                     __ptext14:
  3065                           	callstack 0
  3066   001450                     _init_ports:
  3067                           	callstack 28
  3068   001450                     
  3069                           ;Cinta.c: 47:      ADCON1bits.PCFG=0x0F;
  3070   001450  0E0F               	movlw	15
  3071   001452  12C1               	iorwf	193,f,c	;volatile
  3072   001454                     
  3073                           ;Cinta.c: 48:      TRISB=0XFF;
  3074   001454  6893               	setf	147,c	;volatile
  3075                           
  3076                           ;Cinta.c: 49:      TRISA=0b00001111;
  3077   001456  0E0F               	movlw	15
  3078   001458  6E92               	movwf	146,c	;volatile
  3079   00145A                     
  3080                           ;Cinta.c: 50:      LATA=0X00;
  3081   00145A  6A89               	clrf	137,c	;volatile
  3082   00145C                     
  3083                           ;Cinta.c: 51:      TRISD=0X00;
  3084   00145C  6A95               	clrf	149,c	;volatile
  3085   00145E                     
  3086                           ;Cinta.c: 52:      TRISE=0X00;
  3087   00145E  6A96               	clrf	150,c	;volatile
  3088   001460                     
  3089                           ;Cinta.c: 53:      LATE=0;
  3090   001460  6A8D               	clrf	141,c	;volatile
  3091   001462                     
  3092                           ;Cinta.c: 54:      TRISC=0X00;
  3093   001462  6A94               	clrf	148,c	;volatile
  3094   001464                     
  3095                           ;Cinta.c: 55:      TRISCbits.RC7=1;
  3096   001464  8E94               	bsf	148,7,c	;volatile
  3097   001466  0012               	return		;funcret
  3098   001468                     __end_of_init_ports:
  3099                           	callstack 0
  3100                           
  3101 ;; *************** function _init_maqueta *****************
  3102 ;; Defined at:
  3103 ;;		line 66 in file "Cinta.c"
  3104 ;; Parameters:    Size  Location     Type
  3105 ;;		None
  3106 ;; Auto vars:     Size  Location     Type
  3107 ;;		None
  3108 ;; Return value:  Size  Location     Type
  3109 ;;                  1    wreg      void 
  3110 ;; Registers used:
  3111 ;;		None
  3112 ;; Tracked objects:
  3113 ;;		On entry : 0/0
  3114 ;;		On exit  : 0/0
  3115 ;;		Unchanged: 0/0
  3116 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3117 ;;      Params:         0       0       0       0       0       0       0       0       0
  3118 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3119 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3120 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3121 ;;Total ram usage:        0 bytes
  3122 ;; Hardware stack levels used: 1
  3123 ;; Hardware stack levels required when called: 2
  3124 ;; This function calls:
  3125 ;;		Nothing
  3126 ;; This function is called by:
  3127 ;;		_main
  3128 ;; This function uses a non-reentrant model
  3129 ;;
  3130                           
  3131                           	psect	text15
  3132   00124E                     __ptext15:
  3133                           	callstack 0
  3134   00124E                     _init_maqueta:
  3135                           	callstack 28
  3136   00124E                     
  3137                           ;Cinta.c: 67:     if(PORTBbits.RB5!=1){
  3138   00124E  BA81               	btfsc	129,5,c	;volatile
  3139   001250  EF2C  F009         	goto	u401
  3140   001254  EF2E  F009         	goto	u400
  3141   001258                     u401:
  3142   001258  EF37  F009         	goto	l78
  3143   00125C                     u400:
  3144   00125C                     
  3145                           ;Cinta.c: 68:         LATAbits.LA6=1;
  3146   00125C  8C89               	bsf	137,6,c	;volatile
  3147   00125E                     l79:
  3148   00125E  AA81               	btfss	129,5,c	;volatile
  3149   001260  EF34  F009         	goto	u411
  3150   001264  EF36  F009         	goto	u410
  3151   001268                     u411:
  3152   001268  EF2F  F009         	goto	l79
  3153   00126C                     u410:
  3154   00126C                     
  3155                           ;Cinta.c: 70:         LATAbits.LA6=0;
  3156   00126C  9C89               	bcf	137,6,c	;volatile
  3157   00126E                     l78:
  3158                           
  3159                           ;Cinta.c: 72:     if(PORTBbits.RB1!=1){
  3160   00126E  B281               	btfsc	129,1,c	;volatile
  3161   001270  EF3C  F009         	goto	u421
  3162   001274  EF3E  F009         	goto	u420
  3163   001278                     u421:
  3164   001278  EF47  F009         	goto	l82
  3165   00127C                     u420:
  3166   00127C                     
  3167                           ;Cinta.c: 73:         LATDbits.LATD3=1;
  3168   00127C  868C               	bsf	140,3,c	;volatile
  3169   00127E                     l83:
  3170   00127E  A281               	btfss	129,1,c	;volatile
  3171   001280  EF44  F009         	goto	u431
  3172   001284  EF46  F009         	goto	u430
  3173   001288                     u431:
  3174   001288  EF3F  F009         	goto	l83
  3175   00128C                     u430:
  3176   00128C                     
  3177                           ;Cinta.c: 75:          LATDbits.LATD3=0;
  3178   00128C  968C               	bcf	140,3,c	;volatile
  3179   00128E                     l82:
  3180                           
  3181                           ;Cinta.c: 77:     if(PORTAbits.RA3!=1){
  3182   00128E  B680               	btfsc	128,3,c	;volatile
  3183   001290  EF4C  F009         	goto	u441
  3184   001294  EF4E  F009         	goto	u440
  3185   001298                     u441:
  3186   001298  EF57  F009         	goto	l90
  3187   00129C                     u440:
  3188   00129C                     
  3189                           ;Cinta.c: 78:         LATCbits.LC1=1;
  3190   00129C  828B               	bsf	139,1,c	;volatile
  3191   00129E                     l87:
  3192   00129E  A680               	btfss	128,3,c	;volatile
  3193   0012A0  EF54  F009         	goto	u451
  3194   0012A4  EF56  F009         	goto	u450
  3195   0012A8                     u451:
  3196   0012A8  EF4F  F009         	goto	l87
  3197   0012AC                     u450:
  3198   0012AC                     
  3199                           ;Cinta.c: 80:         LATCbits.LC1=0;
  3200   0012AC  928B               	bcf	139,1,c	;volatile
  3201   0012AE                     l90:
  3202   0012AE  0012               	return		;funcret
  3203   0012B0                     __end_of_init_maqueta:
  3204                           	callstack 0
  3205                           
  3206 ;; *************** function _init_int *****************
  3207 ;; Defined at:
  3208 ;;		line 58 in file "Cinta.c"
  3209 ;; Parameters:    Size  Location     Type
  3210 ;;		None
  3211 ;; Auto vars:     Size  Location     Type
  3212 ;;		None
  3213 ;; Return value:  Size  Location     Type
  3214 ;;                  1    wreg      void 
  3215 ;; Registers used:
  3216 ;;		None
  3217 ;; Tracked objects:
  3218 ;;		On entry : 0/0
  3219 ;;		On exit  : 0/0
  3220 ;;		Unchanged: 0/0
  3221 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3222 ;;      Params:         0       0       0       0       0       0       0       0       0
  3223 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3224 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3225 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3226 ;;Total ram usage:        0 bytes
  3227 ;; Hardware stack levels used: 1
  3228 ;; Hardware stack levels required when called: 2
  3229 ;; This function calls:
  3230 ;;		Nothing
  3231 ;; This function is called by:
  3232 ;;		_main
  3233 ;; This function uses a non-reentrant model
  3234 ;;
  3235                           
  3236                           	psect	text16
  3237   001468                     __ptext16:
  3238                           	callstack 0
  3239   001468                     _init_int:
  3240                           	callstack 28
  3241   001468                     
  3242                           ;Cinta.c: 59:     INTCONbits.GIEH=0;
  3243   001468  9EF2               	bcf	242,7,c	;volatile
  3244                           
  3245                           ;Cinta.c: 60:     INTCONbits.GIEL=0;
  3246   00146A  9CF2               	bcf	242,6,c	;volatile
  3247                           
  3248                           ;Cinta.c: 61:     INTCONbits.RBIE=0;
  3249   00146C  96F2               	bcf	242,3,c	;volatile
  3250                           
  3251                           ;Cinta.c: 62:     INTCONbits.RBIF=0;
  3252   00146E  90F2               	bcf	242,0,c	;volatile
  3253                           
  3254                           ;Cinta.c: 63:     RCONbits.IPEN=0;
  3255   001470  9ED0               	bcf	208,7,c	;volatile
  3256                           
  3257                           ;Cinta.c: 64:     INTCON2bits.RBIP=0;
  3258   001472  90F1               	bcf	241,0,c	;volatile
  3259   001474  0012               	return		;funcret
  3260   001476                     __end_of_init_int:
  3261                           	callstack 0
  3262                           
  3263 ;; *************** function _Lcd_Init *****************
  3264 ;; Defined at:
  3265 ;;		line 63 in file "lcd.c"
  3266 ;; Parameters:    Size  Location     Type
  3267 ;;		None
  3268 ;; Auto vars:     Size  Location     Type
  3269 ;;		None
  3270 ;; Return value:  Size  Location     Type
  3271 ;;                  1    wreg      void 
  3272 ;; Registers used:
  3273 ;;		wreg, status,2, cstack
  3274 ;; Tracked objects:
  3275 ;;		On entry : 0/0
  3276 ;;		On exit  : 0/0
  3277 ;;		Unchanged: 0/0
  3278 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3279 ;;      Params:         0       0       0       0       0       0       0       0       0
  3280 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3281 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3282 ;;      Totals:         1       0       0       0       0       0       0       0       0
  3283 ;;Total ram usage:        1 bytes
  3284 ;; Hardware stack levels used: 1
  3285 ;; Hardware stack levels required when called: 5
  3286 ;; This function calls:
  3287 ;;		_Lcd_Clear
  3288 ;;		_Lcd_Cmd
  3289 ;;		_Lcd_Port
  3290 ;; This function is called by:
  3291 ;;		_main
  3292 ;; This function uses a non-reentrant model
  3293 ;;
  3294                           
  3295                           	psect	text17
  3296   00114E                     __ptext17:
  3297                           	callstack 0
  3298   00114E                     _Lcd_Init:
  3299                           	callstack 25
  3300   00114E                     
  3301                           ;lcd.c: 65:  TRISEbits.TRISE1 = 0;
  3302   00114E  9296               	bcf	150,1,c	;volatile
  3303                           
  3304                           ;lcd.c: 66:  TRISEbits.TRISE0 = 0;
  3305   001150  9096               	bcf	150,0,c	;volatile
  3306                           
  3307                           ;lcd.c: 67:  TRISDbits.TRISD4 = 0;
  3308   001152  9895               	bcf	149,4,c	;volatile
  3309                           
  3310                           ;lcd.c: 68:  TRISDbits.TRISD5 = 0;
  3311   001154  9A95               	bcf	149,5,c	;volatile
  3312                           
  3313                           ;lcd.c: 69:  TRISDbits.TRISD6 = 0;
  3314   001156  9C95               	bcf	149,6,c	;volatile
  3315                           
  3316                           ;lcd.c: 70:  TRISDbits.TRISD7 = 0;
  3317   001158  9E95               	bcf	149,7,c	;volatile
  3318   00115A                     
  3319                           ;lcd.c: 71:     Lcd_Port(0x00);
  3320   00115A  0E00               	movlw	0
  3321   00115C  EC58  F009         	call	_Lcd_Port
  3322   001160                     
  3323                           ;lcd.c: 72:     _delay((unsigned long)((20)*(4000000/4000.0)));
  3324   001160  0E1A               	movlw	26
  3325   001162  6E06               	movwf	??_Lcd_Init^0,c
  3326   001164  0EF8               	movlw	248
  3327   001166                     u1647:
  3328   001166  2EE8               	decfsz	wreg,f,c
  3329   001168  D7FE               	bra	u1647
  3330   00116A  2E06               	decfsz	??_Lcd_Init^0,f,c
  3331   00116C  D7FC               	bra	u1647
  3332   00116E  D000               	nop2	
  3333   001170                     
  3334                           ;lcd.c: 73:     Lcd_Cmd(0x03);
  3335   001170  0E03               	movlw	3
  3336   001172  EC18  F00A         	call	_Lcd_Cmd
  3337   001176                     
  3338                           ;lcd.c: 74:     _delay((unsigned long)((5)*(4000000/4000.0)));
  3339   001176  0E07               	movlw	7
  3340   001178  6E06               	movwf	??_Lcd_Init^0,c
  3341   00117A  0E7D               	movlw	125
  3342   00117C                     u1657:
  3343   00117C  2EE8               	decfsz	wreg,f,c
  3344   00117E  D7FE               	bra	u1657
  3345   001180  2E06               	decfsz	??_Lcd_Init^0,f,c
  3346   001182  D7FC               	bra	u1657
  3347   001184  0000               	nop	
  3348   001186                     
  3349                           ;lcd.c: 75:     Lcd_Cmd(0x03);
  3350   001186  0E03               	movlw	3
  3351   001188  EC18  F00A         	call	_Lcd_Cmd
  3352   00118C                     
  3353                           ;lcd.c: 76:     _delay((unsigned long)((11)*(4000000/4000.0)));
  3354   00118C  0E0F               	movlw	15
  3355   00118E  6E06               	movwf	??_Lcd_Init^0,c
  3356   001190  0E48               	movlw	72
  3357   001192                     u1667:
  3358   001192  2EE8               	decfsz	wreg,f,c
  3359   001194  D7FE               	bra	u1667
  3360   001196  2E06               	decfsz	??_Lcd_Init^0,f,c
  3361   001198  D7FC               	bra	u1667
  3362   00119A                     
  3363                           ;lcd.c: 77:     Lcd_Cmd(0x03);
  3364   00119A  0E03               	movlw	3
  3365   00119C  EC18  F00A         	call	_Lcd_Cmd
  3366   0011A0                     
  3367                           ;lcd.c: 78:     Lcd_Cmd(0x02);
  3368   0011A0  0E02               	movlw	2
  3369   0011A2  EC18  F00A         	call	_Lcd_Cmd
  3370   0011A6                     
  3371                           ;lcd.c: 79:     Lcd_Cmd(0x02);
  3372   0011A6  0E02               	movlw	2
  3373   0011A8  EC18  F00A         	call	_Lcd_Cmd
  3374   0011AC                     
  3375                           ;lcd.c: 80:     Lcd_Cmd(0x08);
  3376   0011AC  0E08               	movlw	8
  3377   0011AE  EC18  F00A         	call	_Lcd_Cmd
  3378   0011B2                     
  3379                           ;lcd.c: 81:     Lcd_Cmd(0x00);
  3380   0011B2  0E00               	movlw	0
  3381   0011B4  EC18  F00A         	call	_Lcd_Cmd
  3382   0011B8                     
  3383                           ;lcd.c: 82:     Lcd_Cmd(0x0C);
  3384   0011B8  0E0C               	movlw	12
  3385   0011BA  EC18  F00A         	call	_Lcd_Cmd
  3386   0011BE                     
  3387                           ;lcd.c: 83:     Lcd_Cmd(0x00);
  3388   0011BE  0E00               	movlw	0
  3389   0011C0  EC18  F00A         	call	_Lcd_Cmd
  3390   0011C4                     
  3391                           ;lcd.c: 84:     Lcd_Cmd(0x06);
  3392   0011C4  0E06               	movlw	6
  3393   0011C6  EC18  F00A         	call	_Lcd_Cmd
  3394   0011CA                     
  3395                           ;lcd.c: 85:     Lcd_Clear();
  3396   0011CA  EC3B  F00A         	call	_Lcd_Clear	;wreg free
  3397   0011CE  0012               	return		;funcret
  3398   0011D0                     __end_of_Lcd_Init:
  3399                           	callstack 0
  3400                           
  3401 ;; *************** function _Lcd_Clear *****************
  3402 ;; Defined at:
  3403 ;;		line 20 in file "lcd.c"
  3404 ;; Parameters:    Size  Location     Type
  3405 ;;		None
  3406 ;; Auto vars:     Size  Location     Type
  3407 ;;		None
  3408 ;; Return value:  Size  Location     Type
  3409 ;;                  1    wreg      void 
  3410 ;; Registers used:
  3411 ;;		wreg, status,2, cstack
  3412 ;; Tracked objects:
  3413 ;;		On entry : 0/0
  3414 ;;		On exit  : 0/0
  3415 ;;		Unchanged: 0/0
  3416 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3417 ;;      Params:         0       0       0       0       0       0       0       0       0
  3418 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3419 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3420 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3421 ;;Total ram usage:        0 bytes
  3422 ;; Hardware stack levels used: 1
  3423 ;; Hardware stack levels required when called: 4
  3424 ;; This function calls:
  3425 ;;		_Lcd_Cmd
  3426 ;; This function is called by:
  3427 ;;		_mostrar_conteo
  3428 ;;		_Lcd_Init
  3429 ;; This function uses a non-reentrant model
  3430 ;;
  3431                           
  3432                           	psect	text18
  3433   001476                     __ptext18:
  3434                           	callstack 0
  3435   001476                     _Lcd_Clear:
  3436                           	callstack 25
  3437   001476                     
  3438                           ;lcd.c: 22:     Lcd_Cmd(0);
  3439   001476  0E00               	movlw	0
  3440   001478  EC18  F00A         	call	_Lcd_Cmd
  3441                           
  3442                           ;lcd.c: 23:     Lcd_Cmd(1);
  3443   00147C  0E01               	movlw	1
  3444   00147E  EC18  F00A         	call	_Lcd_Cmd
  3445   001482  0012               	return		;funcret
  3446   001484                     __end_of_Lcd_Clear:
  3447                           	callstack 0
  3448                           
  3449 ;; *************** function _Lcd_Cmd *****************
  3450 ;; Defined at:
  3451 ;;		line 11 in file "lcd.c"
  3452 ;; Parameters:    Size  Location     Type
  3453 ;;  a               1    wreg     unsigned char 
  3454 ;; Auto vars:     Size  Location     Type
  3455 ;;  a               1    4[COMRAM] unsigned char 
  3456 ;; Return value:  Size  Location     Type
  3457 ;;                  1    wreg      void 
  3458 ;; Registers used:
  3459 ;;		wreg, status,2, cstack
  3460 ;; Tracked objects:
  3461 ;;		On entry : 0/0
  3462 ;;		On exit  : 0/0
  3463 ;;		Unchanged: 0/0
  3464 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3465 ;;      Params:         0       0       0       0       0       0       0       0       0
  3466 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3467 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3468 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3469 ;;Total ram usage:        2 bytes
  3470 ;; Hardware stack levels used: 1
  3471 ;; Hardware stack levels required when called: 3
  3472 ;; This function calls:
  3473 ;;		_Lcd_Port
  3474 ;; This function is called by:
  3475 ;;		_mostrar_conteo
  3476 ;;		_main
  3477 ;;		_Lcd_Clear
  3478 ;;		_Lcd_Set_Cursor
  3479 ;;		_Lcd_Init
  3480 ;;		_Lcd_Shift_Right
  3481 ;;		_Lcd_Shift_Left
  3482 ;;		_Lcd_Blink
  3483 ;;		_Lcd_NoBlink
  3484 ;;		_Lcd_CGRAM_Init
  3485 ;;		_Lcd_CGRAM_Close
  3486 ;; This function uses a non-reentrant model
  3487 ;;
  3488                           
  3489                           	psect	text19
  3490   001430                     __ptext19:
  3491                           	callstack 0
  3492   001430                     _Lcd_Cmd:
  3493                           	callstack 25
  3494                           
  3495                           ;incstack = 0
  3496                           ;Lcd_Cmd@a stored from wreg
  3497   001430  6E05               	movwf	Lcd_Cmd@a^0,c
  3498   001432                     
  3499                           ;lcd.c: 11: void Lcd_Cmd(char a);lcd.c: 12: {;lcd.c: 13:     LATEbits.LE1 = 0;
  3500   001432  928D               	bcf	141,1,c	;volatile
  3501   001434                     
  3502                           ;lcd.c: 14:     Lcd_Port(a);
  3503   001434  5005               	movf	Lcd_Cmd@a^0,w,c
  3504   001436  EC58  F009         	call	_Lcd_Port
  3505   00143A                     
  3506                           ;lcd.c: 15:     LATEbits.LE0 = 1;
  3507   00143A  808D               	bsf	141,0,c	;volatile
  3508   00143C                     
  3509                           ;lcd.c: 16:     _delay((unsigned long)((4)*(4000000/4000.0)));
  3510   00143C  0E06               	movlw	6
  3511   00143E  6E04               	movwf	??_Lcd_Cmd^0,c
  3512   001440  0E30               	movlw	48
  3513   001442                     u1677:
  3514   001442  2EE8               	decfsz	wreg,f,c
  3515   001444  D7FE               	bra	u1677
  3516   001446  2E04               	decfsz	??_Lcd_Cmd^0,f,c
  3517   001448  D7FC               	bra	u1677
  3518   00144A  D000               	nop2	
  3519   00144C                     
  3520                           ;lcd.c: 17:     LATEbits.LE0 = 0;
  3521   00144C  908D               	bcf	141,0,c	;volatile
  3522   00144E  0012               	return		;funcret
  3523   001450                     __end_of_Lcd_Cmd:
  3524                           	callstack 0
  3525                           
  3526 ;; *************** function _Lcd_Port *****************
  3527 ;; Defined at:
  3528 ;;		line 3 in file "lcd.c"
  3529 ;; Parameters:    Size  Location     Type
  3530 ;;  a               1    wreg     unsigned char 
  3531 ;; Auto vars:     Size  Location     Type
  3532 ;;  a               1    2[COMRAM] unsigned char 
  3533 ;; Return value:  Size  Location     Type
  3534 ;;                  1    wreg      void 
  3535 ;; Registers used:
  3536 ;;		wreg
  3537 ;; Tracked objects:
  3538 ;;		On entry : 0/0
  3539 ;;		On exit  : 0/0
  3540 ;;		Unchanged: 0/0
  3541 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3542 ;;      Params:         0       0       0       0       0       0       0       0       0
  3543 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3544 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3545 ;;      Totals:         1       0       0       0       0       0       0       0       0
  3546 ;;Total ram usage:        1 bytes
  3547 ;; Hardware stack levels used: 1
  3548 ;; Hardware stack levels required when called: 2
  3549 ;; This function calls:
  3550 ;;		Nothing
  3551 ;; This function is called by:
  3552 ;;		_Lcd_Cmd
  3553 ;;		_Lcd_Init
  3554 ;;		_Lcd_Write_Char
  3555 ;; This function uses a non-reentrant model
  3556 ;;
  3557                           
  3558                           	psect	text20
  3559   0012B0                     __ptext20:
  3560                           	callstack 0
  3561   0012B0                     _Lcd_Port:
  3562                           	callstack 24
  3563                           
  3564                           ;incstack = 0
  3565                           ;Lcd_Port@a stored from wreg
  3566   0012B0  6E03               	movwf	Lcd_Port@a^0,c
  3567   0012B2                     
  3568                           ;lcd.c: 3: void Lcd_Port(char a);lcd.c: 4: {;lcd.c: 5:     (a & 1) ? (LATDbits.LD4 = 1) 
      +                          : (LATDbits.LD4 = 0);
  3569   0012B2  A003               	btfss	Lcd_Port@a^0,0,c
  3570   0012B4  EF5E  F009         	goto	u181
  3571   0012B8  EF60  F009         	goto	u180
  3572   0012BC                     u181:
  3573   0012BC  EF63  F009         	goto	l178
  3574   0012C0                     u180:
  3575   0012C0  888C               	bsf	140,4,c	;volatile
  3576   0012C2  EF64  F009         	goto	l1127
  3577   0012C6                     l178:
  3578   0012C6  988C               	bcf	140,4,c	;volatile
  3579   0012C8                     l1127:
  3580                           
  3581                           ;lcd.c: 6:     (a & 2) ? (LATDbits.LD5 = 1) : (LATDbits.LD5 = 0);
  3582   0012C8  A203               	btfss	Lcd_Port@a^0,1,c
  3583   0012CA  EF69  F009         	goto	u191
  3584   0012CE  EF6B  F009         	goto	u190
  3585   0012D2                     u191:
  3586   0012D2  EF6E  F009         	goto	l182
  3587   0012D6                     u190:
  3588   0012D6  8A8C               	bsf	140,5,c	;volatile
  3589   0012D8  EF6F  F009         	goto	l1131
  3590   0012DC                     l182:
  3591   0012DC  9A8C               	bcf	140,5,c	;volatile
  3592   0012DE                     l1131:
  3593                           
  3594                           ;lcd.c: 7:     (a & 4) ? (LATDbits.LD6 = 1) : (LATDbits.LD6 = 0);
  3595   0012DE  A403               	btfss	Lcd_Port@a^0,2,c
  3596   0012E0  EF74  F009         	goto	u201
  3597   0012E4  EF76  F009         	goto	u200
  3598   0012E8                     u201:
  3599   0012E8  EF79  F009         	goto	l186
  3600   0012EC                     u200:
  3601   0012EC  8C8C               	bsf	140,6,c	;volatile
  3602   0012EE  EF7A  F009         	goto	l1135
  3603   0012F2                     l186:
  3604   0012F2  9C8C               	bcf	140,6,c	;volatile
  3605   0012F4                     l1135:
  3606                           
  3607                           ;lcd.c: 8:     (a & 8) ? (LATDbits.LD7 = 1) : (LATDbits.LD7 = 0);
  3608   0012F4  A603               	btfss	Lcd_Port@a^0,3,c
  3609   0012F6  EF7F  F009         	goto	u211
  3610   0012FA  EF81  F009         	goto	u210
  3611   0012FE                     u211:
  3612   0012FE  EF84  F009         	goto	l190
  3613   001302                     u210:
  3614   001302  8E8C               	bsf	140,7,c	;volatile
  3615   001304  EF85  F009         	goto	l193
  3616   001308                     l190:
  3617   001308  9E8C               	bcf	140,7,c	;volatile
  3618   00130A                     l193:
  3619   00130A  0012               	return		;funcret
  3620   00130C                     __end_of_Lcd_Port:
  3621                           	callstack 0
  3622                           
  3623 ;; *************** function _LowISR *****************
  3624 ;; Defined at:
  3625 ;;		line 137 in file "Cinta.c"
  3626 ;; Parameters:    Size  Location     Type
  3627 ;;		None
  3628 ;; Auto vars:     Size  Location     Type
  3629 ;;  dummy           1    1[COMRAM] volatile unsigned char 
  3630 ;; Return value:  Size  Location     Type
  3631 ;;                  1    wreg      void 
  3632 ;; Registers used:
  3633 ;;		None
  3634 ;; Tracked objects:
  3635 ;;		On entry : 0/0
  3636 ;;		On exit  : 0/0
  3637 ;;		Unchanged: 0/0
  3638 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3639 ;;      Params:         0       0       0       0       0       0       0       0       0
  3640 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3641 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3642 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3643 ;;Total ram usage:        2 bytes
  3644 ;; Hardware stack levels used: 1
  3645 ;; Hardware stack levels required when called: 1
  3646 ;; This function calls:
  3647 ;;		Nothing
  3648 ;; This function is called by:
  3649 ;;		Interrupt level 1
  3650 ;; This function uses a non-reentrant model
  3651 ;;
  3652                           
  3653                           	psect	intcodelo
  3654   000018                     __pintcodelo:
  3655                           	callstack 0
  3656   000018                     _LowISR:
  3657                           	callstack 22
  3658                           
  3659                           ;incstack = 0
  3660   000018  8052               	bsf	int$flags,0,c	;set compiler interrupt flag (level 1)
  3661   00001A  CFE0 F001          	movff	bsr,??_LowISR
  3662   00001E                     
  3663                           ;Cinta.c: 138:      if (INTCONbits.RBIF){
  3664   00001E  A0F2               	btfss	242,0,c	;volatile
  3665   000020  EF14  F000         	goto	i1u57_21
  3666   000024  EF16  F000         	goto	i1u57_20
  3667   000028                     i1u57_21:
  3668   000028  EF19  F000         	goto	i1l115
  3669   00002C                     i1u57_20:
  3670   00002C                     
  3671                           ;Cinta.c: 139:        volatile unsigned char dummy = PORTB;
  3672   00002C  CF81 F002          	movff	3969,LowISR@dummy	;volatile
  3673                           
  3674                           ;Cinta.c: 140:         INTCONbits.RBIF=0;
  3675   000030  90F2               	bcf	242,0,c	;volatile
  3676   000032                     i1l115:
  3677   000032  C001  FFE0         	movff	??_LowISR,bsr
  3678   000036  9052               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  3679   000038  0010               	retfie	
  3680   00003A                     __end_of_LowISR:
  3681                           	callstack 0
  3682                           
  3683 ;; *************** function _HighISR *****************
  3684 ;; Defined at:
  3685 ;;		line 131 in file "Cinta.c"
  3686 ;; Parameters:    Size  Location     Type
  3687 ;;		None
  3688 ;; Auto vars:     Size  Location     Type
  3689 ;;		None
  3690 ;; Return value:  Size  Location     Type
  3691 ;;                  1    wreg      void 
  3692 ;; Registers used:
  3693 ;;		None
  3694 ;; Tracked objects:
  3695 ;;		On entry : 0/0
  3696 ;;		On exit  : 0/0
  3697 ;;		Unchanged: 0/0
  3698 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3699 ;;      Params:         0       0       0       0       0       0       0       0       0
  3700 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3701 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3702 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3703 ;;Total ram usage:        0 bytes
  3704 ;; Hardware stack levels used: 1
  3705 ;; This function calls:
  3706 ;;		Nothing
  3707 ;; This function is called by:
  3708 ;;		Interrupt level 2
  3709 ;; This function uses a non-reentrant model
  3710 ;;
  3711                           
  3712                           	psect	intcode
  3713   000008                     __pintcode:
  3714                           	callstack 0
  3715   000008                     _HighISR:
  3716                           	callstack 22
  3717                           
  3718                           ;incstack = 0
  3719   000008  8252               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  3720   00000A  ED42  F00A         	call	int_func,f	;refresh shadow registers
  3721                           
  3722                           	psect	intcode_body
  3723   001484                     __pintcode_body:
  3724                           	callstack 22
  3725   001484                     int_func:
  3726                           	callstack 22
  3727   001484  0006               	pop		; remove dummy address from shadow register refresh
  3728   001486  9252               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  3729   001488  0011               	retfie		f
  3730   00148A                     __end_of_HighISR:
  3731                           	callstack 0
  3732                           
  3733                           	psect	rparam
  3734   000001                     ___rparam_used  equ	1
  3735   000000                     ___param_bank   equ	0
  3736   000000                     __Lparam        equ	__Lrparam
  3737   000000                     __Hparam        equ	__Hrparam
  3738                           
  3739                           	psect	temp
  3740   000052                     btemp:
  3741                           	callstack 0
  3742   000052                     	ds	1
  3743   000052                     int$flags       set	btemp
  3744   000053                     wtemp8          set	btemp+1
  3745   000053                     ttemp5          set	btemp+1
  3746   000056                     ttemp6          set	btemp+4
  3747   00005A                     ttemp7          set	btemp+8
  3748                           
  3749                           	psect	config
  3750                           
  3751                           ;Config register CONFIG1L @ 0x300000
  3752                           ;	PLL Prescaler Selection bits
  3753                           ;	PLLDIV = 1, No prescale (4 MHz oscillator input drives PLL directly)
  3754                           ;	System Clock Postscaler Selection bits
  3755                           ;	CPUDIV = OSC1_PLL2, [Primary Oscillator Src: /1][96 MHz PLL Src: /2]
  3756                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
  3757                           ;	USBDIV = 1, USB clock source comes directly from the primary oscillator block with no 
      +                          postscale
  3758   300000                     	org	3145728
  3759   300000  00                 	db	0
  3760                           
  3761                           ;Config register CONFIG1H @ 0x300001
  3762                           ;	Oscillator Selection bits
  3763                           ;	FOSC = INTOSCIO_EC, Internal oscillator, port function on RA6, EC used by USB (INTIO)
  3764                           ;	Fail-Safe Clock Monitor Enable bit
  3765                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  3766                           ;	Internal/External Oscillator Switchover bit
  3767                           ;	IESO = OFF, Oscillator Switchover mode disabled
  3768   300001                     	org	3145729
  3769   300001  08                 	db	8
  3770                           
  3771                           ;Config register CONFIG2L @ 0x300002
  3772                           ;	Power-up Timer Enable bit
  3773                           ;	PWRT = OFF, PWRT disabled
  3774                           ;	Brown-out Reset Enable bits
  3775                           ;	BOR = OFF, Brown-out Reset disabled in hardware and software
  3776                           ;	Brown-out Reset Voltage bits
  3777                           ;	BORV = 3, Minimum setting 2.05V
  3778                           ;	USB Voltage Regulator Enable bit
  3779                           ;	VREGEN = OFF, USB voltage regulator disabled
  3780   300002                     	org	3145730
  3781   300002  19                 	db	25
  3782                           
  3783                           ;Config register CONFIG2H @ 0x300003
  3784                           ;	Watchdog Timer Enable bit
  3785                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  3786                           ;	Watchdog Timer Postscale Select bits
  3787                           ;	WDTPS = 32768, 1:32768
  3788   300003                     	org	3145731
  3789   300003  1E                 	db	30
  3790                           
  3791                           ; Padding undefined space
  3792   300004                     	org	3145732
  3793   300004  FF                 	db	255
  3794                           
  3795                           ;Config register CONFIG3H @ 0x300005
  3796                           ;	CCP2 MUX bit
  3797                           ;	CCP2MX = OFF, CCP2 input/output is multiplexed with RB3
  3798                           ;	PORTB A/D Enable bit
  3799                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  3800                           ;	Low-Power Timer 1 Oscillator Enable bit
  3801                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  3802                           ;	MCLR Pin Enable bit
  3803                           ;	MCLRE = OFF, RE3 input pin enabled; MCLR pin disabled
  3804   300005                     	org	3145733
  3805   300005  00                 	db	0
  3806                           
  3807                           ;Config register CONFIG4L @ 0x300006
  3808                           ;	Stack Full/Underflow Reset Enable bit
  3809                           ;	STVREN = OFF, Stack full/underflow will not cause Reset
  3810                           ;	Single-Supply ICSP Enable bit
  3811                           ;	LVP = OFF, Single-Supply ICSP disabled
  3812                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
  3813                           ;	ICPRT = ON, ICPORT enabled
  3814                           ;	Extended Instruction Set Enable bit
  3815                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  3816                           ;	Background Debugger Enable bit
  3817                           ;	DEBUG = 0x1, unprogrammed default
  3818   300006                     	org	3145734
  3819   300006  A0                 	db	160
  3820                           
  3821                           ; Padding undefined space
  3822   300007                     	org	3145735
  3823   300007  FF                 	db	255
  3824                           
  3825                           ;Config register CONFIG5L @ 0x300008
  3826                           ;	Code Protection bit
  3827                           ;	CP0 = OFF, Block 0 (000800-001FFFh) is not code-protected
  3828                           ;	Code Protection bit
  3829                           ;	CP1 = OFF, Block 1 (002000-003FFFh) is not code-protected
  3830                           ;	Code Protection bit
  3831                           ;	CP2 = OFF, Block 2 (004000-005FFFh) is not code-protected
  3832                           ;	Code Protection bit
  3833                           ;	CP3 = OFF, Block 3 (006000-007FFFh) is not code-protected
  3834   300008                     	org	3145736
  3835   300008  0F                 	db	15
  3836                           
  3837                           ;Config register CONFIG5H @ 0x300009
  3838                           ;	Boot Block Code Protection bit
  3839                           ;	CPB = OFF, Boot block (000000-0007FFh) is not code-protected
  3840                           ;	Data EEPROM Code Protection bit
  3841                           ;	CPD = OFF, Data EEPROM is not code-protected
  3842   300009                     	org	3145737
  3843   300009  C0                 	db	192
  3844                           
  3845                           ;Config register CONFIG6L @ 0x30000A
  3846                           ;	Write Protection bit
  3847                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) is not write-protected
  3848                           ;	Write Protection bit
  3849                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) is not write-protected
  3850                           ;	Write Protection bit
  3851                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) is not write-protected
  3852                           ;	Write Protection bit
  3853                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) is not write-protected
  3854   30000A                     	org	3145738
  3855   30000A  0F                 	db	15
  3856                           
  3857                           ;Config register CONFIG6H @ 0x30000B
  3858                           ;	Configuration Register Write Protection bit
  3859                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
  3860                           ;	Boot Block Write Protection bit
  3861                           ;	WRTB = OFF, Boot block (000000-0007FFh) is not write-protected
  3862                           ;	Data EEPROM Write Protection bit
  3863                           ;	WRTD = OFF, Data EEPROM is not write-protected
  3864   30000B                     	org	3145739
  3865   30000B  E0                 	db	224
  3866                           
  3867                           ;Config register CONFIG7L @ 0x30000C
  3868                           ;	Table Read Protection bit
  3869                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) is not protected from table reads executed in ot
      +                          her blocks
  3870                           ;	Table Read Protection bit
  3871                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) is not protected from table reads executed in ot
      +                          her blocks
  3872                           ;	Table Read Protection bit
  3873                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) is not protected from table reads executed in ot
      +                          her blocks
  3874                           ;	Table Read Protection bit
  3875                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) is not protected from table reads executed in ot
      +                          her blocks
  3876   30000C                     	org	3145740
  3877   30000C  0F                 	db	15
  3878                           
  3879                           ;Config register CONFIG7H @ 0x30000D
  3880                           ;	Boot Block Table Read Protection bit
  3881                           ;	EBTRB = OFF, Boot block (000000-0007FFh) is not protected from table reads executed in
      +                           other blocks
  3882   30000D                     	org	3145741
  3883   30000D  40                 	db	64
  3884                           tosu	equ	0xFFF
  3885                           tosh	equ	0xFFE
  3886                           tosl	equ	0xFFD
  3887                           stkptr	equ	0xFFC
  3888                           pclatu	equ	0xFFB
  3889                           pclath	equ	0xFFA
  3890                           pcl	equ	0xFF9
  3891                           tblptru	equ	0xFF8
  3892                           tblptrh	equ	0xFF7
  3893                           tblptrl	equ	0xFF6
  3894                           tablat	equ	0xFF5
  3895                           prodh	equ	0xFF4
  3896                           prodl	equ	0xFF3
  3897                           indf0	equ	0xFEF
  3898                           postinc0	equ	0xFEE
  3899                           postdec0	equ	0xFED
  3900                           preinc0	equ	0xFEC
  3901                           plusw0	equ	0xFEB
  3902                           fsr0h	equ	0xFEA
  3903                           fsr0l	equ	0xFE9
  3904                           wreg	equ	0xFE8
  3905                           indf1	equ	0xFE7
  3906                           postinc1	equ	0xFE6
  3907                           postdec1	equ	0xFE5
  3908                           preinc1	equ	0xFE4
  3909                           plusw1	equ	0xFE3
  3910                           fsr1h	equ	0xFE2
  3911                           fsr1l	equ	0xFE1
  3912                           bsr	equ	0xFE0
  3913                           indf2	equ	0xFDF
  3914                           postinc2	equ	0xFDE
  3915                           postdec2	equ	0xFDD
  3916                           preinc2	equ	0xFDC
  3917                           plusw2	equ	0xFDB
  3918                           fsr2h	equ	0xFDA
  3919                           fsr2l	equ	0xFD9
  3920                           status	equ	0xFD8

Data Sizes:
    Strings     79
    Constant    0
    Data        0
    BSS         44
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     69      81
    BANK0           160      0      32
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    f$.$buffer	PTR unsigned char  size(1) Largest target is 20
		 -> mostrar_variable@buffer(COMRAM[20]), 

    f$.$source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(COMRAM[11]), 

    fputc@fp$.$buffer	PTR unsigned char  size(1) Largest target is 20
		 -> mostrar_variable@buffer(COMRAM[20]), 

    fputc@fp$.$source	PTR const unsigned char  size(2) Largest target is 0

    Lcd_Write_String@a	PTR const unsigned char  size(2) Largest target is 20
		 -> mostrar_variable@buffer(COMRAM[20]), STR_10(CODE[7]), STR_11(CODE[5]), STR_12(CODE[3]), 
		 -> STR_13(CODE[4]), STR_14(CODE[4]), STR_2(CODE[14]), STR_3(CODE[6]), 
		 -> STR_4(CODE[6]), STR_5(CODE[6]), STR_6(CODE[6]), STR_7(CODE[6]), 
		 -> STR_8(CODE[6]), STR_9(CODE[9]), 

    S1312$buffer	PTR unsigned char  size(1) Largest target is 20
		 -> mostrar_variable@buffer(COMRAM[20]), 

    S1312$source	PTR const unsigned char  size(2) Largest target is 0

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(COMRAM[2]), 

    sprintf@fmt	PTR const unsigned char  size(1) Largest target is 3
		 -> STR_1(CODE[3]), 

    sprintf@s	PTR unsigned char  size(1) Largest target is 20
		 -> mostrar_variable@buffer(COMRAM[20]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(COMRAM[1]), 

    vfpfcnvrt@cp	PTR unsigned char  size(1) Largest target is 3
		 -> STR_1(CODE[3]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 1
		 -> vfprintf@cfmt(COMRAM[1]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(COMRAM[11]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(COMRAM[1]), 

    vfprintf@cfmt	PTR unsigned char  size(1) Largest target is 3
		 -> STR_1(CODE[3]), 

    vfprintf@fmt	PTR const unsigned char  size(1) Largest target is 3
		 -> STR_1(CODE[3]), 

    vfprintf@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(COMRAM[11]), 


Critical Paths under _main in COMRAM

    _mostrar_conteo->_mostrar_variable
    _mostrar_variable->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_abs
    _abs->___awmod
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Clear->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port

Critical Paths under _LowISR in COMRAM

    None.

Critical Paths under _HighISR in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _LowISR in BANK0

    None.

Critical Paths under _HighISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _LowISR in BANK1

    None.

Critical Paths under _HighISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _LowISR in BANK2

    None.

Critical Paths under _HighISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _LowISR in BANK3

    None.

Critical Paths under _HighISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _LowISR in BANK4

    None.

Critical Paths under _HighISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _LowISR in BANK5

    None.

Critical Paths under _HighISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _LowISR in BANK6

    None.

Critical Paths under _HighISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _LowISR in BANK7

    None.

Critical Paths under _HighISR in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0    4034
                                             65 COMRAM     4     4      0
                            _Lcd_Cmd
                           _Lcd_Init
                     _Lcd_Set_Cursor
                           _init_int
                       _init_maqueta
                         _init_ports
                     _mostrar_conteo
 ---------------------------------------------------------------------------------
 (1) _mostrar_conteo                                       0     0      0    3079
                          _Lcd_Clear
                            _Lcd_Cmd
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
                   _mostrar_variable
 ---------------------------------------------------------------------------------
 (2) _mostrar_variable                                    22    20      2    2059
                                             43 COMRAM    22    20      2
                   _Lcd_Write_String
                            _sprintf
 ---------------------------------------------------------------------------------
 (3) _sprintf                                             18    14      4    1760
                                             27 COMRAM    16    12      4
                           _vfprintf
 ---------------------------------------------------------------------------------
 (4) _vfprintf                                             4     1      3    1559
                                             23 COMRAM     4     1      3
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (5) _vfpfcnvrt                                           11     8      3    1434
                                             12 COMRAM    11     8      3
                            ___awdiv
                            ___awmod
                                _abs
                              _fputc
 ---------------------------------------------------------------------------------
 (6) _fputc                                                8     5      3     230
                                              2 COMRAM     8     5      3
                              _putch
 ---------------------------------------------------------------------------------
 (7) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (6) _abs                                                  4     2      2      67
                                              8 COMRAM     4     2      2
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (6) ___awmod                                              6     2      4     298
                                              2 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (6) ___awdiv                                              8     4      4     302
                                              2 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (3) _Lcd_Write_String                                     6     4      2     224
                                              6 COMRAM     6     4      2
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (4) _Lcd_Write_Char                                       3     3      0     120
                                              3 COMRAM     3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (2) _Lcd_Set_Cursor                                       5     4      1     646
                                              5 COMRAM     5     4      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _init_ports                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_maqueta                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_int                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             1     1      0     210
                                              5 COMRAM     1     1      0
                          _Lcd_Clear
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (2) _Lcd_Clear                                            0     0      0      75
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (3) _Lcd_Cmd                                              2     2      0      75
                                              3 COMRAM     2     2      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (5) _Lcd_Port                                             1     1      0      60
                                              2 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (8) _LowISR                                               2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _HighISR                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Lcd_Cmd
     _Lcd_Port
   _Lcd_Init
     _Lcd_Clear
       _Lcd_Cmd
     _Lcd_Cmd
     _Lcd_Port
   _Lcd_Set_Cursor
     _Lcd_Cmd
   _init_int
   _init_maqueta
   _init_ports
   _mostrar_conteo
     _Lcd_Clear
     _Lcd_Cmd
     _Lcd_Set_Cursor
     _Lcd_Write_String
       _Lcd_Write_Char
         _Lcd_Port
     _mostrar_variable
       _Lcd_Write_String
       _sprintf
         _vfprintf
           _vfpfcnvrt
             ___awdiv
             ___awmod
             _abs
               ___awmod (ARG)
             _fputc
               _putch

 _LowISR (ROOT)

 _HighISR (ROOT)

Address spaces:
Name               Size   Autos  Total    Usage
BIGRAM            2047      0       0      0.0%
BITBANK7           256      0       0      0.0%
BANK7              256      0       0      0.0%
BITBANK6           256      0       0      0.0%
BANK6              256      0       0      0.0%
BITBANK5           256      0       0      0.0%
BANK5              256      0       0      0.0%
BITBANK4           256      0       0      0.0%
BANK4              256      0       0      0.0%
BITBANK3           256      0       0      0.0%
BANK3              256      0       0      0.0%
BITBANK2           256      0       0      0.0%
BANK2              256      0       0      0.0%
BITBANK1           256      0       0      0.0%
BANK1              256      0       0      0.0%
BITBANK0           160      0       0      0.0%
BANK0              160      0      32     20.0%
BITBIGSFRh         126      0       0      0.0%
BITCOMRAM           94      0       0      0.0%
COMRAM              94     69      81     86.2%
BITBIGSFRl          32      0       0      0.0%
STACK                0      0       0      0.0%
DATA                 0      0     113      0.0%


Microchip Technology PIC18 Macro Assembler V3.00 build 20241204225717 
Symbol Table                                                                                   Thu Sep 25 14:55:44 2025

                      l72 1466                        l81 126C                        l90 12AE  
                      l82 128E                        l75 1474                        l83 127E  
                      l85 128C                        l69 142E                        l78 126E  
                      l87 129E                        l79 125E                        l89 12AC  
            ___awdiv@sign 0008                        bsr 0FE0                       l104 0CA8  
                     l120 08B4                       l122 08C2                       l131 0934  
                     l123 08CC                       l212 11CE                       l132 0936  
                     l205 0F32                       l221 124C                       l141 0988  
                     l134 0944                       l126 08E6                       l215 1380  
                     l151 09FA                       l143 0996                       l135 0946  
                     l160 0A84                       l128 08F4                       l209 0F32  
                     l161 0AA8                       l137 0954                       l129 0926  
                     l146 09AC                       l138 0970                       l163 0AB6  
                     l164 0AD4                       l148 09BA                       l190 1308  
                     l182 12DC                       l502 0FF4                       l158 0A76  
                     l193 130A                       l186 12F2                       l178 12C6  
                     l515 10A2                       l196 144E                       l199 1482  
                     l949 13B4                       l993 1348                       l987 0E60  
                     l997 13D0                       u200 12EC                       u201 12E8  
                     u210 1302                       u211 12FE                       u400 125C  
                     u401 1258                       u410 126C                       u411 1268  
                     u180 12C0                       u420 127C                       u181 12BC  
                     u421 1278                       u190 12D6                       u430 128C  
                     u191 12D2                       u431 1288                       u440 129C  
                     u441 1298                       u450 12AC                       u451 12A8  
                     u900 0FA2                       u901 0F9E                       u910 0FBE  
__end_of_mostrar_variable 1430                       u911 0FBA                       u920 0FE4  
                     u921 0FE0                       u930 1006                       u931 1002  
                     u940 1020                       u941 101C                       u870 0F44  
                     u950 103A                       u871 0F40                       u951 1036  
                     u880 0F5E                       u960 1058                       u881 0F5A  
                     u961 1054                       u890 0F84                       u970 106E  
                     u891 0F80                       u971 106A                       u980 1092  
                     u981 108E                       u990 10B4                       u991 10B0  
                     _abs 13B6              ___awmod@sign 0008                       wreg 0FE8  
                    l1000 13E8                      l1012 114C                      l1023 148A  
                    l1201 136E                      l2001 0A90                      l1131 12DE  
                    l1123 12B2                      l1203 1374                      l2011 0AD2  
                    l2003 0AA6                      ?_abs 0009                      l1133 12EC  
                    l1125 12C0                      l1301 1462                      l1205 1376  
                    l2005 0AB8                      l1135 12F4                      l1127 12C8  
                    l1311 125C                      l1303 1464                      l1207 137E  
                    l2007 0ACE                      l1137 1302                      l1129 12D6  
                    l1241 1434                      l1401 11B8                      l1313 127C  
                    l2009 0AD0                      l1243 143A                      l1403 11BE  
                    l1307 1468                      l1315 129C                      l1245 143C  
                    l1405 11C4                      l1309 124E                      l1247 144C  
                    l1239 1432                      l1255 1476                      l1407 11CA  
                    l1191 1358                      l1193 135A                      l1291 1454  
                    l1195 1362                      l1381 1160                      l1293 145A  
                    l1197 1364                      l1189 134C                      l1701 1076  
                    l1391 119A                      l1383 1170                      l1295 145C  
                    l1199 136C                      l1703 107C                      l1393 11A0  
                    l1385 1176                      l1377 114E                      l1297 145E  
                    l1289 1450                      l1641 0F50                      l1633 0F34  
                    l1705 1082                      l1721 10EA                      l1713 10A4  
                    l1395 11A6                      l1387 1186                      l1379 115A  
                    l1299 1460                      l1803 11D0                      l1651 0F84  
                    l1643 0F5E                      l1635 0F36                      l1707 1092  
                    l1723 111C                      l1715 10B4                      l1731 0CAA  
                    l1811 1410                      l1397 11AC                      l1389 118C  
                    l1821 0E86                      l1805 11DC                      l1661 0FBE  
                    l1653 0F8C                      l1645 0F66                      l1637 0F44  
                    l1709 109A                      l1717 10C4                      l1741 0CEE  
                    l1733 0CCC                      l1813 1424                      l1901 0C6A  
                    l1399 11B2                      l1831 0EC0                      l1823 0E8C  
                    l1807 120C                      l1671 0FE4                      l1663 0FC6  
                    l1655 0F94                      l1647 0F6A                      l1639 0F4C  
                    l1727 13B6                      l1719 10CE                      l1751 0D60  
                    l1743 0D0A                      l1735 0CD4                      l1903 0C74  
                    l1911 085A                      l1841 0EFE                      l1833 0ECA  
                    l1825 0E96                      l1817 0E64                      l1809 1210  
                    l1673 0FEC                      l1665 0FC8                      l1657 0FA2  
                    l1649 0F72                      l1681 1006                      l1729 13C4  
                    l1761 0DDE                      l1753 0D90                      l1745 0D26  
                    l1737 0CE0                      l1905 0C8E                      l1921 088E  
                    l1913 086C                      l1843 0F10                      l1835 0EDC  
                    l1827 0EA8                      l1819 0E74                      l1667 0FCE  
                    l1659 0FA8                      l1691 103A                      l1683 100E  
                    l1763 0DEE                      l1755 0DAC                      l1747 0D3E  
                    l1771 0E32                      l1739 0CE4                      l1907 0C9E  
                    l1851 0ADC                      l1931 08C4                      l1923 0892  
                    l1915 087A                      l1845 0F22                      l1837 0EEE  
                    l1829 0EBA                      l1669 0FD4                      l1693 1042  
                    l1685 1012                      l1677 0FF6                      l1765 0E00  
                    l1757 0DBE                      l1749 0D48                      l1781 130C  
                    l1861 0B28                      l1853 0AE6                      l1941 08E4  
                    l1933 08C8                      l1925 0896                      l1917 0880  
                    l1909 0852                      l1847 0F28                      l1839 0EF4  
                    l1695 104A                      l1687 1020                      l1679 0FF8  
                    l1767 0E1A                      l1759 0DCE                      l1775 0E3E  
                    l1783 1314                      l1791 1382                      l1871 0B7E  
                    l1863 0B3A                      l1855 0AF6                      l1951 096E  
                    l1943 08F6                      l1935 08DA                      l1927 08AC  
                    l1919 088A                      l1697 1058                      l1689 1028  
                    l1769 0E1C                      l1785 1324                      l1793 138A  
                    l1881 0BCA                      l1873 0B8E                      l1865 0B4A  
                    l1857 0B06                      l1849 0AD8                      l1961 09C8  
                    l1953 097E                      l1945 090C                      l1937 08DE  
                    l1929 08B0                      l1699 106E                      l1787 1340  
                    l1795 1392                      l1891 0C1A                      l1883 0BDA  
                    l1875 0BA0                      l1867 0B5C                      l1859 0B18  
                    l1971 0A08                      l1963 09D6                      l1955 0982  
                    l1947 0924                      l1939 08E2                      l1797 139A  
                    l1893 0C2A                      l1885 0BEA                      l1877 0BB0  
                    l1869 0B6C                      l1981 0A4A                      l1965 09DA  
                    l1973 0A0C                      l1957 0986                      l1949 0958  
                    l1799 13AA                      l1887 0BFA                      l1895 0C3E  
                    l1879 0BBA                      l1991 0A72                      l1983 0A4C  
                    l1975 0A28                      l1967 09E8                      l1959 0998  
                    l1897 0C4E                      l1889 0C0A                      l1993 0A74  
                    l1985 0A5C                      l1977 0A38                      l1969 09F6  
                    l1899 0C54                      l1995 0A86                      l1987 0A6C  
                    l1979 0A3A                      l1997 0A8A                      l1989 0A6E  
                    l1999 0A8E                      STR_1 084D                      STR_2 0801  
                    STR_3 0837                      STR_4 0825                      STR_5 082B  
                    STR_6 0831                      STR_7 0825                      STR_8 081F  
                    STR_9 080F                      u1000 10C4                      u1001 10C0  
                    u1010 10EA                      u1011 10E6                      u1020 111C  
                    u1100 0DCE                      u1021 1118                      u1101 0DCA  
                    u1030 13C4                      u1110 0DDE                      u1031 13C0  
                    u1111 0DDA                      u1200 0EDC                      u1120 0DEE  
                    u1040 0CCC                      u1201 0ED8                      u1121 0DEA  
                    u1041 0CC8                      u1210 0F10                      u1130 0E2E  
                    u1050 0D0A                      u1211 0F0C                      u1131 0E2A  
                    u1051 0D06                      u1060 0D26                      u1140 1340  
                    u1300 0BFA                      u1220 0AF6                      u1061 0D22  
                    u1141 133C                      u1301 0BF6                      u1221 0AF2  
                    u1150 1208                      u1070 0D5C                      u1310 0C1A  
                    u1230 0B18                      u1071 0D56                      u1311 0C16  
                    u1231 0B14                      u1160 123C                      u1080 0D5E  
                    u1320 0C2A                      u1240 0B3A                      u1400 0996  
                    u1321 0C26                      u1241 0B36                      u1401 0992  
                    u1170 124C                      u1090 0DBE                      u1250 0B5C  
                    u1410 09BA                      u1330 08C2                      u1171 1248  
                    u1091 0DBA                      u1251 0B58                      u1411 09B6  
                    u1331 08BE                      u1180 0E74                      u1260 0B7E  
                    u1500 0A5C                      u1420 09C8                      u1340 08DA  
                    u1181 0E70                      u1157 11FE                      u1261 0B7A  
                    u1501 0A58                      u1421 09C4                      u1341 08D6  
                    _LATA 0F89                      u1190 0EA8                      u1270 0BA0  
                    u1510 0A6C                      u1430 09D6                      u1350 08F4  
                    u1191 0EA4                      u1167 1232                      u1271 0B9C  
                    u1511 0A68                      u1431 09D2                      u1351 08F0  
                    u1280 0BCA                      u1520 0A84                      u1440 09E8  
                    u1360 0934                      u1281 0BC6                      u1521 0A80  
                    u1441 09E4                      u1361 0930                      _LATE 0F8D  
                    u1290 0BDA                      u1530 0AB6                      u1450 09F6  
                    u1370 0944                      u1291 0BD6                      u1531 0AB2  
                    u1451 09F2                      u1371 0940                      u1460 0A08  
                    u1380 0954                      u1461 0A04                      u1381 0950  
                    u1470 0A28                      u1390 097E                      u1607 0A9A  
                    u1471 0A24                      u1391 097A                      u1480 0A38  
                    u1617 0AC2                      u1481 0A34                      u1490 0A4A  
                    u1627 1366                      u1491 0A46                      u1547 0872  
                    u1637 1378                      u1557 08A0                      u1647 1166  
                    u1567 0900                      u1657 117C                      u1577 0918  
                    u1667 1192                      u1587 0962                      u1677 1442  
                    u1597 099E                      abs@a 0009         ?_Lcd_Write_String 0007  
                    _dbuf 0060                      _main 0852                      _prec 0048  
                    fsr1h 0FE2                      fsr2h 0FDA                      indf1 0FE7  
                    indf2 0FDF                      fsr1l 0FE1                      fsr2l 0FD9  
                    btemp 0052                      start 003A        ??_Lcd_Write_String 0009  
         __end_of_Lcd_Cmd 1450           __end_of_HighISR 148A              ___param_bank 0000  
        ??_mostrar_conteo 0042                     ??_abs 000B                     ?_main 0001  
         __end_of___awdiv 0FF6                     STR_10 0818                     STR_11 083D  
                   STR_12 084A                     STR_13 0842                     STR_14 0846  
         __end_of___awmod 10A4           ___awdiv@divisor 0005                     i1l115 0032  
                   i2l109 1486           ___awdiv@counter 0007              vfpfcnvrt@fmt 000E  
                   _PORTB 0F81                     _TRISA 0F92                     _TRISB 0F93  
                   _TRISC 0F94                     _TRISD 0F95                     _TRISE 0F96  
                   _flags 004A                     _negra 0050                     _fputc 10A4  
                   _width 0046                     _putch 148A                     tablat 0FF5  
                   ttemp5 0053                     ttemp6 0056                     ttemp7 005A  
                   status 0FD8                     wtemp8 0053           __end_of_sprintf 13B6  
             LowISR@dummy 0002          __end_of_Lcd_Init 11D0          __end_of_Lcd_Port 130C  
         __initialization 13EA              __end_of_main 0AD8                    ??_main 0042  
           __activetblptr 0002                    ?_fputc 0003          ___awdiv@dividend 0003  
                  ?_putch 0001                    i1l1411 001E                    i1l1413 002C  
                  i2l1409 1486                 ??_Lcd_Cmd 0004             vfpfcnvrt@done 0011  
               ??_HighISR 0001             ?_init_maqueta 0001                    _LowISR 0018  
            vfprintf@cfmt 001B                 ??___awdiv 0007                 ??___awmod 0007  
                  _blanca 0051                    _escena 004B          __end_of_init_int 1476  
                  clear_0 13F0                    clear_1 13FC          ___awdiv@quotient 0009  
         ___awmod@divisor 0005                    isa$std 0001           ___awmod@counter 0007  
                  fputc@c 0003              __mediumconst 0800                    tblptrh 0FF7  
                  tblptrl 0FF6                    tblptru 0FF8                    putch@c 0001  
        __end_of_vfprintf 134A                 ??_sprintf 0020           Lcd_Set_Cursor@a 0007  
         Lcd_Set_Cursor@b 0006           Lcd_Set_Cursor@y 0009           Lcd_Set_Cursor@z 0008  
          ??_init_maqueta 0003                __accesstop 0060   __end_of__initialization 1402  
       __end_of_Lcd_Clear 1484             ___rparam_used 0001    mostrar_variable@buffer 002E  
          __pcstackCOMRAM 0001             __end_of_fputc 114E             __end_of_putch 148C  
          _Lcd_Set_Cursor 0E62         ?_mostrar_variable 002C        ??_mostrar_variable 002E  
               ?_Lcd_Init 0001                 ?_Lcd_Port 0001                   ??_fputc 0006  
                 ??_putch 0003                __pbssBANK0 0060                   ?_LowISR 0001  
  __end_of_Lcd_Set_Cursor 0F34                   i1u57_20 002C                   i1u57_21 0028  
              ??_Lcd_Init 0006                ??_Lcd_Port 0003            _Lcd_Write_Char 134A  
                 _Lcd_Cmd 1430                   _HighISR 0008                 ?_init_int 0001  
                 __Hparam 0000                   __Lparam 0000                   ___awdiv 0F34  
                 ___awmod 0FF6                 ?_vfprintf 0018              __psmallconst 0800  
                 __pcinit 13EA                _init_ports 1450                   __ramtop 0800  
         ?_Lcd_Set_Cursor 0006                   __ptext0 0852                   __ptext1 0AD8  
                 __ptext2 1410                   __ptext3 1382                   __ptext4 130C  
                 __ptext5 0CAA                   __ptext6 10A4                   __ptext7 148A  
                 __ptext8 13B6                   __ptext9 0FF6      __end_of_init_maqueta 12B0  
        ___awmod@dividend 0003                   _sprintf 1382    __end_of_Lcd_Write_Char 1382  
          __pintcode_body 1484      end_of_initialization 1402                   fputc@fp 0005  
           __Lmediumconst 0000                ??_init_int 0003                   int_func 1484  
       __end_of_vfpfcnvrt 0E62                   postdec2 0FDD                   postinc0 0FEE  
                 postinc1 0FE6                   postinc2 0FDE          vfpfcnvrt@convarg 0013  
               Lcd_Port@a 0003                ??_vfprintf 001B         mostrar_variable@x 002C  
               _PORTAbits 0F80                 _PORTBbits 0F81                 _PORTCbits 0F82  
               _TRISCbits 0F94                 _TRISDbits 0F95                 _TRISEbits 0F96  
         ?_Lcd_Write_Char 0001         Lcd_Write_String@a 0007         Lcd_Write_String@i 000B  
          __end_of_LowISR 003A                 _Lcd_Clear 1476               vfpfcnvrt@ap 000F  
             vfpfcnvrt@cp 0012               vfpfcnvrt@fp 000D          _Lcd_Write_String 11D0  
             ?_init_ports 0001       start_initialization 13EA               __end_of_abs 13EA  
                ??_LowISR 0001               vfprintf@fmt 0019                ?_Lcd_Clear 0001  
         Lcd_Write_Char@a 0006           Lcd_Write_Char@y 0005               __pbssCOMRAM 0046  
                ?_Lcd_Cmd 0001                  ?_HighISR 0001              _init_maqueta 124E  
        ??_Lcd_Set_Cursor 0007                 __pintcode 0008                  ?___awdiv 0003  
                ?___awmod 0003               __pintcodelo 0018               __smallconst 0800  
          _mostrar_conteo 0AD8                  ?_sprintf 001C                  _LATAbits 0F89  
                _LATCbits 0F8B                  _LATDbits 0F8C                  _LATEbits 0F8D  
                Lcd_Cmd@a 0005               ??_Lcd_Clear 0006                  _RCONbits 0FD0  
               _vfpfcnvrt 0CAA    __end_of_mostrar_conteo 0CAA                _ADCON1bits 0FC1  
        ??_Lcd_Write_Char 0004                  _Lcd_Init 114E                  _Lcd_Port 12B0  
              vfpfcnvrt@c 0017               _INTCON2bits 0FF1  __end_of_Lcd_Write_String 124E  
        _mostrar_variable 1410                  __Hrparam 0000                vfprintf@ap 001A  
                __Lrparam 0000                vfprintf@fp 0018                ?_vfpfcnvrt 000D  
            ??_init_ports 0003           ?_mostrar_conteo 0001                  _banderaB 004D  
                _banderaM 004C                  _banderaN 004E                sprintf@fmt 001D  
                __ptext10 0F34                  __ptext11 11D0                  __ptext20 12B0  
                __ptext12 134A                  __ptext13 0E62                  __ptext14 1450  
                __ptext15 124E                  __ptext16 1468                  __ptext17 114E  
                __ptext18 1476                  __ptext19 1430                  _init_int 1468  
                _metalica 004F        __end_of_init_ports 1468                  isa$xinst 0000  
                int$flags 0052                  _vfprintf 130C                  main@giro 0044  
              _INTCONbits 0FF2        Lcd_Write_Char@temp 0004                  intlevel1 0000  
                intlevel2 0000                 sprintf@ap 0020               ??_vfpfcnvrt 0010  
      Lcd_Set_Cursor@temp 000A                  sprintf@f 0021                  sprintf@s 001C  
