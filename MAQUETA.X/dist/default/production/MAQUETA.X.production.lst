

Microchip MPLAB XC8 Assembler V3.00 build 20241204225717 
                                                                                               Thu Sep 25 10:04:13 2025

Microchip MPLAB XC8 C Compiler v3.00 (Free license) build 20241204225717 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,space=0,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,space=0,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	text0,global,reloc=2,class=CODE,space=0,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,space=0,delta=1
    12                           	psect	text2,global,reloc=2,class=CODE,space=0,delta=1
    13                           	psect	text3,global,reloc=2,class=CODE,space=0,delta=1,group=3
    14                           	psect	text4,global,reloc=2,class=CODE,space=0,delta=1,group=1
    15                           	psect	text5,global,reloc=2,class=CODE,space=0,delta=1,group=1
    16                           	psect	text6,global,reloc=2,class=CODE,space=0,delta=1,group=3
    17                           	psect	text7,global,reloc=2,class=CODE,space=0,delta=1,group=3
    18                           	psect	text8,global,reloc=2,class=CODE,space=0,delta=1,group=3
    19                           	psect	text9,global,reloc=2,class=CODE,space=0,delta=1,group=2
    20                           	psect	text10,global,reloc=2,class=CODE,space=0,delta=1,group=2
    21                           	psect	text11,global,reloc=2,class=CODE,space=0,delta=1
    22                           	psect	text12,global,reloc=2,class=CODE,space=0,delta=1
    23                           	psect	text13,global,reloc=2,class=CODE,space=0,delta=1
    24                           	psect	text14,global,reloc=2,class=CODE,space=0,delta=1
    25                           	psect	text15,global,reloc=2,class=CODE,space=0,delta=1
    26                           	psect	text16,global,reloc=2,class=CODE,space=0,delta=1
    27                           	psect	text17,global,reloc=2,class=CODE,space=0,delta=1
    28                           	psect	text18,global,reloc=2,class=CODE,space=0,delta=1
    29                           	psect	text19,global,reloc=2,class=CODE,space=0,delta=1
    30                           	psect	text20,global,reloc=2,class=CODE,space=0,delta=1
    31                           	psect	intcodelo,global,reloc=2,class=CODE,space=0,delta=1
    32                           	psect	intcode,global,reloc=2,class=CODE,space=0,delta=1
    33                           	psect	intcode_body,global,reloc=2,class=CODE,space=0,delta=1
    34                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    35                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    36                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1,lowdata
    37                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    38   000000                     
    39                           ; Generated 17/01/2025 GMT
    40                           ; 
    41                           ; Copyright Â© 2025, Microchip Technology Inc. and its subsidiaries ("Microchip")
    42                           ; All rights reserved.
    43                           ; 
    44                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    45                           ; 
    46                           ; Redistribution and use in source and binary forms, with or without modification, are
    47                           ; permitted provided that the following conditions are met:
    48                           ; 
    49                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    50                           ;        conditions and the following disclaimer.
    51                           ; 
    52                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    53                           ;        of conditions and the following disclaimer in the documentation and/or other
    54                           ;        materials provided with the distribution. Publication is not required when
    55                           ;        this file is used in an embedded application.
    56                           ; 
    57                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    58                           ;        software without specific prior written permission.
    59                           ; 
    60                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    61                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    62                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    63                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    64                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    65                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    66                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    67                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    68                           ; 
    69                           ; 
    70                           ; Code-generator required, PIC18F4550 Definitions
    71                           ; 
    72                           ; SFR Addresses
    73   000FE0                     bsr             equ	4064
    74   000FE9                     fsr0            equ	4073
    75   000FEA                     fsr0h           equ	4074
    76   000FE9                     fsr0l           equ	4073
    77   000FE1                     fsr1            equ	4065
    78   000FE2                     fsr1h           equ	4066
    79   000FE1                     fsr1l           equ	4065
    80   000FD9                     fsr2            equ	4057
    81   000FDA                     fsr2h           equ	4058
    82   000FD9                     fsr2l           equ	4057
    83   000FEF                     indf0           equ	4079
    84   000FE7                     indf1           equ	4071
    85   000FDF                     indf2           equ	4063
    86   000FF2                     intcon          equ	4082
    87   000000                     nvmcon          equ	0
    88   000FF9                     pcl             equ	4089
    89   000FFA                     pclath          equ	4090
    90   000FFB                     pclatu          equ	4091
    91   000FEB                     plusw0          equ	4075
    92   000FE3                     plusw1          equ	4067
    93   000FDB                     plusw2          equ	4059
    94   000FED                     postdec0        equ	4077
    95   000FE5                     postdec1        equ	4069
    96   000FDD                     postdec2        equ	4061
    97   000FEE                     postinc0        equ	4078
    98   000FE6                     postinc1        equ	4070
    99   000FDE                     postinc2        equ	4062
   100   000FEC                     preinc0         equ	4076
   101   000FE4                     preinc1         equ	4068
   102   000FDC                     preinc2         equ	4060
   103   000FF3                     prod            equ	4083
   104   000FF4                     prodh           equ	4084
   105   000FF3                     prodl           equ	4083
   106   000FD8                     status          equ	4056
   107   000FF5                     tablat          equ	4085
   108   000FF6                     tblptr          equ	4086
   109   000FF7                     tblptrh         equ	4087
   110   000FF6                     tblptrl         equ	4086
   111   000FF8                     tblptru         equ	4088
   112   000FFD                     tosl            equ	4093
   113   000FE8                     wreg            equ	4072
   114   000F62                     SPPDATA         equ	3938	;# 
   115   000F63                     SPPCFG          equ	3939	;# 
   116   000F64                     SPPEPS          equ	3940	;# 
   117   000F65                     SPPCON          equ	3941	;# 
   118   000F66                     UFRM            equ	3942	;# 
   119   000F66                     UFRML           equ	3942	;# 
   120   000F67                     UFRMH           equ	3943	;# 
   121   000F68                     UIR             equ	3944	;# 
   122   000F69                     UIE             equ	3945	;# 
   123   000F6A                     UEIR            equ	3946	;# 
   124   000F6B                     UEIE            equ	3947	;# 
   125   000F6C                     USTAT           equ	3948	;# 
   126   000F6D                     UCON            equ	3949	;# 
   127   000F6E                     UADDR           equ	3950	;# 
   128   000F6F                     UCFG            equ	3951	;# 
   129   000F70                     UEP0            equ	3952	;# 
   130   000F71                     UEP1            equ	3953	;# 
   131   000F72                     UEP2            equ	3954	;# 
   132   000F73                     UEP3            equ	3955	;# 
   133   000F74                     UEP4            equ	3956	;# 
   134   000F75                     UEP5            equ	3957	;# 
   135   000F76                     UEP6            equ	3958	;# 
   136   000F77                     UEP7            equ	3959	;# 
   137   000F78                     UEP8            equ	3960	;# 
   138   000F79                     UEP9            equ	3961	;# 
   139   000F7A                     UEP10           equ	3962	;# 
   140   000F7B                     UEP11           equ	3963	;# 
   141   000F7C                     UEP12           equ	3964	;# 
   142   000F7D                     UEP13           equ	3965	;# 
   143   000F7E                     UEP14           equ	3966	;# 
   144   000F7F                     UEP15           equ	3967	;# 
   145   000F80                     PORTA           equ	3968	;# 
   146   000F81                     PORTB           equ	3969	;# 
   147   000F82                     PORTC           equ	3970	;# 
   148   000F83                     PORTD           equ	3971	;# 
   149   000F84                     PORTE           equ	3972	;# 
   150   000F89                     LATA            equ	3977	;# 
   151   000F8A                     LATB            equ	3978	;# 
   152   000F8B                     LATC            equ	3979	;# 
   153   000F8C                     LATD            equ	3980	;# 
   154   000F8D                     LATE            equ	3981	;# 
   155   000F92                     TRISA           equ	3986	;# 
   156   000F92                     DDRA            equ	3986	;# 
   157   000F93                     TRISB           equ	3987	;# 
   158   000F93                     DDRB            equ	3987	;# 
   159   000F94                     TRISC           equ	3988	;# 
   160   000F94                     DDRC            equ	3988	;# 
   161   000F95                     TRISD           equ	3989	;# 
   162   000F95                     DDRD            equ	3989	;# 
   163   000F96                     TRISE           equ	3990	;# 
   164   000F96                     DDRE            equ	3990	;# 
   165   000F9B                     OSCTUNE         equ	3995	;# 
   166   000F9D                     PIE1            equ	3997	;# 
   167   000F9E                     PIR1            equ	3998	;# 
   168   000F9F                     IPR1            equ	3999	;# 
   169   000FA0                     PIE2            equ	4000	;# 
   170   000FA1                     PIR2            equ	4001	;# 
   171   000FA2                     IPR2            equ	4002	;# 
   172   000FA6                     EECON1          equ	4006	;# 
   173   000FA7                     EECON2          equ	4007	;# 
   174   000FA8                     EEDATA          equ	4008	;# 
   175   000FA9                     EEADR           equ	4009	;# 
   176   000FAB                     RCSTA           equ	4011	;# 
   177   000FAB                     RCSTA1          equ	4011	;# 
   178   000FAC                     TXSTA           equ	4012	;# 
   179   000FAC                     TXSTA1          equ	4012	;# 
   180   000FAD                     TXREG           equ	4013	;# 
   181   000FAD                     TXREG1          equ	4013	;# 
   182   000FAE                     RCREG           equ	4014	;# 
   183   000FAE                     RCREG1          equ	4014	;# 
   184   000FAF                     SPBRG           equ	4015	;# 
   185   000FAF                     SPBRG1          equ	4015	;# 
   186   000FB0                     SPBRGH          equ	4016	;# 
   187   000FB1                     T3CON           equ	4017	;# 
   188   000FB2                     TMR3            equ	4018	;# 
   189   000FB2                     TMR3L           equ	4018	;# 
   190   000FB3                     TMR3H           equ	4019	;# 
   191   000FB4                     CMCON           equ	4020	;# 
   192   000FB5                     CVRCON          equ	4021	;# 
   193   000FB6                     ECCP1AS         equ	4022	;# 
   194   000FB6                     CCP1AS          equ	4022	;# 
   195   000FB7                     ECCP1DEL        equ	4023	;# 
   196   000FB7                     CCP1DEL         equ	4023	;# 
   197   000FB8                     BAUDCON         equ	4024	;# 
   198   000FB8                     BAUDCTL         equ	4024	;# 
   199   000FBA                     CCP2CON         equ	4026	;# 
   200   000FBB                     CCPR2           equ	4027	;# 
   201   000FBB                     CCPR2L          equ	4027	;# 
   202   000FBC                     CCPR2H          equ	4028	;# 
   203   000FBD                     CCP1CON         equ	4029	;# 
   204   000FBD                     ECCP1CON        equ	4029	;# 
   205   000FBE                     CCPR1           equ	4030	;# 
   206   000FBE                     CCPR1L          equ	4030	;# 
   207   000FBF                     CCPR1H          equ	4031	;# 
   208   000FC0                     ADCON2          equ	4032	;# 
   209   000FC1                     ADCON1          equ	4033	;# 
   210   000FC2                     ADCON0          equ	4034	;# 
   211   000FC3                     ADRES           equ	4035	;# 
   212   000FC3                     ADRESL          equ	4035	;# 
   213   000FC4                     ADRESH          equ	4036	;# 
   214   000FC5                     SSPCON2         equ	4037	;# 
   215   000FC6                     SSPCON1         equ	4038	;# 
   216   000FC7                     SSPSTAT         equ	4039	;# 
   217   000FC8                     SSPADD          equ	4040	;# 
   218   000FC9                     SSPBUF          equ	4041	;# 
   219   000FCA                     T2CON           equ	4042	;# 
   220   000FCB                     PR2             equ	4043	;# 
   221   000FCB                     MEMCON          equ	4043	;# 
   222   000FCC                     TMR2            equ	4044	;# 
   223   000FCD                     T1CON           equ	4045	;# 
   224   000FCE                     TMR1            equ	4046	;# 
   225   000FCE                     TMR1L           equ	4046	;# 
   226   000FCF                     TMR1H           equ	4047	;# 
   227   000FD0                     RCON            equ	4048	;# 
   228   000FD1                     WDTCON          equ	4049	;# 
   229   000FD2                     HLVDCON         equ	4050	;# 
   230   000FD2                     LVDCON          equ	4050	;# 
   231   000FD3                     OSCCON          equ	4051	;# 
   232   000FD5                     T0CON           equ	4053	;# 
   233   000FD6                     TMR0            equ	4054	;# 
   234   000FD6                     TMR0L           equ	4054	;# 
   235   000FD7                     TMR0H           equ	4055	;# 
   236   000FD8                     STATUS          equ	4056	;# 
   237   000FD9                     FSR2            equ	4057	;# 
   238   000FD9                     FSR2L           equ	4057	;# 
   239   000FDA                     FSR2H           equ	4058	;# 
   240   000FDB                     PLUSW2          equ	4059	;# 
   241   000FDC                     PREINC2         equ	4060	;# 
   242   000FDD                     POSTDEC2        equ	4061	;# 
   243   000FDE                     POSTINC2        equ	4062	;# 
   244   000FDF                     INDF2           equ	4063	;# 
   245   000FE0                     BSR             equ	4064	;# 
   246   000FE1                     FSR1            equ	4065	;# 
   247   000FE1                     FSR1L           equ	4065	;# 
   248   000FE2                     FSR1H           equ	4066	;# 
   249   000FE3                     PLUSW1          equ	4067	;# 
   250   000FE4                     PREINC1         equ	4068	;# 
   251   000FE5                     POSTDEC1        equ	4069	;# 
   252   000FE6                     POSTINC1        equ	4070	;# 
   253   000FE7                     INDF1           equ	4071	;# 
   254   000FE8                     WREG            equ	4072	;# 
   255   000FE9                     FSR0            equ	4073	;# 
   256   000FE9                     FSR0L           equ	4073	;# 
   257   000FEA                     FSR0H           equ	4074	;# 
   258   000FEB                     PLUSW0          equ	4075	;# 
   259   000FEC                     PREINC0         equ	4076	;# 
   260   000FED                     POSTDEC0        equ	4077	;# 
   261   000FEE                     POSTINC0        equ	4078	;# 
   262   000FEF                     INDF0           equ	4079	;# 
   263   000FF0                     INTCON3         equ	4080	;# 
   264   000FF1                     INTCON2         equ	4081	;# 
   265   000FF2                     INTCON          equ	4082	;# 
   266   000FF3                     PROD            equ	4083	;# 
   267   000FF3                     PRODL           equ	4083	;# 
   268   000FF4                     PRODH           equ	4084	;# 
   269   000FF5                     TABLAT          equ	4085	;# 
   270   000FF6                     TBLPTR          equ	4086	;# 
   271   000FF6                     TBLPTRL         equ	4086	;# 
   272   000FF7                     TBLPTRH         equ	4087	;# 
   273   000FF8                     TBLPTRU         equ	4088	;# 
   274   000FF9                     PCLAT           equ	4089	;# 
   275   000FF9                     PC              equ	4089	;# 
   276   000FF9                     PCL             equ	4089	;# 
   277   000FFA                     PCLATH          equ	4090	;# 
   278   000FFB                     PCLATU          equ	4091	;# 
   279   000FFC                     STKPTR          equ	4092	;# 
   280   000FFD                     TOS             equ	4093	;# 
   281   000FFD                     TOSL            equ	4093	;# 
   282   000FFE                     TOSH            equ	4094	;# 
   283   000FFF                     TOSU            equ	4095	;# 
   284   000F62                     SPPDATA         equ	3938	;# 
   285   000F63                     SPPCFG          equ	3939	;# 
   286   000F64                     SPPEPS          equ	3940	;# 
   287   000F65                     SPPCON          equ	3941	;# 
   288   000F66                     UFRM            equ	3942	;# 
   289   000F66                     UFRML           equ	3942	;# 
   290   000F67                     UFRMH           equ	3943	;# 
   291   000F68                     UIR             equ	3944	;# 
   292   000F69                     UIE             equ	3945	;# 
   293   000F6A                     UEIR            equ	3946	;# 
   294   000F6B                     UEIE            equ	3947	;# 
   295   000F6C                     USTAT           equ	3948	;# 
   296   000F6D                     UCON            equ	3949	;# 
   297   000F6E                     UADDR           equ	3950	;# 
   298   000F6F                     UCFG            equ	3951	;# 
   299   000F70                     UEP0            equ	3952	;# 
   300   000F71                     UEP1            equ	3953	;# 
   301   000F72                     UEP2            equ	3954	;# 
   302   000F73                     UEP3            equ	3955	;# 
   303   000F74                     UEP4            equ	3956	;# 
   304   000F75                     UEP5            equ	3957	;# 
   305   000F76                     UEP6            equ	3958	;# 
   306   000F77                     UEP7            equ	3959	;# 
   307   000F78                     UEP8            equ	3960	;# 
   308   000F79                     UEP9            equ	3961	;# 
   309   000F7A                     UEP10           equ	3962	;# 
   310   000F7B                     UEP11           equ	3963	;# 
   311   000F7C                     UEP12           equ	3964	;# 
   312   000F7D                     UEP13           equ	3965	;# 
   313   000F7E                     UEP14           equ	3966	;# 
   314   000F7F                     UEP15           equ	3967	;# 
   315   000F80                     PORTA           equ	3968	;# 
   316   000F81                     PORTB           equ	3969	;# 
   317   000F82                     PORTC           equ	3970	;# 
   318   000F83                     PORTD           equ	3971	;# 
   319   000F84                     PORTE           equ	3972	;# 
   320   000F89                     LATA            equ	3977	;# 
   321   000F8A                     LATB            equ	3978	;# 
   322   000F8B                     LATC            equ	3979	;# 
   323   000F8C                     LATD            equ	3980	;# 
   324   000F8D                     LATE            equ	3981	;# 
   325   000F92                     TRISA           equ	3986	;# 
   326   000F92                     DDRA            equ	3986	;# 
   327   000F93                     TRISB           equ	3987	;# 
   328   000F93                     DDRB            equ	3987	;# 
   329   000F94                     TRISC           equ	3988	;# 
   330   000F94                     DDRC            equ	3988	;# 
   331   000F95                     TRISD           equ	3989	;# 
   332   000F95                     DDRD            equ	3989	;# 
   333   000F96                     TRISE           equ	3990	;# 
   334   000F96                     DDRE            equ	3990	;# 
   335   000F9B                     OSCTUNE         equ	3995	;# 
   336   000F9D                     PIE1            equ	3997	;# 
   337   000F9E                     PIR1            equ	3998	;# 
   338   000F9F                     IPR1            equ	3999	;# 
   339   000FA0                     PIE2            equ	4000	;# 
   340   000FA1                     PIR2            equ	4001	;# 
   341   000FA2                     IPR2            equ	4002	;# 
   342   000FA6                     EECON1          equ	4006	;# 
   343   000FA7                     EECON2          equ	4007	;# 
   344   000FA8                     EEDATA          equ	4008	;# 
   345   000FA9                     EEADR           equ	4009	;# 
   346   000FAB                     RCSTA           equ	4011	;# 
   347   000FAB                     RCSTA1          equ	4011	;# 
   348   000FAC                     TXSTA           equ	4012	;# 
   349   000FAC                     TXSTA1          equ	4012	;# 
   350   000FAD                     TXREG           equ	4013	;# 
   351   000FAD                     TXREG1          equ	4013	;# 
   352   000FAE                     RCREG           equ	4014	;# 
   353   000FAE                     RCREG1          equ	4014	;# 
   354   000FAF                     SPBRG           equ	4015	;# 
   355   000FAF                     SPBRG1          equ	4015	;# 
   356   000FB0                     SPBRGH          equ	4016	;# 
   357   000FB1                     T3CON           equ	4017	;# 
   358   000FB2                     TMR3            equ	4018	;# 
   359   000FB2                     TMR3L           equ	4018	;# 
   360   000FB3                     TMR3H           equ	4019	;# 
   361   000FB4                     CMCON           equ	4020	;# 
   362   000FB5                     CVRCON          equ	4021	;# 
   363   000FB6                     ECCP1AS         equ	4022	;# 
   364   000FB6                     CCP1AS          equ	4022	;# 
   365   000FB7                     ECCP1DEL        equ	4023	;# 
   366   000FB7                     CCP1DEL         equ	4023	;# 
   367   000FB8                     BAUDCON         equ	4024	;# 
   368   000FB8                     BAUDCTL         equ	4024	;# 
   369   000FBA                     CCP2CON         equ	4026	;# 
   370   000FBB                     CCPR2           equ	4027	;# 
   371   000FBB                     CCPR2L          equ	4027	;# 
   372   000FBC                     CCPR2H          equ	4028	;# 
   373   000FBD                     CCP1CON         equ	4029	;# 
   374   000FBD                     ECCP1CON        equ	4029	;# 
   375   000FBE                     CCPR1           equ	4030	;# 
   376   000FBE                     CCPR1L          equ	4030	;# 
   377   000FBF                     CCPR1H          equ	4031	;# 
   378   000FC0                     ADCON2          equ	4032	;# 
   379   000FC1                     ADCON1          equ	4033	;# 
   380   000FC2                     ADCON0          equ	4034	;# 
   381   000FC3                     ADRES           equ	4035	;# 
   382   000FC3                     ADRESL          equ	4035	;# 
   383   000FC4                     ADRESH          equ	4036	;# 
   384   000FC5                     SSPCON2         equ	4037	;# 
   385   000FC6                     SSPCON1         equ	4038	;# 
   386   000FC7                     SSPSTAT         equ	4039	;# 
   387   000FC8                     SSPADD          equ	4040	;# 
   388   000FC9                     SSPBUF          equ	4041	;# 
   389   000FCA                     T2CON           equ	4042	;# 
   390   000FCB                     PR2             equ	4043	;# 
   391   000FCB                     MEMCON          equ	4043	;# 
   392   000FCC                     TMR2            equ	4044	;# 
   393   000FCD                     T1CON           equ	4045	;# 
   394   000FCE                     TMR1            equ	4046	;# 
   395   000FCE                     TMR1L           equ	4046	;# 
   396   000FCF                     TMR1H           equ	4047	;# 
   397   000FD0                     RCON            equ	4048	;# 
   398   000FD1                     WDTCON          equ	4049	;# 
   399   000FD2                     HLVDCON         equ	4050	;# 
   400   000FD2                     LVDCON          equ	4050	;# 
   401   000FD3                     OSCCON          equ	4051	;# 
   402   000FD5                     T0CON           equ	4053	;# 
   403   000FD6                     TMR0            equ	4054	;# 
   404   000FD6                     TMR0L           equ	4054	;# 
   405   000FD7                     TMR0H           equ	4055	;# 
   406   000FD8                     STATUS          equ	4056	;# 
   407   000FD9                     FSR2            equ	4057	;# 
   408   000FD9                     FSR2L           equ	4057	;# 
   409   000FDA                     FSR2H           equ	4058	;# 
   410   000FDB                     PLUSW2          equ	4059	;# 
   411   000FDC                     PREINC2         equ	4060	;# 
   412   000FDD                     POSTDEC2        equ	4061	;# 
   413   000FDE                     POSTINC2        equ	4062	;# 
   414   000FDF                     INDF2           equ	4063	;# 
   415   000FE0                     BSR             equ	4064	;# 
   416   000FE1                     FSR1            equ	4065	;# 
   417   000FE1                     FSR1L           equ	4065	;# 
   418   000FE2                     FSR1H           equ	4066	;# 
   419   000FE3                     PLUSW1          equ	4067	;# 
   420   000FE4                     PREINC1         equ	4068	;# 
   421   000FE5                     POSTDEC1        equ	4069	;# 
   422   000FE6                     POSTINC1        equ	4070	;# 
   423   000FE7                     INDF1           equ	4071	;# 
   424   000FE8                     WREG            equ	4072	;# 
   425   000FE9                     FSR0            equ	4073	;# 
   426   000FE9                     FSR0L           equ	4073	;# 
   427   000FEA                     FSR0H           equ	4074	;# 
   428   000FEB                     PLUSW0          equ	4075	;# 
   429   000FEC                     PREINC0         equ	4076	;# 
   430   000FED                     POSTDEC0        equ	4077	;# 
   431   000FEE                     POSTINC0        equ	4078	;# 
   432   000FEF                     INDF0           equ	4079	;# 
   433   000FF0                     INTCON3         equ	4080	;# 
   434   000FF1                     INTCON2         equ	4081	;# 
   435   000FF2                     INTCON          equ	4082	;# 
   436   000FF3                     PROD            equ	4083	;# 
   437   000FF3                     PRODL           equ	4083	;# 
   438   000FF4                     PRODH           equ	4084	;# 
   439   000FF5                     TABLAT          equ	4085	;# 
   440   000FF6                     TBLPTR          equ	4086	;# 
   441   000FF6                     TBLPTRL         equ	4086	;# 
   442   000FF7                     TBLPTRH         equ	4087	;# 
   443   000FF8                     TBLPTRU         equ	4088	;# 
   444   000FF9                     PCLAT           equ	4089	;# 
   445   000FF9                     PC              equ	4089	;# 
   446   000FF9                     PCL             equ	4089	;# 
   447   000FFA                     PCLATH          equ	4090	;# 
   448   000FFB                     PCLATU          equ	4091	;# 
   449   000FFC                     STKPTR          equ	4092	;# 
   450   000FFD                     TOS             equ	4093	;# 
   451   000FFD                     TOSL            equ	4093	;# 
   452   000FFE                     TOSH            equ	4094	;# 
   453   000FFF                     TOSU            equ	4095	;# 
   454   000F95                     _TRISDbits      set	3989
   455   000F96                     _TRISEbits      set	3990
   456   000F8D                     _LATEbits       set	3981
   457   000F82                     _PORTCbits      set	3970
   458   000F81                     _PORTB          set	3969
   459   000F8B                     _LATCbits       set	3979
   460   000F80                     _PORTAbits      set	3968
   461   000F8C                     _LATDbits       set	3980
   462   000F89                     _LATAbits       set	3977
   463   000F81                     _PORTBbits      set	3969
   464   000FF1                     _INTCON2bits    set	4081
   465   000FD0                     _RCONbits       set	4048
   466   000FF2                     _INTCONbits     set	4082
   467   000F94                     _TRISCbits      set	3988
   468   000F94                     _TRISC          set	3988
   469   000F8D                     _LATE           set	3981
   470   000F96                     _TRISE          set	3990
   471   000F95                     _TRISD          set	3989
   472   000F89                     _LATA           set	3977
   473   000F92                     _TRISA          set	3986
   474   000F93                     _TRISB          set	3987
   475   000FC1                     _ADCON1bits     set	4033
   476                           
   477                           	psect	smallconst
   478   000800                     __psmallconst:
   479                           	callstack 0
   480   000800  00                 	db	0
   481   000801                     STR_2:
   482   000801  49                 	db	73	;'I'
   483   000802  6E                 	db	110	;'n'
   484   000803  69                 	db	105	;'i'
   485   000804  63                 	db	99	;'c'
   486   000805  69                 	db	105	;'i'
   487   000806  61                 	db	97	;'a'
   488   000807  6C                 	db	108	;'l'
   489   000808  69                 	db	105	;'i'
   490   000809  7A                 	db	122	;'z'
   491   00080A  61                 	db	97	;'a'
   492   00080B  6E                 	db	110	;'n'
   493   00080C  64                 	db	100	;'d'
   494   00080D  6F                 	db	111	;'o'
   495   00080E  00                 	db	0
   496   00080F                     STR_9:
   497   00080F  4D                 	db	77	;'M'
   498   000810  45                 	db	69	;'E'
   499   000811  54                 	db	84	;'T'
   500   000812  41                 	db	65	;'A'
   501   000813  4C                 	db	76	;'L'
   502   000814  49                 	db	73	;'I'
   503   000815  43                 	db	67	;'C'
   504   000816  41                 	db	65	;'A'
   505   000817  00                 	db	0
   506   000818                     STR_10:
   507   000818  42                 	db	66	;'B'
   508   000819  4C                 	db	76	;'L'
   509   00081A  41                 	db	65	;'A'
   510   00081B  4E                 	db	78	;'N'
   511   00081C  43                 	db	67	;'C'
   512   00081D  41                 	db	65	;'A'
   513   00081E  00                 	db	0
   514   00081F                     STR_8:
   515   00081F  4E                 	db	78	;'N'
   516   000820  45                 	db	69	;'E'
   517   000821  47                 	db	71	;'G'
   518   000822  52                 	db	82	;'R'
   519   000823  41                 	db	65	;'A'
   520   000824  00                 	db	0
   521   000825                     STR_4:
   522   000825  43                 	db	67	;'C'
   523   000826  49                 	db	73	;'I'
   524   000827  4E                 	db	78	;'N'
   525   000828  54                 	db	84	;'T'
   526   000829  41                 	db	65	;'A'
   527   00082A  00                 	db	0
   528   00082B                     STR_5:
   529   00082B  50                 	db	80	;'P'
   530   00082C  49                 	db	73	;'I'
   531   00082D  4E                 	db	78	;'N'
   532   00082E  5A                 	db	90	;'Z'
   533   00082F  41                 	db	65	;'A'
   534   000830  00                 	db	0
   535   000831                     STR_6:
   536   000831  50                 	db	80	;'P'
   537   000832  4C                 	db	76	;'L'
   538   000833  41                 	db	65	;'A'
   539   000834  54                 	db	84	;'T'
   540   000835  4F                 	db	79	;'O'
   541   000836  00                 	db	0
   542   000837                     STR_3:
   543   000837  53                 	db	83	;'S'
   544   000838  54                 	db	84	;'T'
   545   000839  41                 	db	65	;'A'
   546   00083A  52                 	db	82	;'R'
   547   00083B  54                 	db	84	;'T'
   548   00083C  00                 	db	0
   549   00083D                     STR_11:
   550   00083D  4E                 	db	78	;'N'
   551   00083E  41                 	db	65	;'A'
   552   00083F  44                 	db	68	;'D'
   553   000840  41                 	db	65	;'A'
   554   000841  00                 	db	0
   555   000842                     STR_13:
   556   000842  20                 	db	32
   557   000843  42                 	db	66	;'B'
   558   000844  3A                 	db	58	;':'
   559   000845  00                 	db	0
   560   000846                     STR_14:
   561   000846  20                 	db	32
   562   000847  4E                 	db	78	;'N'
   563   000848  3A                 	db	58	;':'
   564   000849  00                 	db	0
   565   00084A                     STR_12:
   566   00084A  4D                 	db	77	;'M'
   567   00084B  3A                 	db	58	;':'
   568   00084C  00                 	db	0
   569   00084D                     STR_1:
   570   00084D  25                 	db	37
   571   00084E  64                 	db	100	;'d'
   572   00084F  00                 	db	0
   573   000825                     STR_7           equ	STR_4
   574   000850  00                 	db	0	; dummy byte at the end
   575   000800                     __smallconst    set	__psmallconst
   576   000800                     __mediumconst   set	__psmallconst
   577   000002                     __activetblptr  equ	2
   578                           
   579                           ; #config settings
   580                           
   581                           	psect	cinit
   582   00144A                     __pcinit:
   583                           	callstack 0
   584   00144A                     start_initialization:
   585                           	callstack 0
   586   00144A                     __initialization:
   587                           	callstack 0
   588                           
   589                           ; Clear objects allocated to BANK0 (32 bytes)
   590   00144A  EE00  F060         	lfsr	0,__pbssBANK0
   591   00144E  0E20               	movlw	32
   592   001450                     clear_0:
   593   001450  6AEE               	clrf	postinc0,c
   594   001452  06E8               	decf	wreg,f,c
   595   001454  E1FD               	bnz	clear_0
   596                           
   597                           ; Clear objects allocated to COMRAM (19 bytes)
   598   001456  EE00  F046         	lfsr	0,__pbssCOMRAM
   599   00145A  0E13               	movlw	19
   600   00145C                     clear_1:
   601   00145C  6AEE               	clrf	postinc0,c
   602   00145E  06E8               	decf	wreg,f,c
   603   001460  E1FD               	bnz	clear_1
   604   001462                     end_of_initialization:
   605                           	callstack 0
   606   001462                     __end_of__initialization:
   607                           	callstack 0
   608   001462  9059               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   609   001464  9259               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   610   001466  0E00               	movlw	low (__Lmediumconst shr (0+16))
   611   001468  6EF8               	movwf	tblptru,c
   612   00146A  0100               	movlb	0
   613   00146C  EF29  F004         	goto	_main	;jump to C main() function
   614                           
   615                           	psect	bssCOMRAM
   616   000046                     __pbssCOMRAM:
   617                           	callstack 0
   618   000046                     _width:
   619                           	callstack 0
   620   000046                     	ds	2
   621   000048                     _prec:
   622                           	callstack 0
   623   000048                     	ds	2
   624   00004A                     _escena:
   625                           	callstack 0
   626   00004A                     	ds	2
   627   00004C                     _banderaM:
   628                           	callstack 0
   629   00004C                     	ds	2
   630   00004E                     _banderaB:
   631                           	callstack 0
   632   00004E                     	ds	2
   633   000050                     _banderaN:
   634                           	callstack 0
   635   000050                     	ds	2
   636   000052                     _metalica:
   637                           	callstack 0
   638   000052                     	ds	2
   639   000054                     _negra:
   640                           	callstack 0
   641   000054                     	ds	2
   642   000056                     _blanca:
   643                           	callstack 0
   644   000056                     	ds	2
   645   000058                     _flags:
   646                           	callstack 0
   647   000058                     	ds	1
   648                           
   649                           	psect	bssBANK0
   650   000060                     __pbssBANK0:
   651                           	callstack 0
   652   000060                     _dbuf:
   653                           	callstack 0
   654   000060                     	ds	32
   655                           
   656                           	psect	cstackCOMRAM
   657   000001                     __pcstackCOMRAM:
   658                           	callstack 0
   659   000001                     ??_LowISR:
   660                           
   661                           ; 1 bytes @ 0x0
   662   000001                     	ds	1
   663   000002                     LowISR@dummy:
   664                           	callstack 0
   665                           
   666                           ; 1 bytes @ 0x1
   667   000002                     	ds	1
   668   000003                     ?___awdiv:
   669                           	callstack 0
   670   000003                     ?___awmod:
   671                           	callstack 0
   672   000003                     Lcd_Port@a:
   673                           	callstack 0
   674   000003                     ___awdiv@dividend:
   675                           	callstack 0
   676   000003                     ___awmod@dividend:
   677                           	callstack 0
   678   000003                     fputc@c:
   679                           	callstack 0
   680   000003                     
   681                           ; 1 bytes @ 0x2
   682   000003                     	ds	1
   683   000004                     Lcd_Write_Char@temp:
   684                           	callstack 0
   685   000004                     ??_Lcd_Cmd:
   686   000004                     
   687                           ; 1 bytes @ 0x3
   688   000004                     	ds	1
   689   000005                     Lcd_Cmd@a:
   690                           	callstack 0
   691   000005                     Lcd_Write_Char@y:
   692                           	callstack 0
   693   000005                     fputc@fp:
   694                           	callstack 0
   695   000005                     ___awdiv@divisor:
   696                           	callstack 0
   697   000005                     ___awmod@divisor:
   698                           	callstack 0
   699                           
   700                           ; 2 bytes @ 0x4
   701   000005                     	ds	1
   702   000006                     Lcd_Set_Cursor@b:
   703                           	callstack 0
   704   000006                     Lcd_Write_Char@a:
   705                           	callstack 0
   706   000006                     ??_Lcd_Init:
   707   000006                     ??_fputc:
   708                           
   709                           ; 1 bytes @ 0x5
   710   000006                     	ds	1
   711   000007                     Lcd_Set_Cursor@a:
   712                           	callstack 0
   713   000007                     ___awdiv@counter:
   714                           	callstack 0
   715   000007                     ___awmod@counter:
   716                           	callstack 0
   717   000007                     Lcd_Write_String@a:
   718                           	callstack 0
   719   000007                     
   720                           ; 1 bytes @ 0x6
   721   000007                     	ds	1
   722   000008                     Lcd_Set_Cursor@z:
   723                           	callstack 0
   724   000008                     ___awdiv@sign:
   725                           	callstack 0
   726   000008                     ___awmod@sign:
   727                           	callstack 0
   728                           
   729                           ; 1 bytes @ 0x7
   730   000008                     	ds	1
   731   000009                     ?_abs:
   732                           	callstack 0
   733   000009                     Lcd_Set_Cursor@y:
   734                           	callstack 0
   735   000009                     ___awdiv@quotient:
   736                           	callstack 0
   737   000009                     abs@a:
   738                           	callstack 0
   739   000009                     ??_Lcd_Write_String:
   740                           
   741                           ; 1 bytes @ 0x8
   742   000009                     	ds	1
   743   00000A                     Lcd_Set_Cursor@temp:
   744                           	callstack 0
   745                           
   746                           ; 1 bytes @ 0x9
   747   00000A                     	ds	1
   748   00000B                     Lcd_Write_String@i:
   749                           	callstack 0
   750   00000B                     ??_abs:
   751                           
   752                           ; 1 bytes @ 0xA
   753   00000B                     	ds	2
   754   00000D                     vfpfcnvrt@fp:
   755                           	callstack 0
   756                           
   757                           ; 1 bytes @ 0xC
   758   00000D                     	ds	1
   759   00000E                     vfpfcnvrt@fmt:
   760                           	callstack 0
   761                           
   762                           ; 1 bytes @ 0xD
   763   00000E                     	ds	1
   764   00000F                     vfpfcnvrt@ap:
   765                           	callstack 0
   766                           
   767                           ; 1 bytes @ 0xE
   768   00000F                     	ds	1
   769   000010                     ??_vfpfcnvrt:
   770                           
   771                           ; 1 bytes @ 0xF
   772   000010                     	ds	1
   773   000011                     vfpfcnvrt@done:
   774                           	callstack 0
   775                           
   776                           ; 1 bytes @ 0x10
   777   000011                     	ds	1
   778   000012                     vfpfcnvrt@cp:
   779                           	callstack 0
   780                           
   781                           ; 1 bytes @ 0x11
   782   000012                     	ds	1
   783   000013                     vfpfcnvrt@convarg:
   784                           	callstack 0
   785                           
   786                           ; 4 bytes @ 0x12
   787   000013                     	ds	4
   788   000017                     vfpfcnvrt@c:
   789                           	callstack 0
   790                           
   791                           ; 1 bytes @ 0x16
   792   000017                     	ds	1
   793   000018                     ?_vfprintf:
   794                           	callstack 0
   795   000018                     vfprintf@fp:
   796                           	callstack 0
   797                           
   798                           ; 1 bytes @ 0x17
   799   000018                     	ds	1
   800   000019                     vfprintf@fmt:
   801                           	callstack 0
   802                           
   803                           ; 1 bytes @ 0x18
   804   000019                     	ds	1
   805   00001A                     vfprintf@ap:
   806                           	callstack 0
   807                           
   808                           ; 1 bytes @ 0x19
   809   00001A                     	ds	1
   810   00001B                     vfprintf@cfmt:
   811                           	callstack 0
   812   00001B                     
   813                           ; 1 bytes @ 0x1A
   814   00001B                     	ds	1
   815   00001C                     ?_sprintf:
   816                           	callstack 0
   817   00001C                     sprintf@s:
   818                           	callstack 0
   819                           
   820                           ; 1 bytes @ 0x1B
   821   00001C                     	ds	1
   822   00001D                     sprintf@fmt:
   823                           	callstack 0
   824                           
   825                           ; 1 bytes @ 0x1C
   826   00001D                     	ds	3
   827   000020                     sprintf@ap:
   828                           	callstack 0
   829   000020                     
   830                           ; 1 bytes @ 0x1F
   831   000020                     	ds	1
   832   000021                     sprintf@f:
   833                           	callstack 0
   834                           
   835                           ; 11 bytes @ 0x20
   836   000021                     	ds	11
   837   00002C                     mostrar_variable@x:
   838                           	callstack 0
   839                           
   840                           ; 2 bytes @ 0x2B
   841   00002C                     	ds	2
   842   00002E                     mostrar_variable@buffer:
   843                           	callstack 0
   844   00002E                     
   845                           ; 1 bytes @ 0x2D
   846   00002E                     	ds	20
   847   000042                     ??_main:
   848                           
   849                           ; 1 bytes @ 0x41
   850   000042                     	ds	2
   851   000044                     main@giro:
   852                           	callstack 0
   853                           
   854                           ; 2 bytes @ 0x43
   855   000044                     	ds	2
   856                           
   857 ;;
   858 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   859 ;;
   860 ;; *************** function _main *****************
   861 ;; Defined at:
   862 ;;		line 145 in file "Cinta.c"
   863 ;; Parameters:    Size  Location     Type
   864 ;;		None
   865 ;; Auto vars:     Size  Location     Type
   866 ;;  giro            2   67[COMRAM] int 
   867 ;; Return value:  Size  Location     Type
   868 ;;                  1    wreg      void 
   869 ;; Registers used:
   870 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   871 ;; Tracked objects:
   872 ;;		On entry : 0/0
   873 ;;		On exit  : 0/0
   874 ;;		Unchanged: 0/0
   875 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   876 ;;      Params:         0       0       0       0       0       0       0       0       0
   877 ;;      Locals:         2       0       0       0       0       0       0       0       0
   878 ;;      Temps:          2       0       0       0       0       0       0       0       0
   879 ;;      Totals:         4       0       0       0       0       0       0       0       0
   880 ;;Total ram usage:        4 bytes
   881 ;; Hardware stack levels required when called: 9
   882 ;; This function calls:
   883 ;;		_Lcd_Cmd
   884 ;;		_Lcd_Init
   885 ;;		_Lcd_Set_Cursor
   886 ;;		_init_int
   887 ;;		_init_maqueta
   888 ;;		_init_ports
   889 ;;		_mostrar_conteo
   890 ;; This function is called by:
   891 ;;		Startup code after reset
   892 ;; This function uses a non-reentrant model
   893 ;;
   894                           
   895                           	psect	text0
   896   000852                     __ptext0:
   897                           	callstack 0
   898   000852                     _main:
   899                           	callstack 22
   900   000852                     
   901                           ;Cinta.c: 146:     int giro=0;
   902   000852  0E00               	movlw	0
   903   000854  6E45               	movwf	(main@giro+1)^0,c
   904   000856  0E00               	movlw	0
   905   000858  6E44               	movwf	main@giro^0,c
   906   00085A                     
   907                           ;Cinta.c: 147:     init_int();
   908   00085A  EC64  F00A         	call	_init_int	;wreg free
   909                           
   910                           ;Cinta.c: 148:     init_ports();
   911   00085E  EC58  F00A         	call	_init_ports	;wreg free
   912                           
   913                           ;Cinta.c: 149:     Lcd_Init();
   914   000862  ECD7  F008         	call	_Lcd_Init	;wreg free
   915                           
   916                           ;Cinta.c: 150:     Lcd_Cmd(0x00);
   917   000866  0E00               	movlw	0
   918   000868  EC48  F00A         	call	_Lcd_Cmd
   919   00086C                     
   920                           ;Cinta.c: 151:     _delay((unsigned long)((10)*(4000000/4000.0)));
   921   00086C  0E0D               	movlw	13
   922   00086E  6E42               	movwf	??_main^0,c
   923   000870  0EFC               	movlw	252
   924   000872                     u1547:
   925   000872  2EE8               	decfsz	wreg,f,c
   926   000874  D7FE               	bra	u1547
   927   000876  2E42               	decfsz	??_main^0,f,c
   928   000878  D7FC               	bra	u1547
   929   00087A                     
   930                           ;Cinta.c: 152:     Lcd_Cmd(0x0E);
   931   00087A  0E0E               	movlw	14
   932   00087C  EC48  F00A         	call	_Lcd_Cmd
   933   000880                     
   934                           ;Cinta.c: 153:     Lcd_Set_Cursor(1,1);
   935   000880  0E01               	movlw	1
   936   000882  6E06               	movwf	Lcd_Set_Cursor@b^0,c
   937   000884  0E01               	movlw	1
   938   000886  EC61  F007         	call	_Lcd_Set_Cursor
   939   00088A                     
   940                           ;Cinta.c: 154:     escena=1;
   941   00088A  0E00               	movlw	0
   942   00088C  6E4B               	movwf	(_escena+1)^0,c
   943   00088E  0E01               	movlw	1
   944   000890  6E4A               	movwf	_escena^0,c
   945   000892                     
   946                           ;Cinta.c: 155:     mostrar_conteo();
   947   000892  EC89  F005         	call	_mostrar_conteo	;wreg free
   948   000896                     
   949                           ;Cinta.c: 156:     init_maqueta();
   950   000896  EC57  F009         	call	_init_maqueta	;wreg free
   951   00089A                     
   952                           ;Cinta.c: 157:     _delay((unsigned long)((1000)*(4000000/4000.0)));
   953   00089A  0E06               	movlw	6
   954   00089C  6E43               	movwf	(??_main+1)^0,c
   955   00089E  0E13               	movlw	19
   956   0008A0  6E42               	movwf	??_main^0,c
   957   0008A2  0EAE               	movlw	174
   958   0008A4                     u1557:
   959   0008A4  2EE8               	decfsz	wreg,f,c
   960   0008A6  D7FE               	bra	u1557
   961   0008A8  2E42               	decfsz	??_main^0,f,c
   962   0008AA  D7FC               	bra	u1557
   963   0008AC  2E43               	decfsz	(??_main+1)^0,f,c
   964   0008AE  D7FA               	bra	u1557
   965   0008B0                     
   966                           ;Cinta.c: 158:     escena=2;
   967   0008B0  0E00               	movlw	0
   968   0008B2  6E4B               	movwf	(_escena+1)^0,c
   969   0008B4  0E02               	movlw	2
   970   0008B6  6E4A               	movwf	_escena^0,c
   971   0008B8                     
   972                           ;Cinta.c: 159:     mostrar_conteo();
   973   0008B8  EC89  F005         	call	_mostrar_conteo	;wreg free
   974   0008BC                     l120:
   975   0008BC  A081               	btfss	129,0,c	;volatile
   976   0008BE  EF63  F004         	goto	u1331
   977   0008C2  EF65  F004         	goto	u1330
   978   0008C6                     u1331:
   979   0008C6  EF5E  F004         	goto	l120
   980   0008CA                     u1330:
   981   0008CA                     
   982                           ;Cinta.c: 162:     LATDbits.LATD0=1;
   983   0008CA  808C               	bsf	140,0,c	;volatile
   984   0008CC                     
   985                           ;Cinta.c: 163:     escena=3;
   986   0008CC  0E00               	movlw	0
   987   0008CE  6E4B               	movwf	(_escena+1)^0,c
   988   0008D0  0E03               	movlw	3
   989   0008D2  6E4A               	movwf	_escena^0,c
   990   0008D4                     
   991                           ;Cinta.c: 164:     mostrar_conteo();
   992   0008D4  EC89  F005         	call	_mostrar_conteo	;wreg free
   993   0008D8                     l123:
   994   0008D8  AE82               	btfss	130,7,c	;volatile
   995   0008DA  EF71  F004         	goto	u1341
   996   0008DE  EF73  F004         	goto	u1340
   997   0008E2                     u1341:
   998   0008E2  EF6C  F004         	goto	l123
   999   0008E6                     u1340:
  1000   0008E6                     
  1001                           ;Cinta.c: 166:     escena=4;
  1002   0008E6  0E00               	movlw	0
  1003   0008E8  6E4B               	movwf	(_escena+1)^0,c
  1004   0008EA  0E04               	movlw	4
  1005   0008EC  6E4A               	movwf	_escena^0,c
  1006   0008EE                     
  1007                           ;Cinta.c: 167:     mostrar_conteo();
  1008   0008EE  EC89  F005         	call	_mostrar_conteo	;wreg free
  1009   0008F2                     
  1010                           ;Cinta.c: 168:     LATDbits.LATD0=0;
  1011   0008F2  908C               	bcf	140,0,c	;volatile
  1012   0008F4                     
  1013                           ;Cinta.c: 169:     LATDbits.LATD2=1;
  1014   0008F4  848C               	bsf	140,2,c	;volatile
  1015   0008F6                     l126:
  1016   0008F6  A481               	btfss	129,2,c	;volatile
  1017   0008F8  EF80  F004         	goto	u1351
  1018   0008FC  EF82  F004         	goto	u1350
  1019   000900                     u1351:
  1020   000900  EF7B  F004         	goto	l126
  1021   000904                     u1350:
  1022   000904                     
  1023                           ;Cinta.c: 171:     LATDbits.LATD2=0;
  1024   000904  948C               	bcf	140,2,c	;volatile
  1025   000906                     
  1026                           ;Cinta.c: 172:     _delay((unsigned long)((1500)*(4000000/4000.0)));
  1027   000906  0E08               	movlw	8
  1028   000908  6E43               	movwf	(??_main+1)^0,c
  1029   00090A  0E9D               	movlw	157
  1030   00090C  6E42               	movwf	??_main^0,c
  1031   00090E  0E06               	movlw	6
  1032   000910                     u1567:
  1033   000910  2EE8               	decfsz	wreg,f,c
  1034   000912  D7FE               	bra	u1567
  1035   000914  2E42               	decfsz	??_main^0,f,c
  1036   000916  D7FC               	bra	u1567
  1037   000918  2E43               	decfsz	(??_main+1)^0,f,c
  1038   00091A  D7FA               	bra	u1567
  1039   00091C                     
  1040                           ;Cinta.c: 173:     LATAbits.LA4=1;
  1041   00091C  8889               	bsf	137,4,c	;volatile
  1042                           
  1043                           ;Cinta.c: 174:     _delay((unsigned long)((1000)*(4000000/4000.0)));
  1044   00091E  0E06               	movlw	6
  1045   000920  6E43               	movwf	(??_main+1)^0,c
  1046   000922  0E13               	movlw	19
  1047   000924  6E42               	movwf	??_main^0,c
  1048   000926  0EAE               	movlw	174
  1049   000928                     u1577:
  1050   000928  2EE8               	decfsz	wreg,f,c
  1051   00092A  D7FE               	bra	u1577
  1052   00092C  2E42               	decfsz	??_main^0,f,c
  1053   00092E  D7FC               	bra	u1577
  1054   000930  2E43               	decfsz	(??_main+1)^0,f,c
  1055   000932  D7FA               	bra	u1577
  1056   000934                     
  1057                           ;Cinta.c: 175:     LATAbits.LA5=1;
  1058   000934  8A89               	bsf	137,5,c	;volatile
  1059   000936                     l129:
  1060   000936  A881               	btfss	129,4,c	;volatile
  1061   000938  EFA0  F004         	goto	u1361
  1062   00093C  EFA2  F004         	goto	u1360
  1063   000940                     u1361:
  1064   000940  EF9B  F004         	goto	l129
  1065   000944                     u1360:
  1066   000944                     
  1067                           ;Cinta.c: 177:     LATAbits.LA4=0;
  1068   000944  9889               	bcf	137,4,c	;volatile
  1069   000946                     l132:
  1070   000946  A681               	btfss	129,3,c	;volatile
  1071   000948  EFA8  F004         	goto	u1371
  1072   00094C  EFAA  F004         	goto	u1370
  1073   000950                     u1371:
  1074   000950  EFA3  F004         	goto	l132
  1075   000954                     u1370:
  1076   000954                     
  1077                           ;Cinta.c: 179:     LATDbits.LATD3=1;
  1078   000954  868C               	bsf	140,3,c	;volatile
  1079   000956                     l135:
  1080   000956  A281               	btfss	129,1,c	;volatile
  1081   000958  EFB0  F004         	goto	u1381
  1082   00095C  EFB2  F004         	goto	u1380
  1083   000960                     u1381:
  1084   000960  EFAB  F004         	goto	l135
  1085   000964                     u1380:
  1086   000964                     
  1087                           ;Cinta.c: 181:     LATAbits.LA4=1;
  1088   000964  8889               	bsf	137,4,c	;volatile
  1089                           
  1090                           ;Cinta.c: 182:     LATDbits.LATD3=0;
  1091   000966  968C               	bcf	140,3,c	;volatile
  1092   000968                     
  1093                           ;Cinta.c: 183:     _delay((unsigned long)((2000)*(4000000/4000.0)));
  1094   000968  0E0B               	movlw	11
  1095   00096A  6E43               	movwf	(??_main+1)^0,c
  1096   00096C  0E26               	movlw	38
  1097   00096E  6E42               	movwf	??_main^0,c
  1098   000970  0E5E               	movlw	94
  1099   000972                     u1587:
  1100   000972  2EE8               	decfsz	wreg,f,c
  1101   000974  D7FE               	bra	u1587
  1102   000976  2E42               	decfsz	??_main^0,f,c
  1103   000978  D7FC               	bra	u1587
  1104   00097A  2E43               	decfsz	(??_main+1)^0,f,c
  1105   00097C  D7FA               	bra	u1587
  1106   00097E                     
  1107                           ;Cinta.c: 184:     LATAbits.LA5=0;
  1108   00097E  9A89               	bcf	137,5,c	;volatile
  1109   000980                     l138:
  1110   000980  B881               	btfsc	129,4,c	;volatile
  1111   000982  EFC5  F004         	goto	u1391
  1112   000986  EFC7  F004         	goto	u1390
  1113   00098A                     u1391:
  1114   00098A  EFC0  F004         	goto	l138
  1115   00098E                     u1390:
  1116   00098E                     
  1117                           ;Cinta.c: 186:     escena=5;
  1118   00098E  0E00               	movlw	0
  1119   000990  6E4B               	movwf	(_escena+1)^0,c
  1120   000992  0E05               	movlw	5
  1121   000994  6E4A               	movwf	_escena^0,c
  1122   000996                     
  1123                           ;Cinta.c: 187:     mostrar_conteo();
  1124   000996  EC89  F005         	call	_mostrar_conteo	;wreg free
  1125   00099A                     
  1126                           ;Cinta.c: 188:     LATAbits.LA4=0;
  1127   00099A  9889               	bcf	137,4,c	;volatile
  1128   00099C                     l141:
  1129   00099C  A681               	btfss	129,3,c	;volatile
  1130   00099E  EFD3  F004         	goto	u1401
  1131   0009A2  EFD5  F004         	goto	u1400
  1132   0009A6                     u1401:
  1133   0009A6  EFCE  F004         	goto	l141
  1134   0009AA                     u1400:
  1135   0009AA                     
  1136                           ;Cinta.c: 190:     LATAbits.LA6=1;
  1137   0009AA  8C89               	bsf	137,6,c	;volatile
  1138   0009AC                     
  1139                           ;Cinta.c: 191:     _delay((unsigned long)((50)*(4000000/4000.0)));
  1140   0009AC  0E41               	movlw	65
  1141   0009AE  6E42               	movwf	??_main^0,c
  1142   0009B0  0EEE               	movlw	238
  1143   0009B2                     u1597:
  1144   0009B2  2EE8               	decfsz	wreg,f,c
  1145   0009B4  D7FE               	bra	u1597
  1146   0009B6  2E42               	decfsz	??_main^0,f,c
  1147   0009B8  D7FC               	bra	u1597
  1148   0009BA  D000               	nop2	
  1149                           
  1150                           ;Cinta.c: 192:     while (giro < 2) {
  1151   0009BC  EF14  F005         	goto	l1973
  1152   0009C0                     l146:
  1153   0009C0  BA81               	btfsc	129,5,c	;volatile
  1154   0009C2  EFE5  F004         	goto	u1411
  1155   0009C6  EFE7  F004         	goto	u1410
  1156   0009CA                     u1411:
  1157   0009CA  EFE0  F004         	goto	l146
  1158   0009CE                     u1410:
  1159   0009CE                     
  1160                           ;Cinta.c: 195:         if((PORTBbits.RB7==0)&&(PORTAbits.RA1==0)){
  1161   0009CE  BE81               	btfsc	129,7,c	;volatile
  1162   0009D0  EFEC  F004         	goto	u1421
  1163   0009D4  EFEE  F004         	goto	u1420
  1164   0009D8                     u1421:
  1165   0009D8  EFF9  F004         	goto	l1965
  1166   0009DC                     u1420:
  1167   0009DC  B280               	btfsc	128,1,c	;volatile
  1168   0009DE  EFF3  F004         	goto	u1431
  1169   0009E2  EFF5  F004         	goto	u1430
  1170   0009E6                     u1431:
  1171   0009E6  EFF9  F004         	goto	l1965
  1172   0009EA                     u1430:
  1173   0009EA                     
  1174                           ;Cinta.c: 196:             banderaN=1;
  1175   0009EA  0E00               	movlw	0
  1176   0009EC  6E51               	movwf	(_banderaN+1)^0,c
  1177   0009EE  0E01               	movlw	1
  1178   0009F0  6E50               	movwf	_banderaN^0,c
  1179   0009F2                     l1965:
  1180                           
  1181                           ;Cinta.c: 199:          if((PORTAbits.RA1==1)&&(PORTBbits.RB7==1)){
  1182   0009F2  A280               	btfss	128,1,c	;volatile
  1183   0009F4  EFFE  F004         	goto	u1441
  1184   0009F8  EF00  F005         	goto	u1440
  1185   0009FC                     u1441:
  1186   0009FC  EF0B  F005         	goto	l151
  1187   000A00                     u1440:
  1188   000A00  AE81               	btfss	129,7,c	;volatile
  1189   000A02  EF05  F005         	goto	u1451
  1190   000A06  EF07  F005         	goto	u1450
  1191   000A0A                     u1451:
  1192   000A0A  EF0B  F005         	goto	l151
  1193   000A0E                     u1450:
  1194   000A0E                     
  1195                           ;Cinta.c: 200:             banderaM=1;
  1196   000A0E  0E00               	movlw	0
  1197   000A10  6E4D               	movwf	(_banderaM+1)^0,c
  1198   000A12  0E01               	movlw	1
  1199   000A14  6E4C               	movwf	_banderaM^0,c
  1200   000A16                     l151:
  1201   000A16  AA81               	btfss	129,5,c	;volatile
  1202   000A18  EF10  F005         	goto	u1461
  1203   000A1C  EF12  F005         	goto	u1460
  1204   000A20                     u1461:
  1205   000A20  EF0B  F005         	goto	l151
  1206   000A24                     u1460:
  1207   000A24                     
  1208                           ;Cinta.c: 203:         giro++;
  1209   000A24  4A44               	infsnz	main@giro^0,f,c
  1210   000A26  2A45               	incf	(main@giro+1)^0,f,c
  1211   000A28                     l1973:
  1212                           
  1213                           ;Cinta.c: 192:     while (giro < 2) {
  1214   000A28  BE45               	btfsc	(main@giro+1)^0,7,c
  1215   000A2A  EF20  F005         	goto	u1471
  1216   000A2E  5045               	movf	(main@giro+1)^0,w,c
  1217   000A30  E109               	bnz	u1470
  1218   000A32  0E02               	movlw	2
  1219   000A34  5C44               	subwf	main@giro^0,w,c
  1220   000A36  A0D8               	btfss	status,0,c
  1221   000A38  EF20  F005         	goto	u1471
  1222   000A3C  EF22  F005         	goto	u1470
  1223   000A40                     u1471:
  1224   000A40  EFE0  F004         	goto	l146
  1225   000A44                     u1470:
  1226   000A44                     
  1227                           ;Cinta.c: 205:     if(banderaN==1){
  1228   000A44  0450               	decf	_banderaN^0,w,c
  1229   000A46  1051               	iorwf	(_banderaN+1)^0,w,c
  1230   000A48  A4D8               	btfss	status,2,c
  1231   000A4A  EF29  F005         	goto	u1481
  1232   000A4E  EF2B  F005         	goto	u1480
  1233   000A52                     u1481:
  1234   000A52  EF2D  F005         	goto	l1979
  1235   000A56                     u1480:
  1236   000A56                     
  1237                           ;Cinta.c: 206:         negra++;
  1238   000A56  4A54               	infsnz	_negra^0,f,c
  1239   000A58  2A55               	incf	(_negra+1)^0,f,c
  1240   000A5A                     l1979:
  1241                           
  1242                           ;Cinta.c: 208:     if(banderaM==1){
  1243   000A5A  044C               	decf	_banderaM^0,w,c
  1244   000A5C  104D               	iorwf	(_banderaM+1)^0,w,c
  1245   000A5E  A4D8               	btfss	status,2,c
  1246   000A60  EF34  F005         	goto	u1491
  1247   000A64  EF36  F005         	goto	u1490
  1248   000A68                     u1491:
  1249   000A68  EF38  F005         	goto	l1983
  1250   000A6C                     u1490:
  1251   000A6C                     
  1252                           ;Cinta.c: 209:         metalica++;
  1253   000A6C  4A52               	infsnz	_metalica^0,f,c
  1254   000A6E  2A53               	incf	(_metalica+1)^0,f,c
  1255   000A70                     l1983:
  1256                           
  1257                           ;Cinta.c: 211:     if((banderaM==0)&&(banderaN==0)){
  1258   000A70  504C               	movf	_banderaM^0,w,c
  1259   000A72  104D               	iorwf	(_banderaM+1)^0,w,c
  1260   000A74  A4D8               	btfss	status,2,c
  1261   000A76  EF3F  F005         	goto	u1501
  1262   000A7A  EF41  F005         	goto	u1500
  1263   000A7E                     u1501:
  1264   000A7E  EF4C  F005         	goto	l1989
  1265   000A82                     u1500:
  1266   000A82  5050               	movf	_banderaN^0,w,c
  1267   000A84  1051               	iorwf	(_banderaN+1)^0,w,c
  1268   000A86  A4D8               	btfss	status,2,c
  1269   000A88  EF48  F005         	goto	u1511
  1270   000A8C  EF4A  F005         	goto	u1510
  1271   000A90                     u1511:
  1272   000A90  EF4C  F005         	goto	l1989
  1273   000A94                     u1510:
  1274   000A94                     
  1275                           ;Cinta.c: 212:         blanca++;
  1276   000A94  4A56               	infsnz	_blanca^0,f,c
  1277   000A96  2A57               	incf	(_blanca+1)^0,f,c
  1278   000A98                     l1989:
  1279                           
  1280                           ;Cinta.c: 214:      mostrar_conteo();
  1281   000A98  EC89  F005         	call	_mostrar_conteo	;wreg free
  1282   000A9C                     
  1283                           ;Cinta.c: 215:     LATAbits.LA6=0;
  1284   000A9C  9C89               	bcf	137,6,c	;volatile
  1285   000A9E                     
  1286                           ;Cinta.c: 216:     LATCbits.LC0=1;
  1287   000A9E  808B               	bsf	139,0,c	;volatile
  1288   000AA0                     l158:
  1289   000AA0  A480               	btfss	128,2,c	;volatile
  1290   000AA2  EF55  F005         	goto	u1521
  1291   000AA6  EF57  F005         	goto	u1520
  1292   000AAA                     u1521:
  1293   000AAA  EF50  F005         	goto	l158
  1294   000AAE                     u1520:
  1295   000AAE                     
  1296                           ;Cinta.c: 218:     LATCbits.LC0=0;
  1297   000AAE  908B               	bcf	139,0,c	;volatile
  1298   000AB0                     
  1299                           ;Cinta.c: 219:     escena=6;
  1300   000AB0  0E00               	movlw	0
  1301   000AB2  6E4B               	movwf	(_escena+1)^0,c
  1302   000AB4  0E06               	movlw	6
  1303   000AB6  6E4A               	movwf	_escena^0,c
  1304   000AB8                     
  1305                           ;Cinta.c: 220:     mostrar_conteo();
  1306   000AB8  EC89  F005         	call	_mostrar_conteo	;wreg free
  1307   000ABC                     
  1308                           ;Cinta.c: 221:     LATCbits.LC6=1;
  1309   000ABC  8C8B               	bsf	139,6,c	;volatile
  1310   000ABE                     
  1311                           ;Cinta.c: 222:     _delay((unsigned long)((2000)*(4000000/4000.0)));
  1312   000ABE  0E0B               	movlw	11
  1313   000AC0  6E43               	movwf	(??_main+1)^0,c
  1314   000AC2  0E26               	movlw	38
  1315   000AC4  6E42               	movwf	??_main^0,c
  1316   000AC6  0E5E               	movlw	94
  1317   000AC8                     u1607:
  1318   000AC8  2EE8               	decfsz	wreg,f,c
  1319   000ACA  D7FE               	bra	u1607
  1320   000ACC  2E42               	decfsz	??_main^0,f,c
  1321   000ACE  D7FC               	bra	u1607
  1322   000AD0  2E43               	decfsz	(??_main+1)^0,f,c
  1323   000AD2  D7FA               	bra	u1607
  1324   000AD4                     
  1325                           ;Cinta.c: 223:     LATCbits.LC1=1;
  1326   000AD4  828B               	bsf	139,1,c	;volatile
  1327   000AD6                     l161:
  1328   000AD6  A680               	btfss	128,3,c	;volatile
  1329   000AD8  EF70  F005         	goto	u1531
  1330   000ADC  EF72  F005         	goto	u1530
  1331   000AE0                     u1531:
  1332   000AE0  EF6B  F005         	goto	l161
  1333   000AE4                     u1530:
  1334   000AE4                     
  1335                           ;Cinta.c: 225:     LATCbits.LC1=0;
  1336   000AE4  928B               	bcf	139,1,c	;volatile
  1337   000AE6                     
  1338                           ;Cinta.c: 226:     _delay((unsigned long)((500)*(4000000/4000.0)));
  1339   000AE6  0E03               	movlw	3
  1340   000AE8  6E43               	movwf	(??_main+1)^0,c
  1341   000AEA  0E8A               	movlw	138
  1342   000AEC  6E42               	movwf	??_main^0,c
  1343   000AEE  0E56               	movlw	86
  1344   000AF0                     u1617:
  1345   000AF0  2EE8               	decfsz	wreg,f,c
  1346   000AF2  D7FE               	bra	u1617
  1347   000AF4  2E42               	decfsz	??_main^0,f,c
  1348   000AF6  D7FC               	bra	u1617
  1349   000AF8  2E43               	decfsz	(??_main+1)^0,f,c
  1350   000AFA  D7FA               	bra	u1617
  1351   000AFC                     
  1352                           ;Cinta.c: 227:     LATCbits.LC6=0;
  1353   000AFC  9C8B               	bcf	139,6,c	;volatile
  1354   000AFE                     
  1355                           ;Cinta.c: 228:     banderaM=0;
  1356   000AFE  0E00               	movlw	0
  1357   000B00  6E4D               	movwf	(_banderaM+1)^0,c
  1358   000B02  0E00               	movlw	0
  1359   000B04  6E4C               	movwf	_banderaM^0,c
  1360   000B06                     
  1361                           ;Cinta.c: 229:     banderaN=0;
  1362   000B06  0E00               	movlw	0
  1363   000B08  6E51               	movwf	(_banderaN+1)^0,c
  1364   000B0A  0E00               	movlw	0
  1365   000B0C  6E50               	movwf	_banderaN^0,c
  1366   000B0E  EF1D  F000         	goto	start
  1367   000B12                     __end_of_main:
  1368                           	callstack 0
  1369                           
  1370 ;; *************** function _mostrar_conteo *****************
  1371 ;; Defined at:
  1372 ;;		line 84 in file "Cinta.c"
  1373 ;; Parameters:    Size  Location     Type
  1374 ;;		None
  1375 ;; Auto vars:     Size  Location     Type
  1376 ;;		None
  1377 ;; Return value:  Size  Location     Type
  1378 ;;                  1    wreg      void 
  1379 ;; Registers used:
  1380 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1381 ;; Tracked objects:
  1382 ;;		On entry : 0/0
  1383 ;;		On exit  : 0/0
  1384 ;;		Unchanged: 0/0
  1385 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1386 ;;      Params:         0       0       0       0       0       0       0       0       0
  1387 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1388 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1389 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1390 ;;Total ram usage:        0 bytes
  1391 ;; Hardware stack levels used: 1
  1392 ;; Hardware stack levels required when called: 8
  1393 ;; This function calls:
  1394 ;;		_Lcd_Clear
  1395 ;;		_Lcd_Cmd
  1396 ;;		_Lcd_Set_Cursor
  1397 ;;		_Lcd_Write_String
  1398 ;;		_mostrar_variable
  1399 ;; This function is called by:
  1400 ;;		_main
  1401 ;; This function uses a non-reentrant model
  1402 ;;
  1403                           
  1404                           	psect	text1
  1405   000B12                     __ptext1:
  1406                           	callstack 0
  1407   000B12                     _mostrar_conteo:
  1408                           	callstack 22
  1409   000B12                     
  1410                           ;Cinta.c: 85:     Lcd_Clear();
  1411   000B12  EC6B  F00A         	call	_Lcd_Clear	;wreg free
  1412   000B16                     
  1413                           ;Cinta.c: 86:     Lcd_Set_Cursor(1,1);
  1414   000B16  0E01               	movlw	1
  1415   000B18  6E06               	movwf	Lcd_Set_Cursor@b^0,c
  1416   000B1A  0E01               	movlw	1
  1417   000B1C  EC61  F007         	call	_Lcd_Set_Cursor
  1418   000B20                     
  1419                           ;Cinta.c: 87:     if(escena==1){
  1420   000B20  044A               	decf	_escena^0,w,c
  1421   000B22  104B               	iorwf	(_escena+1)^0,w,c
  1422   000B24  A4D8               	btfss	status,2,c
  1423   000B26  EF97  F005         	goto	u1221
  1424   000B2A  EF99  F005         	goto	u1220
  1425   000B2E                     u1221:
  1426   000B2E  EFA1  F005         	goto	l1857
  1427   000B32                     u1220:
  1428   000B32                     
  1429                           ;Cinta.c: 88:     Lcd_Write_String("Inicializando");
  1430   000B32  0E01               	movlw	low STR_2
  1431   000B34  6E07               	movwf	Lcd_Write_String@a^0,c
  1432   000B36  5007               	movf	Lcd_Write_String@a^0,w,c
  1433   000B38  A4D8               	btfss	status,2,c
  1434   000B3A  0E08               	movlw	high __smallconst
  1435   000B3C  6E08               	movwf	(Lcd_Write_String@a+1)^0,c
  1436   000B3E  EC18  F009         	call	_Lcd_Write_String	;wreg free
  1437   000B42                     l1857:
  1438                           
  1439                           ;Cinta.c: 90:     if(escena==2){
  1440   000B42  0E02               	movlw	2
  1441   000B44  184A               	xorwf	_escena^0,w,c
  1442   000B46  104B               	iorwf	(_escena+1)^0,w,c
  1443   000B48  A4D8               	btfss	status,2,c
  1444   000B4A  EFA9  F005         	goto	u1231
  1445   000B4E  EFAB  F005         	goto	u1230
  1446   000B52                     u1231:
  1447   000B52  EFB3  F005         	goto	l1861
  1448   000B56                     u1230:
  1449   000B56                     
  1450                           ;Cinta.c: 91:     Lcd_Write_String("START");
  1451   000B56  0E37               	movlw	low STR_3
  1452   000B58  6E07               	movwf	Lcd_Write_String@a^0,c
  1453   000B5A  5007               	movf	Lcd_Write_String@a^0,w,c
  1454   000B5C  A4D8               	btfss	status,2,c
  1455   000B5E  0E08               	movlw	high __smallconst
  1456   000B60  6E08               	movwf	(Lcd_Write_String@a+1)^0,c
  1457   000B62  EC18  F009         	call	_Lcd_Write_String	;wreg free
  1458   000B66                     l1861:
  1459                           
  1460                           ;Cinta.c: 93:     if(escena==3){
  1461   000B66  0E03               	movlw	3
  1462   000B68  184A               	xorwf	_escena^0,w,c
  1463   000B6A  104B               	iorwf	(_escena+1)^0,w,c
  1464   000B6C  A4D8               	btfss	status,2,c
  1465   000B6E  EFBB  F005         	goto	u1241
  1466   000B72  EFBD  F005         	goto	u1240
  1467   000B76                     u1241:
  1468   000B76  EFC5  F005         	goto	l1865
  1469   000B7A                     u1240:
  1470   000B7A                     
  1471                           ;Cinta.c: 94:     Lcd_Write_String("CINTA");
  1472   000B7A  0E25               	movlw	low STR_4
  1473   000B7C  6E07               	movwf	Lcd_Write_String@a^0,c
  1474   000B7E  5007               	movf	Lcd_Write_String@a^0,w,c
  1475   000B80  A4D8               	btfss	status,2,c
  1476   000B82  0E08               	movlw	high __smallconst
  1477   000B84  6E08               	movwf	(Lcd_Write_String@a+1)^0,c
  1478   000B86  EC18  F009         	call	_Lcd_Write_String	;wreg free
  1479   000B8A                     l1865:
  1480                           
  1481                           ;Cinta.c: 96:     if(escena==4){
  1482   000B8A  0E04               	movlw	4
  1483   000B8C  184A               	xorwf	_escena^0,w,c
  1484   000B8E  104B               	iorwf	(_escena+1)^0,w,c
  1485   000B90  A4D8               	btfss	status,2,c
  1486   000B92  EFCD  F005         	goto	u1251
  1487   000B96  EFCF  F005         	goto	u1250
  1488   000B9A                     u1251:
  1489   000B9A  EFD7  F005         	goto	l1869
  1490   000B9E                     u1250:
  1491   000B9E                     
  1492                           ;Cinta.c: 97:     Lcd_Write_String("PINZA");
  1493   000B9E  0E2B               	movlw	low STR_5
  1494   000BA0  6E07               	movwf	Lcd_Write_String@a^0,c
  1495   000BA2  5007               	movf	Lcd_Write_String@a^0,w,c
  1496   000BA4  A4D8               	btfss	status,2,c
  1497   000BA6  0E08               	movlw	high __smallconst
  1498   000BA8  6E08               	movwf	(Lcd_Write_String@a+1)^0,c
  1499   000BAA  EC18  F009         	call	_Lcd_Write_String	;wreg free
  1500   000BAE                     l1869:
  1501                           
  1502                           ;Cinta.c: 99:     if(escena==5){
  1503   000BAE  0E05               	movlw	5
  1504   000BB0  184A               	xorwf	_escena^0,w,c
  1505   000BB2  104B               	iorwf	(_escena+1)^0,w,c
  1506   000BB4  A4D8               	btfss	status,2,c
  1507   000BB6  EFDF  F005         	goto	u1261
  1508   000BBA  EFE1  F005         	goto	u1260
  1509   000BBE                     u1261:
  1510   000BBE  EFE9  F005         	goto	l1873
  1511   000BC2                     u1260:
  1512   000BC2                     
  1513                           ;Cinta.c: 100:     Lcd_Write_String("PLATO");
  1514   000BC2  0E31               	movlw	low STR_6
  1515   000BC4  6E07               	movwf	Lcd_Write_String@a^0,c
  1516   000BC6  5007               	movf	Lcd_Write_String@a^0,w,c
  1517   000BC8  A4D8               	btfss	status,2,c
  1518   000BCA  0E08               	movlw	high __smallconst
  1519   000BCC  6E08               	movwf	(Lcd_Write_String@a+1)^0,c
  1520   000BCE  EC18  F009         	call	_Lcd_Write_String	;wreg free
  1521   000BD2                     l1873:
  1522                           
  1523                           ;Cinta.c: 102:     if(escena==6){
  1524   000BD2  0E06               	movlw	6
  1525   000BD4  184A               	xorwf	_escena^0,w,c
  1526   000BD6  104B               	iorwf	(_escena+1)^0,w,c
  1527   000BD8  A4D8               	btfss	status,2,c
  1528   000BDA  EFF1  F005         	goto	u1271
  1529   000BDE  EFF3  F005         	goto	u1270
  1530   000BE2                     u1271:
  1531   000BE2  EFFB  F005         	goto	l1877
  1532   000BE6                     u1270:
  1533   000BE6                     
  1534                           ;Cinta.c: 103:     Lcd_Write_String("CINTA");
  1535   000BE6  0E25               	movlw	low STR_4
  1536   000BE8  6E07               	movwf	Lcd_Write_String@a^0,c
  1537   000BEA  5007               	movf	Lcd_Write_String@a^0,w,c
  1538   000BEC  A4D8               	btfss	status,2,c
  1539   000BEE  0E08               	movlw	high __smallconst
  1540   000BF0  6E08               	movwf	(Lcd_Write_String@a+1)^0,c
  1541   000BF2  EC18  F009         	call	_Lcd_Write_String	;wreg free
  1542   000BF6                     l1877:
  1543                           
  1544                           ;Cinta.c: 105:     Lcd_Set_Cursor(2,1);
  1545   000BF6  0E01               	movlw	1
  1546   000BF8  6E06               	movwf	Lcd_Set_Cursor@b^0,c
  1547   000BFA  0E02               	movlw	2
  1548   000BFC  EC61  F007         	call	_Lcd_Set_Cursor
  1549   000C00                     
  1550                           ;Cinta.c: 106:     if (escena>4){
  1551   000C00  BE4B               	btfsc	(_escena+1)^0,7,c
  1552   000C02  EF0C  F006         	goto	u1281
  1553   000C06  504B               	movf	(_escena+1)^0,w,c
  1554   000C08  E109               	bnz	u1280
  1555   000C0A  0E05               	movlw	5
  1556   000C0C  5C4A               	subwf	_escena^0,w,c
  1557   000C0E  A0D8               	btfss	status,0,c
  1558   000C10  EF0C  F006         	goto	u1281
  1559   000C14  EF0E  F006         	goto	u1280
  1560   000C18                     u1281:
  1561   000C18  EF4C  F006         	goto	l1895
  1562   000C1C                     u1280:
  1563   000C1C                     
  1564                           ;Cinta.c: 107:     if(banderaN==1){
  1565   000C1C  0450               	decf	_banderaN^0,w,c
  1566   000C1E  1051               	iorwf	(_banderaN+1)^0,w,c
  1567   000C20  A4D8               	btfss	status,2,c
  1568   000C22  EF15  F006         	goto	u1291
  1569   000C26  EF17  F006         	goto	u1290
  1570   000C2A                     u1291:
  1571   000C2A  EF1F  F006         	goto	l1885
  1572   000C2E                     u1290:
  1573   000C2E                     
  1574                           ;Cinta.c: 108:     Lcd_Write_String("NEGRA");
  1575   000C2E  0E1F               	movlw	low STR_8
  1576   000C30  6E07               	movwf	Lcd_Write_String@a^0,c
  1577   000C32  5007               	movf	Lcd_Write_String@a^0,w,c
  1578   000C34  A4D8               	btfss	status,2,c
  1579   000C36  0E08               	movlw	high __smallconst
  1580   000C38  6E08               	movwf	(Lcd_Write_String@a+1)^0,c
  1581   000C3A  EC18  F009         	call	_Lcd_Write_String	;wreg free
  1582   000C3E                     l1885:
  1583                           
  1584                           ;Cinta.c: 110:     if(banderaM==1){
  1585   000C3E  044C               	decf	_banderaM^0,w,c
  1586   000C40  104D               	iorwf	(_banderaM+1)^0,w,c
  1587   000C42  A4D8               	btfss	status,2,c
  1588   000C44  EF26  F006         	goto	u1301
  1589   000C48  EF28  F006         	goto	u1300
  1590   000C4C                     u1301:
  1591   000C4C  EF30  F006         	goto	l1889
  1592   000C50                     u1300:
  1593   000C50                     
  1594                           ;Cinta.c: 111:      Lcd_Write_String("METALICA");
  1595   000C50  0E0F               	movlw	low STR_9
  1596   000C52  6E07               	movwf	Lcd_Write_String@a^0,c
  1597   000C54  5007               	movf	Lcd_Write_String@a^0,w,c
  1598   000C56  A4D8               	btfss	status,2,c
  1599   000C58  0E08               	movlw	high __smallconst
  1600   000C5A  6E08               	movwf	(Lcd_Write_String@a+1)^0,c
  1601   000C5C  EC18  F009         	call	_Lcd_Write_String	;wreg free
  1602   000C60                     l1889:
  1603                           
  1604                           ;Cinta.c: 113:     if ((banderaM==0)&&(banderaN==0)) {
  1605   000C60  504C               	movf	_banderaM^0,w,c
  1606   000C62  104D               	iorwf	(_banderaM+1)^0,w,c
  1607   000C64  A4D8               	btfss	status,2,c
  1608   000C66  EF37  F006         	goto	u1311
  1609   000C6A  EF39  F006         	goto	u1310
  1610   000C6E                     u1311:
  1611   000C6E  EF54  F006         	goto	l1897
  1612   000C72                     u1310:
  1613   000C72  5050               	movf	_banderaN^0,w,c
  1614   000C74  1051               	iorwf	(_banderaN+1)^0,w,c
  1615   000C76  A4D8               	btfss	status,2,c
  1616   000C78  EF40  F006         	goto	u1321
  1617   000C7C  EF42  F006         	goto	u1320
  1618   000C80                     u1321:
  1619   000C80  EF54  F006         	goto	l1897
  1620   000C84                     u1320:
  1621   000C84                     
  1622                           ;Cinta.c: 114:       Lcd_Write_String("BLANCA");
  1623   000C84  0E18               	movlw	low STR_10
  1624   000C86  6E07               	movwf	Lcd_Write_String@a^0,c
  1625   000C88  5007               	movf	Lcd_Write_String@a^0,w,c
  1626   000C8A  A4D8               	btfss	status,2,c
  1627   000C8C  0E08               	movlw	high __smallconst
  1628   000C8E  6E08               	movwf	(Lcd_Write_String@a+1)^0,c
  1629   000C90  EC18  F009         	call	_Lcd_Write_String	;wreg free
  1630   000C94  EF54  F006         	goto	l1897
  1631   000C98                     l1895:
  1632                           
  1633                           ;Cinta.c: 118:        Lcd_Write_String("NADA");
  1634   000C98  0E3D               	movlw	low STR_11
  1635   000C9A  6E07               	movwf	Lcd_Write_String@a^0,c
  1636   000C9C  5007               	movf	Lcd_Write_String@a^0,w,c
  1637   000C9E  A4D8               	btfss	status,2,c
  1638   000CA0  0E08               	movlw	high __smallconst
  1639   000CA2  6E08               	movwf	(Lcd_Write_String@a+1)^0,c
  1640   000CA4  EC18  F009         	call	_Lcd_Write_String	;wreg free
  1641   000CA8                     l1897:
  1642                           
  1643                           ;Cinta.c: 120:     Lcd_Cmd(0x09);
  1644   000CA8  0E09               	movlw	9
  1645   000CAA  EC48  F00A         	call	_Lcd_Cmd
  1646   000CAE                     
  1647                           ;Cinta.c: 121:     Lcd_Cmd(0x00);
  1648   000CAE  0E00               	movlw	0
  1649   000CB0  EC48  F00A         	call	_Lcd_Cmd
  1650                           
  1651                           ;Cinta.c: 122:     Lcd_Write_String("M:");
  1652   000CB4  0E4A               	movlw	low STR_12
  1653   000CB6  6E07               	movwf	Lcd_Write_String@a^0,c
  1654   000CB8  5007               	movf	Lcd_Write_String@a^0,w,c
  1655   000CBA  A4D8               	btfss	status,2,c
  1656   000CBC  0E08               	movlw	high __smallconst
  1657   000CBE  6E08               	movwf	(Lcd_Write_String@a+1)^0,c
  1658   000CC0  EC18  F009         	call	_Lcd_Write_String	;wreg free
  1659   000CC4                     
  1660                           ;Cinta.c: 123:     mostrar_variable(metalica);
  1661   000CC4  C052  F02C         	movff	_metalica,mostrar_variable@x
  1662   000CC8  C053  F02D         	movff	_metalica+1,mostrar_variable@x+1
  1663   000CCC  EC38  F00A         	call	_mostrar_variable	;wreg free
  1664   000CD0                     
  1665                           ;Cinta.c: 124:     Lcd_Write_String(" B:");
  1666   000CD0  0E42               	movlw	low STR_13
  1667   000CD2  6E07               	movwf	Lcd_Write_String@a^0,c
  1668   000CD4  5007               	movf	Lcd_Write_String@a^0,w,c
  1669   000CD6  A4D8               	btfss	status,2,c
  1670   000CD8  0E08               	movlw	high __smallconst
  1671   000CDA  6E08               	movwf	(Lcd_Write_String@a+1)^0,c
  1672   000CDC  EC18  F009         	call	_Lcd_Write_String	;wreg free
  1673                           
  1674                           ;Cinta.c: 125:     mostrar_variable(blanca);
  1675   000CE0  C056  F02C         	movff	_blanca,mostrar_variable@x
  1676   000CE4  C057  F02D         	movff	_blanca+1,mostrar_variable@x+1
  1677   000CE8  EC38  F00A         	call	_mostrar_variable	;wreg free
  1678   000CEC                     
  1679                           ;Cinta.c: 126:     Lcd_Write_String(" N:");
  1680   000CEC  0E46               	movlw	low STR_14
  1681   000CEE  6E07               	movwf	Lcd_Write_String@a^0,c
  1682   000CF0  5007               	movf	Lcd_Write_String@a^0,w,c
  1683   000CF2  A4D8               	btfss	status,2,c
  1684   000CF4  0E08               	movlw	high __smallconst
  1685   000CF6  6E08               	movwf	(Lcd_Write_String@a+1)^0,c
  1686   000CF8  EC18  F009         	call	_Lcd_Write_String	;wreg free
  1687   000CFC                     
  1688                           ;Cinta.c: 127:     mostrar_variable(negra);
  1689   000CFC  C054  F02C         	movff	_negra,mostrar_variable@x
  1690   000D00  C055  F02D         	movff	_negra+1,mostrar_variable@x+1
  1691   000D04  EC38  F00A         	call	_mostrar_variable	;wreg free
  1692   000D08  0012               	return		;funcret
  1693   000D0A                     __end_of_mostrar_conteo:
  1694                           	callstack 0
  1695                           
  1696 ;; *************** function _mostrar_variable *****************
  1697 ;; Defined at:
  1698 ;;		line 40 in file "Cinta.c"
  1699 ;; Parameters:    Size  Location     Type
  1700 ;;  x               2   43[COMRAM] int 
  1701 ;; Auto vars:     Size  Location     Type
  1702 ;;  buffer         20   45[COMRAM] unsigned char [20]
  1703 ;; Return value:  Size  Location     Type
  1704 ;;                  1    wreg      void 
  1705 ;; Registers used:
  1706 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1707 ;; Tracked objects:
  1708 ;;		On entry : 0/0
  1709 ;;		On exit  : 0/0
  1710 ;;		Unchanged: 0/0
  1711 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1712 ;;      Params:         2       0       0       0       0       0       0       0       0
  1713 ;;      Locals:        20       0       0       0       0       0       0       0       0
  1714 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1715 ;;      Totals:        22       0       0       0       0       0       0       0       0
  1716 ;;Total ram usage:       22 bytes
  1717 ;; Hardware stack levels used: 1
  1718 ;; Hardware stack levels required when called: 7
  1719 ;; This function calls:
  1720 ;;		_Lcd_Write_String
  1721 ;;		_sprintf
  1722 ;; This function is called by:
  1723 ;;		_mostrar_conteo
  1724 ;; This function uses a non-reentrant model
  1725 ;;
  1726                           
  1727                           	psect	text2
  1728   001470                     __ptext2:
  1729                           	callstack 0
  1730   001470                     _mostrar_variable:
  1731                           	callstack 22
  1732   001470                     
  1733                           ;Cinta.c: 41:     char buffer[20];;Cinta.c: 42:      sprintf(buffer,"%d",x);
  1734   001470  0E2E               	movlw	low mostrar_variable@buffer
  1735   001472  6E1C               	movwf	sprintf@s^0,c
  1736   001474  0E4D               	movlw	low STR_1
  1737   001476  6E1D               	movwf	sprintf@fmt^0,c
  1738   001478  C02C  F01E         	movff	mostrar_variable@x,?_sprintf+2
  1739   00147C  C02D  F01F         	movff	mostrar_variable@x+1,?_sprintf+3
  1740   001480  ECF1  F009         	call	_sprintf	;wreg free
  1741   001484                     
  1742                           ;Cinta.c: 43:     Lcd_Write_String(buffer);
  1743   001484  0E2E               	movlw	low mostrar_variable@buffer
  1744   001486  6E07               	movwf	Lcd_Write_String@a^0,c
  1745   001488  6A08               	clrf	(Lcd_Write_String@a+1)^0,c
  1746   00148A  EC18  F009         	call	_Lcd_Write_String	;wreg free
  1747   00148E  0012               	return		;funcret
  1748   001490                     __end_of_mostrar_variable:
  1749                           	callstack 0
  1750                           
  1751 ;; *************** function _sprintf *****************
  1752 ;; Defined at:
  1753 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\nf_sprintf.c"
  1754 ;; Parameters:    Size  Location     Type
  1755 ;;  s               1   27[COMRAM] PTR unsigned char 
  1756 ;;		 -> mostrar_variable@buffer(20), 
  1757 ;;  fmt             1   28[COMRAM] PTR const unsigned char 
  1758 ;;		 -> STR_1(3), 
  1759 ;; Auto vars:     Size  Location     Type
  1760 ;;  f              11   32[COMRAM] struct _IO_FILE
  1761 ;;  ret             2    0        int 
  1762 ;;  ap              1   31[COMRAM] PTR void [1]
  1763 ;;		 -> ?_sprintf(2), 
  1764 ;; Return value:  Size  Location     Type
  1765 ;;                  2   27[COMRAM] int 
  1766 ;; Registers used:
  1767 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1768 ;; Tracked objects:
  1769 ;;		On entry : 0/0
  1770 ;;		On exit  : 0/0
  1771 ;;		Unchanged: 0/0
  1772 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1773 ;;      Params:         4       0       0       0       0       0       0       0       0
  1774 ;;      Locals:        12       0       0       0       0       0       0       0       0
  1775 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1776 ;;      Totals:        16       0       0       0       0       0       0       0       0
  1777 ;;Total ram usage:       16 bytes
  1778 ;; Hardware stack levels used: 1
  1779 ;; Hardware stack levels required when called: 6
  1780 ;; This function calls:
  1781 ;;		_vfprintf
  1782 ;; This function is called by:
  1783 ;;		_mostrar_variable
  1784 ;; This function uses a non-reentrant model
  1785 ;;
  1786                           
  1787                           	psect	text3
  1788   0013E2                     __ptext3:
  1789                           	callstack 0
  1790   0013E2                     _sprintf:
  1791                           	callstack 22
  1792   0013E2  0E1E               	movlw	low (?_sprintf+2)
  1793   0013E4  6E20               	movwf	sprintf@ap^0,c
  1794   0013E6  C01C  F021         	movff	sprintf@s,sprintf@f
  1795   0013EA  0E00               	movlw	0
  1796   0013EC  6E24               	movwf	(sprintf@f+3)^0,c
  1797   0013EE  0E00               	movlw	0
  1798   0013F0  6E23               	movwf	(sprintf@f+2)^0,c
  1799   0013F2  0E00               	movlw	0
  1800   0013F4  6E2B               	movwf	(sprintf@f+10)^0,c
  1801   0013F6  0E00               	movlw	0
  1802   0013F8  6E2A               	movwf	(sprintf@f+9)^0,c
  1803   0013FA  0E21               	movlw	low sprintf@f
  1804   0013FC  6E18               	movwf	vfprintf@fp^0,c
  1805   0013FE  C01D  F019         	movff	sprintf@fmt,vfprintf@fmt
  1806   001402  0E20               	movlw	low sprintf@ap
  1807   001404  6E1A               	movwf	vfprintf@ap^0,c
  1808   001406  ECB6  F009         	call	_vfprintf	;wreg free
  1809   00140A  501C               	movf	sprintf@s^0,w,c
  1810   00140C  2423               	addwf	(sprintf@f+2)^0,w,c
  1811   00140E  6ED9               	movwf	fsr2l,c
  1812   001410  6ADA               	clrf	fsr2h,c
  1813   001412  6ADF               	clrf	indf2,c
  1814   001414  0012               	return		;funcret
  1815   001416                     __end_of_sprintf:
  1816                           	callstack 0
  1817                           
  1818 ;; *************** function _vfprintf *****************
  1819 ;; Defined at:
  1820 ;;		line 1817 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c"
  1821 ;; Parameters:    Size  Location     Type
  1822 ;;  fp              1   23[COMRAM] PTR struct _IO_FILE
  1823 ;;		 -> sprintf@f(11), 
  1824 ;;  fmt             1   24[COMRAM] PTR const unsigned char 
  1825 ;;		 -> STR_1(3), 
  1826 ;;  ap              1   25[COMRAM] PTR PTR void 
  1827 ;;		 -> sprintf@ap(1), 
  1828 ;; Auto vars:     Size  Location     Type
  1829 ;;  cfmt            1   26[COMRAM] PTR unsigned char 
  1830 ;;		 -> STR_1(3), 
  1831 ;; Return value:  Size  Location     Type
  1832 ;;                  2   23[COMRAM] int 
  1833 ;; Registers used:
  1834 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1835 ;; Tracked objects:
  1836 ;;		On entry : 0/0
  1837 ;;		On exit  : 0/0
  1838 ;;		Unchanged: 0/0
  1839 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1840 ;;      Params:         3       0       0       0       0       0       0       0       0
  1841 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1842 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1843 ;;      Totals:         4       0       0       0       0       0       0       0       0
  1844 ;;Total ram usage:        4 bytes
  1845 ;; Hardware stack levels used: 1
  1846 ;; Hardware stack levels required when called: 5
  1847 ;; This function calls:
  1848 ;;		_vfpfcnvrt
  1849 ;; This function is called by:
  1850 ;;		_sprintf
  1851 ;; This function uses a non-reentrant model
  1852 ;;
  1853                           
  1854                           	psect	text4
  1855   00136C                     __ptext4:
  1856                           	callstack 0
  1857   00136C                     _vfprintf:
  1858                           	callstack 22
  1859   00136C                     
  1860                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1817: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v3.00\pic\source
      +                          s\c99\common\doprnt.c: 1818: {;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\comm
      +                          on\doprnt.c: 1820:     char *cfmt;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\
      +                          common\doprnt.c: 1822:     cfmt = (char *)fmt;
  1861   00136C  C019  F01B         	movff	vfprintf@fmt,vfprintf@cfmt
  1862                           
  1863                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  1864   001370  EFC2  F009         	goto	l1785
  1865   001374                     l1783:
  1866                           
  1867                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1830:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  1868   001374  C018  F00D         	movff	vfprintf@fp,vfpfcnvrt@fp
  1869   001378  0E1B               	movlw	low vfprintf@cfmt
  1870   00137A  6E0E               	movwf	vfpfcnvrt@fmt^0,c
  1871   00137C  C01A  F00F         	movff	vfprintf@ap,vfpfcnvrt@ap
  1872   001380  EC85  F006         	call	_vfpfcnvrt	;wreg free
  1873   001384                     l1785:
  1874                           
  1875                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  1876   001384  C01B  FFF6         	movff	vfprintf@cfmt,tblptrl
  1877   001388                     	if	1	;There is more than 1 active tblptr byte
  1878   001388  0E08               	movlw	high __smallconst
  1879   00138A  6EF7               	movwf	tblptrh,c
  1880   00138C                     	endif
  1881   00138C                     	if	0	;tblptru may be non-zero
  1882   00138C                     	endif
  1883   00138C                     	if	0	;tblptru may be non-zero
  1884   00138C                     	endif
  1885   00138C  0008               	tblrd		*
  1886   00138E  50F5               	movf	tablat,w,c
  1887   001390  0900               	iorlw	0
  1888   001392  A4D8               	btfss	status,2,c
  1889   001394  EFCE  F009         	goto	u1141
  1890   001398  EFD0  F009         	goto	u1140
  1891   00139C                     u1141:
  1892   00139C  EFBA  F009         	goto	l1783
  1893   0013A0                     u1140:
  1894   0013A0                     
  1895                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1835:  return 0;
  1896   0013A0  0E00               	movlw	0
  1897   0013A2  6E19               	movwf	(?_vfprintf+1)^0,c
  1898   0013A4  0E00               	movlw	0
  1899   0013A6  6E18               	movwf	?_vfprintf^0,c
  1900   0013A8  0012               	return		;funcret
  1901   0013AA                     __end_of_vfprintf:
  1902                           	callstack 0
  1903                           
  1904 ;; *************** function _vfpfcnvrt *****************
  1905 ;; Defined at:
  1906 ;;		line 1177 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c"
  1907 ;; Parameters:    Size  Location     Type
  1908 ;;  fp              1   12[COMRAM] PTR struct _IO_FILE
  1909 ;;		 -> sprintf@f(11), 
  1910 ;;  fmt             1   13[COMRAM] PTR PTR unsigned char 
  1911 ;;		 -> vfprintf@cfmt(1), 
  1912 ;;  ap              1   14[COMRAM] PTR PTR void 
  1913 ;;		 -> sprintf@ap(1), 
  1914 ;; Auto vars:     Size  Location     Type
  1915 ;;  convarg         4   18[COMRAM] struct .
  1916 ;;  c               1   22[COMRAM] unsigned char 
  1917 ;;  cp              1   17[COMRAM] PTR unsigned char 
  1918 ;;		 -> STR_1(3), 
  1919 ;;  done            1   16[COMRAM] _Bool 
  1920 ;; Return value:  Size  Location     Type
  1921 ;;                  1    wreg      void 
  1922 ;; Registers used:
  1923 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1924 ;; Tracked objects:
  1925 ;;		On entry : 0/0
  1926 ;;		On exit  : 0/0
  1927 ;;		Unchanged: 0/0
  1928 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1929 ;;      Params:         3       0       0       0       0       0       0       0       0
  1930 ;;      Locals:         7       0       0       0       0       0       0       0       0
  1931 ;;      Temps:          1       0       0       0       0       0       0       0       0
  1932 ;;      Totals:        11       0       0       0       0       0       0       0       0
  1933 ;;Total ram usage:       11 bytes
  1934 ;; Hardware stack levels used: 1
  1935 ;; Hardware stack levels required when called: 4
  1936 ;; This function calls:
  1937 ;;		___awdiv
  1938 ;;		___awmod
  1939 ;;		_abs
  1940 ;;		_fputc
  1941 ;; This function is called by:
  1942 ;;		_vfprintf
  1943 ;; This function uses a non-reentrant model
  1944 ;;
  1945                           
  1946                           	psect	text5
  1947   000D0A                     __ptext5:
  1948                           	callstack 0
  1949   000D0A                     _vfpfcnvrt:
  1950                           	callstack 22
  1951   000D0A                     
  1952                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1177: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\c
      +                          ommon\doprnt.c: 1178: {;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\dopr
      +                          nt.c: 1179:     char c, *cp;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common
      +                          \doprnt.c: 1180:     _Bool done;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\co
      +                          mmon\doprnt.c: 1188:  } convarg;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\co
      +                          mmon\doprnt.c: 1201:     if ((*fmt)[0] == '%') {
  1953   000D0A  500E               	movf	vfpfcnvrt@fmt^0,w,c
  1954   000D0C  6ED9               	movwf	fsr2l,c
  1955   000D0E  6ADA               	clrf	fsr2h,c
  1956   000D10  CFDF FFF6          	movff	indf2,tblptrl
  1957   000D14                     	if	1	;There is more than 1 active tblptr byte
  1958   000D14  0E08               	movlw	high __smallconst
  1959   000D16  6EF7               	movwf	tblptrh,c
  1960   000D18                     	endif
  1961   000D18                     	if	0	;tblptru may be non-zero
  1962   000D18                     	endif
  1963   000D18                     	if	0	;tblptru may be non-zero
  1964   000D18                     	endif
  1965   000D18  0008               	tblrd		*
  1966   000D1A  50F5               	movf	tablat,w,c
  1967   000D1C  0A25               	xorlw	37
  1968   000D1E  A4D8               	btfss	status,2,c
  1969   000D20  EF94  F006         	goto	u1041
  1970   000D24  EF96  F006         	goto	u1040
  1971   000D28                     u1041:
  1972   000D28  EF4F  F007         	goto	l1775
  1973   000D2C                     u1040:
  1974   000D2C                     
  1975                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1202:         ++*
      +                          fmt;
  1976   000D2C  500E               	movf	vfpfcnvrt@fmt^0,w,c
  1977   000D2E  6ED9               	movwf	fsr2l,c
  1978   000D30  6ADA               	clrf	fsr2h,c
  1979   000D32  2ADF               	incf	indf2,f,c
  1980   000D34                     
  1981                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1204:         fla
      +                          gs = width = 0;
  1982   000D34  0E00               	movlw	0
  1983   000D36  6E47               	movwf	(_width+1)^0,c
  1984   000D38  0E00               	movlw	0
  1985   000D3A  6E46               	movwf	_width^0,c
  1986   000D3C  C046  F058         	movff	_width,_flags
  1987   000D40                     
  1988                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1205:         pre
      +                          c = -1;
  1989   000D40  6848               	setf	_prec^0,c
  1990   000D42  6849               	setf	(_prec+1)^0,c
  1991   000D44                     
  1992                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1291:   cp = *fmt
      +                          ;
  1993   000D44  500E               	movf	vfpfcnvrt@fmt^0,w,c
  1994   000D46  6ED9               	movwf	fsr2l,c
  1995   000D48  6ADA               	clrf	fsr2h,c
  1996   000D4A  50DF               	movf	indf2,w,c
  1997   000D4C  6E12               	movwf	vfpfcnvrt@cp^0,c
  1998   000D4E                     
  1999                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1361:   if (*cp =
      +                          = 'd' || *cp == 'i') {
  2000   000D4E  C012  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2001   000D52                     	if	1	;There is more than 1 active tblptr byte
  2002   000D52  0E08               	movlw	high __smallconst
  2003   000D54  6EF7               	movwf	tblptrh,c
  2004   000D56                     	endif
  2005   000D56                     	if	0	;tblptru may be non-zero
  2006   000D56                     	endif
  2007   000D56                     	if	0	;tblptru may be non-zero
  2008   000D56                     	endif
  2009   000D56  0008               	tblrd		*
  2010   000D58  50F5               	movf	tablat,w,c
  2011   000D5A  0A64               	xorlw	100
  2012   000D5C  B4D8               	btfsc	status,2,c
  2013   000D5E  EFB3  F006         	goto	u1051
  2014   000D62  EFB5  F006         	goto	u1050
  2015   000D66                     u1051:
  2016   000D66  EFC3  F006         	goto	l1745
  2017   000D6A                     u1050:
  2018   000D6A  C012  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2019   000D6E                     	if	1	;There is more than 1 active tblptr byte
  2020   000D6E  0E08               	movlw	high __smallconst
  2021   000D70  6EF7               	movwf	tblptrh,c
  2022   000D72                     	endif
  2023   000D72                     	if	0	;tblptru may be non-zero
  2024   000D72                     	endif
  2025   000D72                     	if	0	;tblptru may be non-zero
  2026   000D72                     	endif
  2027   000D72  0008               	tblrd		*
  2028   000D74  50F5               	movf	tablat,w,c
  2029   000D76  0A69               	xorlw	105
  2030   000D78  A4D8               	btfss	status,2,c
  2031   000D7A  EFC1  F006         	goto	u1061
  2032   000D7E  EFC3  F006         	goto	u1060
  2033   000D82                     u1061:
  2034   000D82  EF49  F007         	goto	l1771
  2035   000D86                     u1060:
  2036   000D86                     l1745:
  2037                           
  2038                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1404:    convarg.
      +                          sint = (vfpf_sint_t)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
  2039   000D86  500F               	movf	vfpfcnvrt@ap^0,w,c
  2040   000D88  6ED9               	movwf	fsr2l,c
  2041   000D8A  6ADA               	clrf	fsr2h,c
  2042   000D8C  0E02               	movlw	2
  2043   000D8E  26DF               	addwf	indf2,f,c
  2044   000D90  5CDF               	subwf	indf2,w,c
  2045   000D92  6ED9               	movwf	fsr2l,c
  2046   000D94  6ADA               	clrf	fsr2h,c
  2047   000D96  CFDE F013          	movff	postinc2,vfpfcnvrt@convarg
  2048   000D9A  CFDE F014          	movff	postinc2,vfpfcnvrt@convarg+1
  2049   000D9E                     
  2050                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1406:    *fmt = c
      +                          p+1;
  2051   000D9E  500E               	movf	vfpfcnvrt@fmt^0,w,c
  2052   000DA0  6ED9               	movwf	fsr2l,c
  2053   000DA2  6ADA               	clrf	fsr2h,c
  2054   000DA4  2812               	incf	vfpfcnvrt@cp^0,w,c
  2055   000DA6  6EDF               	movwf	indf2,c
  2056   000DA8                     
  2057                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1408:    c = size
      +                          of(dbuf);
  2058   000DA8  0E20               	movlw	32
  2059   000DAA  6E17               	movwf	vfpfcnvrt@c^0,c
  2060                           
  2061                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1409:    done = c
      +                          onvarg.sint < 0;
  2062   000DAC  BE14               	btfsc	(vfpfcnvrt@convarg+1)^0,7,c
  2063   000DAE  EFDB  F006         	goto	u1071
  2064   000DB2  EFDE  F006         	goto	u1070
  2065   000DB6                     u1071:
  2066   000DB6  0E01               	movlw	1
  2067   000DB8  EFDF  F006         	goto	u1080
  2068   000DBC                     u1070:
  2069   000DBC  0E00               	movlw	0
  2070   000DBE                     u1080:
  2071   000DBE  6E11               	movwf	vfpfcnvrt@done^0,c
  2072   000DC0                     l1751:
  2073                           
  2074                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1411:     dbuf[--
      +                          c] = abs(convarg.sint % 10) + '0';
  2075   000DC0  0617               	decf	vfpfcnvrt@c^0,f,c
  2076   000DC2  5017               	movf	vfpfcnvrt@c^0,w,c
  2077   000DC4  0F60               	addlw	low _dbuf
  2078   000DC6  6ED9               	movwf	fsr2l,c
  2079   000DC8  6ADA               	clrf	fsr2h,c
  2080   000DCA  C013  F003         	movff	vfpfcnvrt@convarg,___awmod@dividend
  2081   000DCE  C014  F004         	movff	vfpfcnvrt@convarg+1,___awmod@dividend+1
  2082   000DD2  0E00               	movlw	0
  2083   000DD4  6E06               	movwf	(___awmod@divisor+1)^0,c
  2084   000DD6  0E0A               	movlw	10
  2085   000DD8  6E05               	movwf	___awmod@divisor^0,c
  2086   000DDA  EC2B  F008         	call	___awmod	;wreg free
  2087   000DDE  C003  F009         	movff	?___awmod,abs@a
  2088   000DE2  C004  F00A         	movff	?___awmod+1,abs@a+1
  2089   000DE6  EC0B  F00A         	call	_abs	;wreg free
  2090   000DEA  5009               	movf	?_abs^0,w,c
  2091   000DEC  0F30               	addlw	48
  2092   000DEE  6EDF               	movwf	indf2,c
  2093   000DF0                     
  2094                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1412:     convarg
      +                          .sint /= 10;
  2095   000DF0  C013  F003         	movff	vfpfcnvrt@convarg,___awdiv@dividend
  2096   000DF4  C014  F004         	movff	vfpfcnvrt@convarg+1,___awdiv@dividend+1
  2097   000DF8  0E00               	movlw	0
  2098   000DFA  6E06               	movwf	(___awdiv@divisor+1)^0,c
  2099   000DFC  0E0A               	movlw	10
  2100   000DFE  6E05               	movwf	___awdiv@divisor^0,c
  2101   000E00  ECCA  F007         	call	___awdiv	;wreg free
  2102   000E04  C003  F013         	movff	?___awdiv,vfpfcnvrt@convarg
  2103   000E08  C004  F014         	movff	?___awdiv+1,vfpfcnvrt@convarg+1
  2104   000E0C                     
  2105                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1416:    } while 
      +                          (convarg.sint != 0 && c != 0);
  2106   000E0C  5013               	movf	vfpfcnvrt@convarg^0,w,c
  2107   000E0E  1014               	iorwf	(vfpfcnvrt@convarg+1)^0,w,c
  2108   000E10  B4D8               	btfsc	status,2,c
  2109   000E12  EF0D  F007         	goto	u1091
  2110   000E16  EF0F  F007         	goto	u1090
  2111   000E1A                     u1091:
  2112   000E1A  EF17  F007         	goto	l1759
  2113   000E1E                     u1090:
  2114   000E1E  5017               	movf	vfpfcnvrt@c^0,w,c
  2115   000E20  A4D8               	btfss	status,2,c
  2116   000E22  EF15  F007         	goto	u1101
  2117   000E26  EF17  F007         	goto	u1100
  2118   000E2A                     u1101:
  2119   000E2A  EFE0  F006         	goto	l1751
  2120   000E2E                     u1100:
  2121   000E2E                     l1759:
  2122                           
  2123                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1417:    if (c !=
      +                           0 && done) {
  2124   000E2E  5017               	movf	vfpfcnvrt@c^0,w,c
  2125   000E30  B4D8               	btfsc	status,2,c
  2126   000E32  EF1D  F007         	goto	u1111
  2127   000E36  EF1F  F007         	goto	u1110
  2128   000E3A                     u1111:
  2129   000E3A  EF3E  F007         	goto	l1769
  2130   000E3E                     u1110:
  2131   000E3E  5011               	movf	vfpfcnvrt@done^0,w,c
  2132   000E40  B4D8               	btfsc	status,2,c
  2133   000E42  EF25  F007         	goto	u1121
  2134   000E46  EF27  F007         	goto	u1120
  2135   000E4A                     u1121:
  2136   000E4A  EF3E  F007         	goto	l1769
  2137   000E4E                     u1120:
  2138   000E4E                     
  2139                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1418:     dbuf[--
      +                          c] = '-';
  2140   000E4E  0617               	decf	vfpfcnvrt@c^0,f,c
  2141   000E50  5017               	movf	vfpfcnvrt@c^0,w,c
  2142   000E52  0F60               	addlw	low _dbuf
  2143   000E54  6ED9               	movwf	fsr2l,c
  2144   000E56  6ADA               	clrf	fsr2h,c
  2145   000E58  0E2D               	movlw	45
  2146   000E5A  6EDF               	movwf	indf2,c
  2147   000E5C  EF3E  F007         	goto	l1769
  2148   000E60                     l1765:
  2149                           
  2150                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1424:     fputc(d
      +                          buf[c++], fp);
  2151   000E60  5017               	movf	vfpfcnvrt@c^0,w,c
  2152   000E62  0F60               	addlw	low _dbuf
  2153   000E64  6ED9               	movwf	fsr2l,c
  2154   000E66  6ADA               	clrf	fsr2h,c
  2155   000E68  50DF               	movf	indf2,w,c
  2156   000E6A  6E10               	movwf	??_vfpfcnvrt^0,c
  2157   000E6C  5010               	movf	??_vfpfcnvrt^0,w,c
  2158   000E6E  6E03               	movwf	fputc@c^0,c
  2159   000E70  6A04               	clrf	(fputc@c+1)^0,c
  2160   000E72  C00D  F005         	movff	vfpfcnvrt@fp,fputc@fp
  2161   000E76  EC82  F008         	call	_fputc	;wreg free
  2162   000E7A  2A17               	incf	vfpfcnvrt@c^0,f,c
  2163   000E7C                     l1769:
  2164                           
  2165                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1423:    while (c
      +                           != sizeof(dbuf)) {
  2166   000E7C  0E20               	movlw	32
  2167   000E7E  1817               	xorwf	vfpfcnvrt@c^0,w,c
  2168   000E80  A4D8               	btfss	status,2,c
  2169   000E82  EF45  F007         	goto	u1131
  2170   000E86  EF47  F007         	goto	u1130
  2171   000E8A                     u1131:
  2172   000E8A  EF30  F007         	goto	l1765
  2173   000E8E                     u1130:
  2174   000E8E  EF60  F007         	goto	l987
  2175   000E92                     l1771:
  2176                           
  2177                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1806:         ++*
      +                          fmt;
  2178   000E92  500E               	movf	vfpfcnvrt@fmt^0,w,c
  2179   000E94  6ED9               	movwf	fsr2l,c
  2180   000E96  6ADA               	clrf	fsr2h,c
  2181   000E98  2ADF               	incf	indf2,f,c
  2182   000E9A  EF60  F007         	goto	l987
  2183   000E9E                     l1775:
  2184                           
  2185                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1811:     fputc((
      +                          int)(*fmt)[0], fp);
  2186   000E9E  500E               	movf	vfpfcnvrt@fmt^0,w,c
  2187   000EA0  6ED9               	movwf	fsr2l,c
  2188   000EA2  6ADA               	clrf	fsr2h,c
  2189   000EA4  CFDF FFF6          	movff	indf2,tblptrl
  2190   000EA8                     	if	1	;There is more than 1 active tblptr byte
  2191   000EA8  0E08               	movlw	high __smallconst
  2192   000EAA  6EF7               	movwf	tblptrh,c
  2193   000EAC                     	endif
  2194   000EAC                     	if	0	;tblptru may be non-zero
  2195   000EAC                     	endif
  2196   000EAC                     	if	0	;tblptru may be non-zero
  2197   000EAC                     	endif
  2198   000EAC  0008               	tblrd		*
  2199   000EAE  50F5               	movf	tablat,w,c
  2200   000EB0  6E03               	movwf	fputc@c^0,c
  2201   000EB2  6A04               	clrf	(fputc@c+1)^0,c
  2202   000EB4  C00D  F005         	movff	vfpfcnvrt@fp,fputc@fp
  2203   000EB8  EC82  F008         	call	_fputc	;wreg free
  2204   000EBC  EF49  F007         	goto	l1771
  2205   000EC0                     l987:
  2206   000EC0  0012               	return		;funcret
  2207   000EC2                     __end_of_vfpfcnvrt:
  2208                           	callstack 0
  2209                           
  2210 ;; *************** function _fputc *****************
  2211 ;; Defined at:
  2212 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\nf_fputc.c"
  2213 ;; Parameters:    Size  Location     Type
  2214 ;;  c               2    2[COMRAM] int 
  2215 ;;  fp              1    4[COMRAM] PTR struct _IO_FILE
  2216 ;;		 -> sprintf@f(11), 
  2217 ;; Auto vars:     Size  Location     Type
  2218 ;;		None
  2219 ;; Return value:  Size  Location     Type
  2220 ;;                  2    2[COMRAM] int 
  2221 ;; Registers used:
  2222 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2223 ;; Tracked objects:
  2224 ;;		On entry : 0/0
  2225 ;;		On exit  : 0/0
  2226 ;;		Unchanged: 0/0
  2227 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2228 ;;      Params:         3       0       0       0       0       0       0       0       0
  2229 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2230 ;;      Temps:          5       0       0       0       0       0       0       0       0
  2231 ;;      Totals:         8       0       0       0       0       0       0       0       0
  2232 ;;Total ram usage:        8 bytes
  2233 ;; Hardware stack levels used: 1
  2234 ;; Hardware stack levels required when called: 3
  2235 ;; This function calls:
  2236 ;;		_putch
  2237 ;; This function is called by:
  2238 ;;		_vfpfcnvrt
  2239 ;; This function uses a non-reentrant model
  2240 ;;
  2241                           
  2242                           	psect	text6
  2243   001104                     __ptext6:
  2244                           	callstack 0
  2245   001104                     _fputc:
  2246                           	callstack 22
  2247   001104  5005               	movf	fputc@fp^0,w,c
  2248   001106  B4D8               	btfsc	status,2,c
  2249   001108  EF88  F008         	goto	u991
  2250   00110C  EF8A  F008         	goto	u990
  2251   001110                     u991:
  2252   001110  EF92  F008         	goto	l1717
  2253   001114                     u990:
  2254   001114  5005               	movf	fputc@fp^0,w,c
  2255   001116  A4D8               	btfss	status,2,c
  2256   001118  EF90  F008         	goto	u1001
  2257   00111C  EF92  F008         	goto	u1000
  2258   001120                     u1001:
  2259   001120  EF97  F008         	goto	l1719
  2260   001124                     u1000:
  2261   001124                     l1717:
  2262   001124  5003               	movf	fputc@c^0,w,c
  2263   001126  EC75  F00A         	call	_putch
  2264   00112A  EFD6  F008         	goto	l1012
  2265   00112E                     l1719:
  2266   00112E  5005               	movf	fputc@fp^0,w,c
  2267   001130  6ED9               	movwf	fsr2l,c
  2268   001132  6ADA               	clrf	fsr2h,c
  2269   001134  0E09               	movlw	9
  2270   001136  26D9               	addwf	fsr2l,f,c
  2271   001138  50DE               	movf	postinc2,w,c
  2272   00113A  10DE               	iorwf	postinc2,w,c
  2273   00113C  B4D8               	btfsc	status,2,c
  2274   00113E  EFA3  F008         	goto	u1011
  2275   001142  EFA5  F008         	goto	u1010
  2276   001146                     u1011:
  2277   001146  EFBE  F008         	goto	l1723
  2278   00114A                     u1010:
  2279   00114A  5005               	movf	fputc@fp^0,w,c
  2280   00114C  6ED9               	movwf	fsr2l,c
  2281   00114E  6ADA               	clrf	fsr2h,c
  2282   001150  0E09               	movlw	9
  2283   001152  26D9               	addwf	fsr2l,f,c
  2284   001154  5005               	movf	fputc@fp^0,w,c
  2285   001156  6EE1               	movwf	fsr1l,c
  2286   001158  6AE2               	clrf	fsr1h,c
  2287   00115A  0E02               	movlw	2
  2288   00115C  26E1               	addwf	fsr1l,f,c
  2289   00115E  50DE               	movf	postinc2,w,c
  2290   001160  5CE6               	subwf	postinc1,w,c
  2291   001162  50E6               	movf	postinc1,w,c
  2292   001164  0A80               	xorlw	128
  2293   001166  6E0A               	movwf	(??_fputc+4)^0,c
  2294   001168  50DE               	movf	postinc2,w,c
  2295   00116A  0A80               	xorlw	128
  2296   00116C  580A               	subwfb	(??_fputc+4)^0,w,c
  2297   00116E  B0D8               	btfsc	status,0,c
  2298   001170  EFBC  F008         	goto	u1021
  2299   001174  EFBE  F008         	goto	u1020
  2300   001178                     u1021:
  2301   001178  EFD6  F008         	goto	l1012
  2302   00117C                     u1020:
  2303   00117C                     l1723:
  2304   00117C  5005               	movf	fputc@fp^0,w,c
  2305   00117E  6ED9               	movwf	fsr2l,c
  2306   001180  6ADA               	clrf	fsr2h,c
  2307   001182  0E02               	movlw	2
  2308   001184  26D9               	addwf	fsr2l,f,c
  2309   001186  50DF               	movf	indf2,w,c
  2310   001188  6E06               	movwf	??_fputc^0,c
  2311   00118A  5005               	movf	fputc@fp^0,w,c
  2312   00118C  6ED9               	movwf	fsr2l,c
  2313   00118E  6ADA               	clrf	fsr2h,c
  2314   001190  50DF               	movf	indf2,w,c
  2315   001192  2406               	addwf	??_fputc^0,w,c
  2316   001194  6ED9               	movwf	fsr2l,c
  2317   001196  6ADA               	clrf	fsr2h,c
  2318   001198  C003  FFDF         	movff	fputc@c,indf2
  2319   00119C  5005               	movf	fputc@fp^0,w,c
  2320   00119E  6ED9               	movwf	fsr2l,c
  2321   0011A0  6ADA               	clrf	fsr2h,c
  2322   0011A2  0E02               	movlw	2
  2323   0011A4  26D9               	addwf	fsr2l,f,c
  2324   0011A6  2ADE               	incf	postinc2,f,c
  2325   0011A8  0E00               	movlw	0
  2326   0011AA  22DD               	addwfc	postdec2,f,c
  2327   0011AC                     l1012:
  2328   0011AC  0012               	return		;funcret
  2329   0011AE                     __end_of_fputc:
  2330                           	callstack 0
  2331                           
  2332 ;; *************** function _putch *****************
  2333 ;; Defined at:
  2334 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\putch.c"
  2335 ;; Parameters:    Size  Location     Type
  2336 ;;  c               1    wreg     unsigned char 
  2337 ;; Auto vars:     Size  Location     Type
  2338 ;;  c               1    0[COMRAM] unsigned char 
  2339 ;; Return value:  Size  Location     Type
  2340 ;;                  1    wreg      void 
  2341 ;; Registers used:
  2342 ;;		wreg
  2343 ;; Tracked objects:
  2344 ;;		On entry : 0/0
  2345 ;;		On exit  : 0/0
  2346 ;;		Unchanged: 0/0
  2347 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2348 ;;      Params:         0       0       0       0       0       0       0       0       0
  2349 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2350 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2351 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2352 ;;Total ram usage:        0 bytes
  2353 ;; Hardware stack levels used: 1
  2354 ;; Hardware stack levels required when called: 2
  2355 ;; This function calls:
  2356 ;;		Nothing
  2357 ;; This function is called by:
  2358 ;;		_fputc
  2359 ;; This function uses a non-reentrant model
  2360 ;;
  2361                           
  2362                           	psect	text7
  2363   0014EA                     __ptext7:
  2364                           	callstack 0
  2365   0014EA                     _putch:
  2366                           	callstack 22
  2367   0014EA  0012               	return		;funcret
  2368   0014EC                     __end_of_putch:
  2369                           	callstack 0
  2370                           
  2371 ;; *************** function _abs *****************
  2372 ;; Defined at:
  2373 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\abs.c"
  2374 ;; Parameters:    Size  Location     Type
  2375 ;;  a               2    8[COMRAM] int 
  2376 ;; Auto vars:     Size  Location     Type
  2377 ;;		None
  2378 ;; Return value:  Size  Location     Type
  2379 ;;                  2    8[COMRAM] int 
  2380 ;; Registers used:
  2381 ;;		wreg, status,2, status,0
  2382 ;; Tracked objects:
  2383 ;;		On entry : 0/0
  2384 ;;		On exit  : 0/0
  2385 ;;		Unchanged: 0/0
  2386 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2387 ;;      Params:         2       0       0       0       0       0       0       0       0
  2388 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2389 ;;      Temps:          2       0       0       0       0       0       0       0       0
  2390 ;;      Totals:         4       0       0       0       0       0       0       0       0
  2391 ;;Total ram usage:        4 bytes
  2392 ;; Hardware stack levels used: 1
  2393 ;; Hardware stack levels required when called: 2
  2394 ;; This function calls:
  2395 ;;		Nothing
  2396 ;; This function is called by:
  2397 ;;		_vfpfcnvrt
  2398 ;; This function uses a non-reentrant model
  2399 ;;
  2400                           
  2401                           	psect	text8
  2402   001416                     __ptext8:
  2403                           	callstack 0
  2404   001416                     _abs:
  2405                           	callstack 23
  2406   001416  BE0A               	btfsc	(abs@a+1)^0,7,c
  2407   001418  EF10  F00A         	goto	u1031
  2408   00141C  EF12  F00A         	goto	u1030
  2409   001420                     u1031:
  2410   001420  EF18  F00A         	goto	l997
  2411   001424                     u1030:
  2412   001424  C009  F009         	movff	abs@a,?_abs
  2413   001428  C00A  F00A         	movff	abs@a+1,?_abs+1
  2414   00142C  EF24  F00A         	goto	l1000
  2415   001430                     l997:
  2416   001430  C009  F00B         	movff	abs@a,??_abs
  2417   001434  C00A  F00C         	movff	abs@a+1,??_abs+1
  2418   001438  1E0B               	comf	??_abs^0,f,c
  2419   00143A  1E0C               	comf	(??_abs+1)^0,f,c
  2420   00143C  4A0B               	infsnz	??_abs^0,f,c
  2421   00143E  2A0C               	incf	(??_abs+1)^0,f,c
  2422   001440  C00B  F009         	movff	??_abs,?_abs
  2423   001444  C00C  F00A         	movff	??_abs+1,?_abs+1
  2424   001448                     l1000:
  2425   001448  0012               	return		;funcret
  2426   00144A                     __end_of_abs:
  2427                           	callstack 0
  2428                           
  2429 ;; *************** function ___awmod *****************
  2430 ;; Defined at:
  2431 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\awmod.c"
  2432 ;; Parameters:    Size  Location     Type
  2433 ;;  dividend        2    2[COMRAM] int 
  2434 ;;  divisor         2    4[COMRAM] int 
  2435 ;; Auto vars:     Size  Location     Type
  2436 ;;  sign            1    7[COMRAM] unsigned char 
  2437 ;;  counter         1    6[COMRAM] unsigned char 
  2438 ;; Return value:  Size  Location     Type
  2439 ;;                  2    2[COMRAM] int 
  2440 ;; Registers used:
  2441 ;;		wreg, status,2, status,0
  2442 ;; Tracked objects:
  2443 ;;		On entry : 0/0
  2444 ;;		On exit  : 0/0
  2445 ;;		Unchanged: 0/0
  2446 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2447 ;;      Params:         4       0       0       0       0       0       0       0       0
  2448 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2449 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2450 ;;      Totals:         6       0       0       0       0       0       0       0       0
  2451 ;;Total ram usage:        6 bytes
  2452 ;; Hardware stack levels used: 1
  2453 ;; Hardware stack levels required when called: 2
  2454 ;; This function calls:
  2455 ;;		Nothing
  2456 ;; This function is called by:
  2457 ;;		_vfpfcnvrt
  2458 ;; This function uses a non-reentrant model
  2459 ;;
  2460                           
  2461                           	psect	text9
  2462   001056                     __ptext9:
  2463                           	callstack 0
  2464   001056                     ___awmod:
  2465                           	callstack 23
  2466   001056  6A08               	clrf	___awmod@sign^0,c
  2467   001058  BE04               	btfsc	(___awmod@dividend+1)^0,7,c
  2468   00105A  EF33  F008         	goto	u930
  2469   00105E  EF31  F008         	goto	u931
  2470   001062                     u931:
  2471   001062  EF39  F008         	goto	l1685
  2472   001066                     u930:
  2473   001066  6C03               	negf	___awmod@dividend^0,c
  2474   001068  1E04               	comf	(___awmod@dividend+1)^0,f,c
  2475   00106A  B0D8               	btfsc	status,0,c
  2476   00106C  2A04               	incf	(___awmod@dividend+1)^0,f,c
  2477   00106E  0E01               	movlw	1
  2478   001070  6E08               	movwf	___awmod@sign^0,c
  2479   001072                     l1685:
  2480   001072  BE06               	btfsc	(___awmod@divisor+1)^0,7,c
  2481   001074  EF40  F008         	goto	u940
  2482   001078  EF3E  F008         	goto	u941
  2483   00107C                     u941:
  2484   00107C  EF44  F008         	goto	l1689
  2485   001080                     u940:
  2486   001080  6C05               	negf	___awmod@divisor^0,c
  2487   001082  1E06               	comf	(___awmod@divisor+1)^0,f,c
  2488   001084  B0D8               	btfsc	status,0,c
  2489   001086  2A06               	incf	(___awmod@divisor+1)^0,f,c
  2490   001088                     l1689:
  2491   001088  5005               	movf	___awmod@divisor^0,w,c
  2492   00108A  1006               	iorwf	(___awmod@divisor+1)^0,w,c
  2493   00108C  B4D8               	btfsc	status,2,c
  2494   00108E  EF4B  F008         	goto	u951
  2495   001092  EF4D  F008         	goto	u950
  2496   001096                     u951:
  2497   001096  EF71  F008         	goto	l1705
  2498   00109A                     u950:
  2499   00109A  0E01               	movlw	1
  2500   00109C  6E07               	movwf	___awmod@counter^0,c
  2501   00109E  EF55  F008         	goto	l1695
  2502   0010A2                     l1693:
  2503   0010A2  90D8               	bcf	status,0,c
  2504   0010A4  3605               	rlcf	___awmod@divisor^0,f,c
  2505   0010A6  3606               	rlcf	(___awmod@divisor+1)^0,f,c
  2506   0010A8  2A07               	incf	___awmod@counter^0,f,c
  2507   0010AA                     l1695:
  2508   0010AA  AE06               	btfss	(___awmod@divisor+1)^0,7,c
  2509   0010AC  EF5A  F008         	goto	u961
  2510   0010B0  EF5C  F008         	goto	u960
  2511   0010B4                     u961:
  2512   0010B4  EF51  F008         	goto	l1693
  2513   0010B8                     u960:
  2514   0010B8                     l1697:
  2515   0010B8  5005               	movf	___awmod@divisor^0,w,c
  2516   0010BA  5C03               	subwf	___awmod@dividend^0,w,c
  2517   0010BC  5006               	movf	(___awmod@divisor+1)^0,w,c
  2518   0010BE  5804               	subwfb	(___awmod@dividend+1)^0,w,c
  2519   0010C0  A0D8               	btfss	status,0,c
  2520   0010C2  EF65  F008         	goto	u971
  2521   0010C6  EF67  F008         	goto	u970
  2522   0010CA                     u971:
  2523   0010CA  EF6B  F008         	goto	l1701
  2524   0010CE                     u970:
  2525   0010CE  5005               	movf	___awmod@divisor^0,w,c
  2526   0010D0  5E03               	subwf	___awmod@dividend^0,f,c
  2527   0010D2  5006               	movf	(___awmod@divisor+1)^0,w,c
  2528   0010D4  5A04               	subwfb	(___awmod@dividend+1)^0,f,c
  2529   0010D6                     l1701:
  2530   0010D6  90D8               	bcf	status,0,c
  2531   0010D8  3206               	rrcf	(___awmod@divisor+1)^0,f,c
  2532   0010DA  3205               	rrcf	___awmod@divisor^0,f,c
  2533   0010DC  2E07               	decfsz	___awmod@counter^0,f,c
  2534   0010DE  EF5C  F008         	goto	l1697
  2535   0010E2                     l1705:
  2536   0010E2  5008               	movf	___awmod@sign^0,w,c
  2537   0010E4  B4D8               	btfsc	status,2,c
  2538   0010E6  EF77  F008         	goto	u981
  2539   0010EA  EF79  F008         	goto	u980
  2540   0010EE                     u981:
  2541   0010EE  EF7D  F008         	goto	l1709
  2542   0010F2                     u980:
  2543   0010F2  6C03               	negf	___awmod@dividend^0,c
  2544   0010F4  1E04               	comf	(___awmod@dividend+1)^0,f,c
  2545   0010F6  B0D8               	btfsc	status,0,c
  2546   0010F8  2A04               	incf	(___awmod@dividend+1)^0,f,c
  2547   0010FA                     l1709:
  2548   0010FA  C003  F003         	movff	___awmod@dividend,?___awmod
  2549   0010FE  C004  F004         	movff	___awmod@dividend+1,?___awmod+1
  2550   001102  0012               	return		;funcret
  2551   001104                     __end_of___awmod:
  2552                           	callstack 0
  2553                           
  2554 ;; *************** function ___awdiv *****************
  2555 ;; Defined at:
  2556 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\awdiv.c"
  2557 ;; Parameters:    Size  Location     Type
  2558 ;;  dividend        2    2[COMRAM] int 
  2559 ;;  divisor         2    4[COMRAM] int 
  2560 ;; Auto vars:     Size  Location     Type
  2561 ;;  quotient        2    8[COMRAM] int 
  2562 ;;  sign            1    7[COMRAM] unsigned char 
  2563 ;;  counter         1    6[COMRAM] unsigned char 
  2564 ;; Return value:  Size  Location     Type
  2565 ;;                  2    2[COMRAM] int 
  2566 ;; Registers used:
  2567 ;;		wreg, status,2, status,0
  2568 ;; Tracked objects:
  2569 ;;		On entry : 0/0
  2570 ;;		On exit  : 0/0
  2571 ;;		Unchanged: 0/0
  2572 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2573 ;;      Params:         4       0       0       0       0       0       0       0       0
  2574 ;;      Locals:         4       0       0       0       0       0       0       0       0
  2575 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2576 ;;      Totals:         8       0       0       0       0       0       0       0       0
  2577 ;;Total ram usage:        8 bytes
  2578 ;; Hardware stack levels used: 1
  2579 ;; Hardware stack levels required when called: 2
  2580 ;; This function calls:
  2581 ;;		Nothing
  2582 ;; This function is called by:
  2583 ;;		_vfpfcnvrt
  2584 ;; This function uses a non-reentrant model
  2585 ;;
  2586                           
  2587                           	psect	text10
  2588   000F94                     __ptext10:
  2589                           	callstack 0
  2590   000F94                     ___awdiv:
  2591                           	callstack 23
  2592   000F94  6A08               	clrf	___awdiv@sign^0,c
  2593   000F96  BE06               	btfsc	(___awdiv@divisor+1)^0,7,c
  2594   000F98  EFD2  F007         	goto	u870
  2595   000F9C  EFD0  F007         	goto	u871
  2596   000FA0                     u871:
  2597   000FA0  EFD8  F007         	goto	l1641
  2598   000FA4                     u870:
  2599   000FA4  6C05               	negf	___awdiv@divisor^0,c
  2600   000FA6  1E06               	comf	(___awdiv@divisor+1)^0,f,c
  2601   000FA8  B0D8               	btfsc	status,0,c
  2602   000FAA  2A06               	incf	(___awdiv@divisor+1)^0,f,c
  2603   000FAC  0E01               	movlw	1
  2604   000FAE  6E08               	movwf	___awdiv@sign^0,c
  2605   000FB0                     l1641:
  2606   000FB0  BE04               	btfsc	(___awdiv@dividend+1)^0,7,c
  2607   000FB2  EFDF  F007         	goto	u880
  2608   000FB6  EFDD  F007         	goto	u881
  2609   000FBA                     u881:
  2610   000FBA  EFE5  F007         	goto	l1647
  2611   000FBE                     u880:
  2612   000FBE  6C03               	negf	___awdiv@dividend^0,c
  2613   000FC0  1E04               	comf	(___awdiv@dividend+1)^0,f,c
  2614   000FC2  B0D8               	btfsc	status,0,c
  2615   000FC4  2A04               	incf	(___awdiv@dividend+1)^0,f,c
  2616   000FC6  0E01               	movlw	1
  2617   000FC8  1A08               	xorwf	___awdiv@sign^0,f,c
  2618   000FCA                     l1647:
  2619   000FCA  0E00               	movlw	0
  2620   000FCC  6E0A               	movwf	(___awdiv@quotient+1)^0,c
  2621   000FCE  0E00               	movlw	0
  2622   000FD0  6E09               	movwf	___awdiv@quotient^0,c
  2623   000FD2  5005               	movf	___awdiv@divisor^0,w,c
  2624   000FD4  1006               	iorwf	(___awdiv@divisor+1)^0,w,c
  2625   000FD6  B4D8               	btfsc	status,2,c
  2626   000FD8  EFF0  F007         	goto	u891
  2627   000FDC  EFF2  F007         	goto	u890
  2628   000FE0                     u891:
  2629   000FE0  EF1A  F008         	goto	l1669
  2630   000FE4                     u890:
  2631   000FE4  0E01               	movlw	1
  2632   000FE6  6E07               	movwf	___awdiv@counter^0,c
  2633   000FE8  EFFA  F007         	goto	l1655
  2634   000FEC                     l1653:
  2635   000FEC  90D8               	bcf	status,0,c
  2636   000FEE  3605               	rlcf	___awdiv@divisor^0,f,c
  2637   000FF0  3606               	rlcf	(___awdiv@divisor+1)^0,f,c
  2638   000FF2  2A07               	incf	___awdiv@counter^0,f,c
  2639   000FF4                     l1655:
  2640   000FF4  AE06               	btfss	(___awdiv@divisor+1)^0,7,c
  2641   000FF6  EFFF  F007         	goto	u901
  2642   000FFA  EF01  F008         	goto	u900
  2643   000FFE                     u901:
  2644   000FFE  EFF6  F007         	goto	l1653
  2645   001002                     u900:
  2646   001002                     l1657:
  2647   001002  90D8               	bcf	status,0,c
  2648   001004  3609               	rlcf	___awdiv@quotient^0,f,c
  2649   001006  360A               	rlcf	(___awdiv@quotient+1)^0,f,c
  2650   001008  5005               	movf	___awdiv@divisor^0,w,c
  2651   00100A  5C03               	subwf	___awdiv@dividend^0,w,c
  2652   00100C  5006               	movf	(___awdiv@divisor+1)^0,w,c
  2653   00100E  5804               	subwfb	(___awdiv@dividend+1)^0,w,c
  2654   001010  A0D8               	btfss	status,0,c
  2655   001012  EF0D  F008         	goto	u911
  2656   001016  EF0F  F008         	goto	u910
  2657   00101A                     u911:
  2658   00101A  EF14  F008         	goto	l1665
  2659   00101E                     u910:
  2660   00101E  5005               	movf	___awdiv@divisor^0,w,c
  2661   001020  5E03               	subwf	___awdiv@dividend^0,f,c
  2662   001022  5006               	movf	(___awdiv@divisor+1)^0,w,c
  2663   001024  5A04               	subwfb	(___awdiv@dividend+1)^0,f,c
  2664   001026  8009               	bsf	___awdiv@quotient^0,0,c
  2665   001028                     l1665:
  2666   001028  90D8               	bcf	status,0,c
  2667   00102A  3206               	rrcf	(___awdiv@divisor+1)^0,f,c
  2668   00102C  3205               	rrcf	___awdiv@divisor^0,f,c
  2669   00102E  2E07               	decfsz	___awdiv@counter^0,f,c
  2670   001030  EF01  F008         	goto	l1657
  2671   001034                     l1669:
  2672   001034  5008               	movf	___awdiv@sign^0,w,c
  2673   001036  B4D8               	btfsc	status,2,c
  2674   001038  EF20  F008         	goto	u921
  2675   00103C  EF22  F008         	goto	u920
  2676   001040                     u921:
  2677   001040  EF26  F008         	goto	l1673
  2678   001044                     u920:
  2679   001044  6C09               	negf	___awdiv@quotient^0,c
  2680   001046  1E0A               	comf	(___awdiv@quotient+1)^0,f,c
  2681   001048  B0D8               	btfsc	status,0,c
  2682   00104A  2A0A               	incf	(___awdiv@quotient+1)^0,f,c
  2683   00104C                     l1673:
  2684   00104C  C009  F003         	movff	___awdiv@quotient,?___awdiv
  2685   001050  C00A  F004         	movff	___awdiv@quotient+1,?___awdiv+1
  2686   001054  0012               	return		;funcret
  2687   001056                     __end_of___awdiv:
  2688                           	callstack 0
  2689                           
  2690 ;; *************** function _Lcd_Write_String *****************
  2691 ;; Defined at:
  2692 ;;		line 104 in file "lcd.c"
  2693 ;; Parameters:    Size  Location     Type
  2694 ;;  a               2    6[COMRAM] PTR const unsigned char 
  2695 ;;		 -> STR_14(4), STR_13(4), STR_12(3), STR_11(5), 
  2696 ;;		 -> STR_10(7), STR_9(9), STR_8(6), STR_7(6), 
  2697 ;;		 -> STR_6(6), STR_5(6), STR_4(6), STR_3(6), 
  2698 ;;		 -> STR_2(14), mostrar_variable@buffer(20), 
  2699 ;; Auto vars:     Size  Location     Type
  2700 ;;  i               2   10[COMRAM] int 
  2701 ;; Return value:  Size  Location     Type
  2702 ;;                  1    wreg      void 
  2703 ;; Registers used:
  2704 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2705 ;; Tracked objects:
  2706 ;;		On entry : 0/0
  2707 ;;		On exit  : 0/0
  2708 ;;		Unchanged: 0/0
  2709 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2710 ;;      Params:         2       0       0       0       0       0       0       0       0
  2711 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2712 ;;      Temps:          2       0       0       0       0       0       0       0       0
  2713 ;;      Totals:         6       0       0       0       0       0       0       0       0
  2714 ;;Total ram usage:        6 bytes
  2715 ;; Hardware stack levels used: 1
  2716 ;; Hardware stack levels required when called: 4
  2717 ;; This function calls:
  2718 ;;		_Lcd_Write_Char
  2719 ;; This function is called by:
  2720 ;;		_mostrar_variable
  2721 ;;		_mostrar_conteo
  2722 ;; This function uses a non-reentrant model
  2723 ;;
  2724                           
  2725                           	psect	text11
  2726   001230                     __ptext11:
  2727                           	callstack 0
  2728   001230                     _Lcd_Write_String:
  2729                           	callstack 24
  2730   001230                     
  2731                           ;lcd.c: 104: void Lcd_Write_String(const char *a);lcd.c: 105: {;lcd.c: 106:     int i;;l
      +                          cd.c: 107:     for(i=0;a[i]!='\0';i++)
  2732   001230  0E00               	movlw	0
  2733   001232  6E0C               	movwf	(Lcd_Write_String@i+1)^0,c
  2734   001234  0E00               	movlw	0
  2735   001236  6E0B               	movwf	Lcd_Write_String@i^0,c
  2736   001238  EF38  F009         	goto	l1809
  2737   00123C                     l1805:
  2738                           
  2739                           ;lcd.c: 108:         Lcd_Write_Char(a[i]);
  2740   00123C  500B               	movf	Lcd_Write_String@i^0,w,c
  2741   00123E  2407               	addwf	Lcd_Write_String@a^0,w,c
  2742   001240  6E09               	movwf	??_Lcd_Write_String^0,c
  2743   001242  500C               	movf	(Lcd_Write_String@i+1)^0,w,c
  2744   001244  2008               	addwfc	(Lcd_Write_String@a+1)^0,w,c
  2745   001246  6E0A               	movwf	(??_Lcd_Write_String+1)^0,c
  2746   001248  C009  FFF6         	movff	??_Lcd_Write_String,tblptrl
  2747   00124C  C00A  FFF7         	movff	??_Lcd_Write_String+1,tblptrh
  2748   001250  6AF8               	clrf	tblptru,c
  2749   001252  0E07               	movlw	(high __ramtop+-1)
  2750   001254  64F7               	cpfsgt	tblptrh,c
  2751   001256  D003               	bra	u1157
  2752   001258  0008               	tblrd		*
  2753   00125A  50F5               	movf	tablat,w,c
  2754   00125C  D005               	bra	u1150
  2755   00125E                     u1157:
  2756   00125E  CFF6 FFE1          	movff	tblptrl,fsr1l
  2757   001262  CFF7 FFE2          	movff	tblptrh,fsr1h
  2758   001266  50E7               	movf	indf1,w,c
  2759   001268                     u1150:
  2760   001268  ECD5  F009         	call	_Lcd_Write_Char
  2761   00126C  4A0B               	infsnz	Lcd_Write_String@i^0,f,c
  2762   00126E  2A0C               	incf	(Lcd_Write_String@i+1)^0,f,c
  2763   001270                     l1809:
  2764   001270  500B               	movf	Lcd_Write_String@i^0,w,c
  2765   001272  2407               	addwf	Lcd_Write_String@a^0,w,c
  2766   001274  6E09               	movwf	??_Lcd_Write_String^0,c
  2767   001276  500C               	movf	(Lcd_Write_String@i+1)^0,w,c
  2768   001278  2008               	addwfc	(Lcd_Write_String@a+1)^0,w,c
  2769   00127A  6E0A               	movwf	(??_Lcd_Write_String+1)^0,c
  2770   00127C  C009  FFF6         	movff	??_Lcd_Write_String,tblptrl
  2771   001280  C00A  FFF7         	movff	??_Lcd_Write_String+1,tblptrh
  2772   001284  6AF8               	clrf	tblptru,c
  2773   001286  0E07               	movlw	(high __ramtop+-1)
  2774   001288  64F7               	cpfsgt	tblptrh,c
  2775   00128A  D003               	bra	u1167
  2776   00128C  0008               	tblrd		*
  2777   00128E  50F5               	movf	tablat,w,c
  2778   001290  D005               	bra	u1160
  2779   001292                     u1167:
  2780   001292  CFF6 FFE1          	movff	tblptrl,fsr1l
  2781   001296  CFF7 FFE2          	movff	tblptrh,fsr1h
  2782   00129A  50E7               	movf	indf1,w,c
  2783   00129C                     u1160:
  2784   00129C  0900               	iorlw	0
  2785   00129E  A4D8               	btfss	status,2,c
  2786   0012A0  EF54  F009         	goto	u1171
  2787   0012A4  EF56  F009         	goto	u1170
  2788   0012A8                     u1171:
  2789   0012A8  EF1E  F009         	goto	l1805
  2790   0012AC                     u1170:
  2791   0012AC  0012               	return		;funcret
  2792   0012AE                     __end_of_Lcd_Write_String:
  2793                           	callstack 0
  2794                           
  2795 ;; *************** function _Lcd_Write_Char *****************
  2796 ;; Defined at:
  2797 ;;		line 88 in file "lcd.c"
  2798 ;; Parameters:    Size  Location     Type
  2799 ;;  a               1    wreg     unsigned char 
  2800 ;; Auto vars:     Size  Location     Type
  2801 ;;  a               1    5[COMRAM] unsigned char 
  2802 ;;  y               1    4[COMRAM] unsigned char 
  2803 ;;  temp            1    3[COMRAM] unsigned char 
  2804 ;; Return value:  Size  Location     Type
  2805 ;;                  1    wreg      void 
  2806 ;; Registers used:
  2807 ;;		wreg, status,2, status,0, cstack
  2808 ;; Tracked objects:
  2809 ;;		On entry : 0/0
  2810 ;;		On exit  : 0/0
  2811 ;;		Unchanged: 0/0
  2812 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2813 ;;      Params:         0       0       0       0       0       0       0       0       0
  2814 ;;      Locals:         3       0       0       0       0       0       0       0       0
  2815 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2816 ;;      Totals:         3       0       0       0       0       0       0       0       0
  2817 ;;Total ram usage:        3 bytes
  2818 ;; Hardware stack levels used: 1
  2819 ;; Hardware stack levels required when called: 3
  2820 ;; This function calls:
  2821 ;;		_Lcd_Port
  2822 ;; This function is called by:
  2823 ;;		_Lcd_Write_String
  2824 ;;		_Lcd_CGRAM_CreateChar
  2825 ;; This function uses a non-reentrant model
  2826 ;;
  2827                           
  2828                           	psect	text12
  2829   0013AA                     __ptext12:
  2830                           	callstack 0
  2831   0013AA                     _Lcd_Write_Char:
  2832                           	callstack 24
  2833                           
  2834                           ;incstack = 0
  2835                           ;Lcd_Write_Char@a stored from wreg
  2836   0013AA  6E06               	movwf	Lcd_Write_Char@a^0,c
  2837   0013AC                     
  2838                           ;lcd.c: 88: void Lcd_Write_Char(char a);lcd.c: 89: {;lcd.c: 90:     char temp,y;;lcd.c: 
      +                          91:     temp = a&0x0F;
  2839   0013AC  5006               	movf	Lcd_Write_Char@a^0,w,c
  2840   0013AE  0B0F               	andlw	15
  2841   0013B0  6E04               	movwf	Lcd_Write_Char@temp^0,c
  2842                           
  2843                           ;lcd.c: 92:     y = a&0xF0;
  2844   0013B2  5006               	movf	Lcd_Write_Char@a^0,w,c
  2845   0013B4  0BF0               	andlw	240
  2846   0013B6  6E05               	movwf	Lcd_Write_Char@y^0,c
  2847   0013B8                     
  2848                           ;lcd.c: 93:     LATEbits.LE1 = 1;
  2849   0013B8  828D               	bsf	141,1,c	;volatile
  2850   0013BA                     
  2851                           ;lcd.c: 94:     Lcd_Port(y>>4);
  2852   0013BA  3805               	swapf	Lcd_Write_Char@y^0,w,c
  2853   0013BC  0B0F               	andlw	15
  2854   0013BE  EC88  F009         	call	_Lcd_Port
  2855   0013C2                     
  2856                           ;lcd.c: 95:     LATEbits.LE0 = 1;
  2857   0013C2  808D               	bsf	141,0,c	;volatile
  2858   0013C4                     
  2859                           ;lcd.c: 96:     _delay((unsigned long)((40)*(4000000/4000000.0)));
  2860   0013C4  0E0D               	movlw	13
  2861   0013C6                     u1627:
  2862   0013C6  2EE8               	decfsz	wreg,f,c
  2863   0013C8  D7FE               	bra	u1627
  2864   0013CA  0000               	nop	
  2865   0013CC                     
  2866                           ;lcd.c: 97:     LATEbits.LE0 = 0;
  2867   0013CC  908D               	bcf	141,0,c	;volatile
  2868   0013CE                     
  2869                           ;lcd.c: 98:     Lcd_Port(temp);
  2870   0013CE  5004               	movf	Lcd_Write_Char@temp^0,w,c
  2871   0013D0  EC88  F009         	call	_Lcd_Port
  2872   0013D4                     
  2873                           ;lcd.c: 99:     LATEbits.LE0 = 1;
  2874   0013D4  808D               	bsf	141,0,c	;volatile
  2875   0013D6                     
  2876                           ;lcd.c: 100:     _delay((unsigned long)((40)*(4000000/4000000.0)));
  2877   0013D6  0E0D               	movlw	13
  2878   0013D8                     u1637:
  2879   0013D8  2EE8               	decfsz	wreg,f,c
  2880   0013DA  D7FE               	bra	u1637
  2881   0013DC  0000               	nop	
  2882   0013DE                     
  2883                           ;lcd.c: 101:     LATEbits.LE0 = 0;
  2884   0013DE  908D               	bcf	141,0,c	;volatile
  2885   0013E0  0012               	return		;funcret
  2886   0013E2                     __end_of_Lcd_Write_Char:
  2887                           	callstack 0
  2888                           
  2889 ;; *************** function _Lcd_Set_Cursor *****************
  2890 ;; Defined at:
  2891 ;;		line 26 in file "lcd.c"
  2892 ;; Parameters:    Size  Location     Type
  2893 ;;  a               1    wreg     unsigned char 
  2894 ;;  b               1    5[COMRAM] unsigned char 
  2895 ;; Auto vars:     Size  Location     Type
  2896 ;;  a               1    6[COMRAM] unsigned char 
  2897 ;;  temp            1    9[COMRAM] unsigned char 
  2898 ;;  y               1    8[COMRAM] unsigned char 
  2899 ;;  z               1    7[COMRAM] unsigned char 
  2900 ;; Return value:  Size  Location     Type
  2901 ;;                  1    wreg      void 
  2902 ;; Registers used:
  2903 ;;		wreg, status,2, status,0, cstack
  2904 ;; Tracked objects:
  2905 ;;		On entry : 0/0
  2906 ;;		On exit  : 0/0
  2907 ;;		Unchanged: 0/0
  2908 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2909 ;;      Params:         1       0       0       0       0       0       0       0       0
  2910 ;;      Locals:         4       0       0       0       0       0       0       0       0
  2911 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2912 ;;      Totals:         5       0       0       0       0       0       0       0       0
  2913 ;;Total ram usage:        5 bytes
  2914 ;; Hardware stack levels used: 1
  2915 ;; Hardware stack levels required when called: 4
  2916 ;; This function calls:
  2917 ;;		_Lcd_Cmd
  2918 ;; This function is called by:
  2919 ;;		_mostrar_conteo
  2920 ;;		_main
  2921 ;; This function uses a non-reentrant model
  2922 ;;
  2923                           
  2924                           	psect	text13
  2925   000EC2                     __ptext13:
  2926                           	callstack 0
  2927   000EC2                     _Lcd_Set_Cursor:
  2928                           	callstack 25
  2929                           
  2930                           ;incstack = 0
  2931                           ;Lcd_Set_Cursor@a stored from wreg
  2932   000EC2  6E07               	movwf	Lcd_Set_Cursor@a^0,c
  2933   000EC4                     
  2934                           ;lcd.c: 26: void Lcd_Set_Cursor(char a, char b);lcd.c: 27: {;lcd.c: 28:     char temp,z,
      +                          y;;lcd.c: 29:     if(a == 1)
  2935   000EC4  0407               	decf	Lcd_Set_Cursor@a^0,w,c
  2936   000EC6  A4D8               	btfss	status,2,c
  2937   000EC8  EF68  F007         	goto	u1181
  2938   000ECC  EF6A  F007         	goto	u1180
  2939   000ED0                     u1181:
  2940   000ED0  EF7B  F007         	goto	l1825
  2941   000ED4                     u1180:
  2942   000ED4                     
  2943                           ;lcd.c: 30:     {;lcd.c: 31:         temp = 0x80 + b - 1;
  2944   000ED4  5006               	movf	Lcd_Set_Cursor@b^0,w,c
  2945   000ED6  0F7F               	addlw	127
  2946   000ED8  6E0A               	movwf	Lcd_Set_Cursor@temp^0,c
  2947                           
  2948                           ;lcd.c: 32:         z = temp>>4;
  2949   000EDA  380A               	swapf	Lcd_Set_Cursor@temp^0,w,c
  2950   000EDC  0B0F               	andlw	15
  2951   000EDE  6E08               	movwf	Lcd_Set_Cursor@z^0,c
  2952                           
  2953                           ;lcd.c: 33:         y = temp & 0x0F;
  2954   000EE0  500A               	movf	Lcd_Set_Cursor@temp^0,w,c
  2955   000EE2  0B0F               	andlw	15
  2956   000EE4  6E09               	movwf	Lcd_Set_Cursor@y^0,c
  2957   000EE6                     
  2958                           ;lcd.c: 34:         Lcd_Cmd(z);
  2959   000EE6  5008               	movf	Lcd_Set_Cursor@z^0,w,c
  2960   000EE8  EC48  F00A         	call	_Lcd_Cmd
  2961   000EEC                     
  2962                           ;lcd.c: 35:         Lcd_Cmd(y);
  2963   000EEC  5009               	movf	Lcd_Set_Cursor@y^0,w,c
  2964   000EEE  EC48  F00A         	call	_Lcd_Cmd
  2965                           
  2966                           ;lcd.c: 36:     }
  2967   000EF2  EFC9  F007         	goto	l209
  2968   000EF6                     l1825:
  2969   000EF6  0E02               	movlw	2
  2970   000EF8  1807               	xorwf	Lcd_Set_Cursor@a^0,w,c
  2971   000EFA  A4D8               	btfss	status,2,c
  2972   000EFC  EF82  F007         	goto	u1191
  2973   000F00  EF84  F007         	goto	u1190
  2974   000F04                     u1191:
  2975   000F04  EF95  F007         	goto	l1833
  2976   000F08                     u1190:
  2977   000F08                     
  2978                           ;lcd.c: 38:     {;lcd.c: 39:         temp = 0xC0 + b - 1;
  2979   000F08  5006               	movf	Lcd_Set_Cursor@b^0,w,c
  2980   000F0A  0FBF               	addlw	191
  2981   000F0C  6E0A               	movwf	Lcd_Set_Cursor@temp^0,c
  2982                           
  2983                           ;lcd.c: 40:         z = temp>>4;
  2984   000F0E  380A               	swapf	Lcd_Set_Cursor@temp^0,w,c
  2985   000F10  0B0F               	andlw	15
  2986   000F12  6E08               	movwf	Lcd_Set_Cursor@z^0,c
  2987                           
  2988                           ;lcd.c: 41:         y = temp & 0x0F;
  2989   000F14  500A               	movf	Lcd_Set_Cursor@temp^0,w,c
  2990   000F16  0B0F               	andlw	15
  2991   000F18  6E09               	movwf	Lcd_Set_Cursor@y^0,c
  2992   000F1A                     
  2993                           ;lcd.c: 42:         Lcd_Cmd(z);
  2994   000F1A  5008               	movf	Lcd_Set_Cursor@z^0,w,c
  2995   000F1C  EC48  F00A         	call	_Lcd_Cmd
  2996   000F20                     
  2997                           ;lcd.c: 43:         Lcd_Cmd(y);
  2998   000F20  5009               	movf	Lcd_Set_Cursor@y^0,w,c
  2999   000F22  EC48  F00A         	call	_Lcd_Cmd
  3000                           
  3001                           ;lcd.c: 44:     }
  3002   000F26  EFC9  F007         	goto	l209
  3003   000F2A                     l1833:
  3004   000F2A  0E03               	movlw	3
  3005   000F2C  1807               	xorwf	Lcd_Set_Cursor@a^0,w,c
  3006   000F2E  A4D8               	btfss	status,2,c
  3007   000F30  EF9C  F007         	goto	u1201
  3008   000F34  EF9E  F007         	goto	u1200
  3009   000F38                     u1201:
  3010   000F38  EFAF  F007         	goto	l1841
  3011   000F3C                     u1200:
  3012   000F3C                     
  3013                           ;lcd.c: 46:     {;lcd.c: 47:         temp = 0x94 + b - 1;
  3014   000F3C  5006               	movf	Lcd_Set_Cursor@b^0,w,c
  3015   000F3E  0F93               	addlw	147
  3016   000F40  6E0A               	movwf	Lcd_Set_Cursor@temp^0,c
  3017                           
  3018                           ;lcd.c: 48:         z = temp>>4;
  3019   000F42  380A               	swapf	Lcd_Set_Cursor@temp^0,w,c
  3020   000F44  0B0F               	andlw	15
  3021   000F46  6E08               	movwf	Lcd_Set_Cursor@z^0,c
  3022                           
  3023                           ;lcd.c: 49:         y = temp & 0x0F;
  3024   000F48  500A               	movf	Lcd_Set_Cursor@temp^0,w,c
  3025   000F4A  0B0F               	andlw	15
  3026   000F4C  6E09               	movwf	Lcd_Set_Cursor@y^0,c
  3027   000F4E                     
  3028                           ;lcd.c: 50:         Lcd_Cmd(z);
  3029   000F4E  5008               	movf	Lcd_Set_Cursor@z^0,w,c
  3030   000F50  EC48  F00A         	call	_Lcd_Cmd
  3031   000F54                     
  3032                           ;lcd.c: 51:         Lcd_Cmd(y);
  3033   000F54  5009               	movf	Lcd_Set_Cursor@y^0,w,c
  3034   000F56  EC48  F00A         	call	_Lcd_Cmd
  3035                           
  3036                           ;lcd.c: 52:     }
  3037   000F5A  EFC9  F007         	goto	l209
  3038   000F5E                     l1841:
  3039   000F5E  0E04               	movlw	4
  3040   000F60  1807               	xorwf	Lcd_Set_Cursor@a^0,w,c
  3041   000F62  A4D8               	btfss	status,2,c
  3042   000F64  EFB6  F007         	goto	u1211
  3043   000F68  EFB8  F007         	goto	u1210
  3044   000F6C                     u1211:
  3045   000F6C  EFC9  F007         	goto	l205
  3046   000F70                     u1210:
  3047   000F70                     
  3048                           ;lcd.c: 54:     {;lcd.c: 55:         temp = 0xD4 + b - 1;
  3049   000F70  5006               	movf	Lcd_Set_Cursor@b^0,w,c
  3050   000F72  0FD3               	addlw	211
  3051   000F74  6E0A               	movwf	Lcd_Set_Cursor@temp^0,c
  3052                           
  3053                           ;lcd.c: 56:         z = temp>>4;
  3054   000F76  380A               	swapf	Lcd_Set_Cursor@temp^0,w,c
  3055   000F78  0B0F               	andlw	15
  3056   000F7A  6E08               	movwf	Lcd_Set_Cursor@z^0,c
  3057                           
  3058                           ;lcd.c: 57:         y = temp & 0x0F;
  3059   000F7C  500A               	movf	Lcd_Set_Cursor@temp^0,w,c
  3060   000F7E  0B0F               	andlw	15
  3061   000F80  6E09               	movwf	Lcd_Set_Cursor@y^0,c
  3062   000F82                     
  3063                           ;lcd.c: 58:         Lcd_Cmd(z);
  3064   000F82  5008               	movf	Lcd_Set_Cursor@z^0,w,c
  3065   000F84  EC48  F00A         	call	_Lcd_Cmd
  3066   000F88                     
  3067                           ;lcd.c: 59:         Lcd_Cmd(y);
  3068   000F88  5009               	movf	Lcd_Set_Cursor@y^0,w,c
  3069   000F8A  EC48  F00A         	call	_Lcd_Cmd
  3070   000F8E  EFC9  F007         	goto	l209
  3071   000F92                     l205:
  3072   000F92                     l209:
  3073   000F92  0012               	return		;funcret
  3074   000F94                     __end_of_Lcd_Set_Cursor:
  3075                           	callstack 0
  3076                           
  3077 ;; *************** function _init_ports *****************
  3078 ;; Defined at:
  3079 ;;		line 46 in file "Cinta.c"
  3080 ;; Parameters:    Size  Location     Type
  3081 ;;		None
  3082 ;; Auto vars:     Size  Location     Type
  3083 ;;		None
  3084 ;; Return value:  Size  Location     Type
  3085 ;;                  1    wreg      void 
  3086 ;; Registers used:
  3087 ;;		wreg, status,2
  3088 ;; Tracked objects:
  3089 ;;		On entry : 0/0
  3090 ;;		On exit  : 0/0
  3091 ;;		Unchanged: 0/0
  3092 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3093 ;;      Params:         0       0       0       0       0       0       0       0       0
  3094 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3095 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3096 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3097 ;;Total ram usage:        0 bytes
  3098 ;; Hardware stack levels used: 1
  3099 ;; Hardware stack levels required when called: 2
  3100 ;; This function calls:
  3101 ;;		Nothing
  3102 ;; This function is called by:
  3103 ;;		_main
  3104 ;; This function uses a non-reentrant model
  3105 ;;
  3106                           
  3107                           	psect	text14
  3108   0014B0                     __ptext14:
  3109                           	callstack 0
  3110   0014B0                     _init_ports:
  3111                           	callstack 28
  3112   0014B0                     
  3113                           ;Cinta.c: 47:      ADCON1bits.PCFG=0x0F;
  3114   0014B0  0E0F               	movlw	15
  3115   0014B2  12C1               	iorwf	193,f,c	;volatile
  3116   0014B4                     
  3117                           ;Cinta.c: 48:      TRISB=0XFF;
  3118   0014B4  6893               	setf	147,c	;volatile
  3119                           
  3120                           ;Cinta.c: 49:      TRISA=0b00001111;
  3121   0014B6  0E0F               	movlw	15
  3122   0014B8  6E92               	movwf	146,c	;volatile
  3123   0014BA                     
  3124                           ;Cinta.c: 50:      LATA=0X00;
  3125   0014BA  6A89               	clrf	137,c	;volatile
  3126   0014BC                     
  3127                           ;Cinta.c: 51:      TRISD=0X00;
  3128   0014BC  6A95               	clrf	149,c	;volatile
  3129   0014BE                     
  3130                           ;Cinta.c: 52:      TRISE=0X00;
  3131   0014BE  6A96               	clrf	150,c	;volatile
  3132   0014C0                     
  3133                           ;Cinta.c: 53:      LATE=0;
  3134   0014C0  6A8D               	clrf	141,c	;volatile
  3135   0014C2                     
  3136                           ;Cinta.c: 54:      TRISC=0X00;
  3137   0014C2  6A94               	clrf	148,c	;volatile
  3138   0014C4                     
  3139                           ;Cinta.c: 55:      TRISCbits.RC7=1;
  3140   0014C4  8E94               	bsf	148,7,c	;volatile
  3141   0014C6  0012               	return		;funcret
  3142   0014C8                     __end_of_init_ports:
  3143                           	callstack 0
  3144                           
  3145 ;; *************** function _init_maqueta *****************
  3146 ;; Defined at:
  3147 ;;		line 66 in file "Cinta.c"
  3148 ;; Parameters:    Size  Location     Type
  3149 ;;		None
  3150 ;; Auto vars:     Size  Location     Type
  3151 ;;		None
  3152 ;; Return value:  Size  Location     Type
  3153 ;;                  1    wreg      void 
  3154 ;; Registers used:
  3155 ;;		None
  3156 ;; Tracked objects:
  3157 ;;		On entry : 0/0
  3158 ;;		On exit  : 0/0
  3159 ;;		Unchanged: 0/0
  3160 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3161 ;;      Params:         0       0       0       0       0       0       0       0       0
  3162 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3163 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3164 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3165 ;;Total ram usage:        0 bytes
  3166 ;; Hardware stack levels used: 1
  3167 ;; Hardware stack levels required when called: 2
  3168 ;; This function calls:
  3169 ;;		Nothing
  3170 ;; This function is called by:
  3171 ;;		_main
  3172 ;; This function uses a non-reentrant model
  3173 ;;
  3174                           
  3175                           	psect	text15
  3176   0012AE                     __ptext15:
  3177                           	callstack 0
  3178   0012AE                     _init_maqueta:
  3179                           	callstack 28
  3180   0012AE                     
  3181                           ;Cinta.c: 67:     if(PORTBbits.RB5!=1){
  3182   0012AE  BA81               	btfsc	129,5,c	;volatile
  3183   0012B0  EF5C  F009         	goto	u401
  3184   0012B4  EF5E  F009         	goto	u400
  3185   0012B8                     u401:
  3186   0012B8  EF67  F009         	goto	l78
  3187   0012BC                     u400:
  3188   0012BC                     
  3189                           ;Cinta.c: 68:         LATAbits.LA6=1;
  3190   0012BC  8C89               	bsf	137,6,c	;volatile
  3191   0012BE                     l79:
  3192   0012BE  AA81               	btfss	129,5,c	;volatile
  3193   0012C0  EF64  F009         	goto	u411
  3194   0012C4  EF66  F009         	goto	u410
  3195   0012C8                     u411:
  3196   0012C8  EF5F  F009         	goto	l79
  3197   0012CC                     u410:
  3198   0012CC                     
  3199                           ;Cinta.c: 70:         LATAbits.LA6=0;
  3200   0012CC  9C89               	bcf	137,6,c	;volatile
  3201   0012CE                     l78:
  3202                           
  3203                           ;Cinta.c: 72:     if(PORTBbits.RB1!=1){
  3204   0012CE  B281               	btfsc	129,1,c	;volatile
  3205   0012D0  EF6C  F009         	goto	u421
  3206   0012D4  EF6E  F009         	goto	u420
  3207   0012D8                     u421:
  3208   0012D8  EF77  F009         	goto	l82
  3209   0012DC                     u420:
  3210   0012DC                     
  3211                           ;Cinta.c: 73:         LATDbits.LATD3=1;
  3212   0012DC  868C               	bsf	140,3,c	;volatile
  3213   0012DE                     l83:
  3214   0012DE  A281               	btfss	129,1,c	;volatile
  3215   0012E0  EF74  F009         	goto	u431
  3216   0012E4  EF76  F009         	goto	u430
  3217   0012E8                     u431:
  3218   0012E8  EF6F  F009         	goto	l83
  3219   0012EC                     u430:
  3220   0012EC                     
  3221                           ;Cinta.c: 75:          LATDbits.LATD3=0;
  3222   0012EC  968C               	bcf	140,3,c	;volatile
  3223   0012EE                     l82:
  3224                           
  3225                           ;Cinta.c: 77:     if(PORTAbits.RA3!=1){
  3226   0012EE  B680               	btfsc	128,3,c	;volatile
  3227   0012F0  EF7C  F009         	goto	u441
  3228   0012F4  EF7E  F009         	goto	u440
  3229   0012F8                     u441:
  3230   0012F8  EF87  F009         	goto	l90
  3231   0012FC                     u440:
  3232   0012FC                     
  3233                           ;Cinta.c: 78:         LATCbits.LC1=1;
  3234   0012FC  828B               	bsf	139,1,c	;volatile
  3235   0012FE                     l87:
  3236   0012FE  A680               	btfss	128,3,c	;volatile
  3237   001300  EF84  F009         	goto	u451
  3238   001304  EF86  F009         	goto	u450
  3239   001308                     u451:
  3240   001308  EF7F  F009         	goto	l87
  3241   00130C                     u450:
  3242   00130C                     
  3243                           ;Cinta.c: 80:         LATCbits.LC1=0;
  3244   00130C  928B               	bcf	139,1,c	;volatile
  3245   00130E                     l90:
  3246   00130E  0012               	return		;funcret
  3247   001310                     __end_of_init_maqueta:
  3248                           	callstack 0
  3249                           
  3250 ;; *************** function _init_int *****************
  3251 ;; Defined at:
  3252 ;;		line 58 in file "Cinta.c"
  3253 ;; Parameters:    Size  Location     Type
  3254 ;;		None
  3255 ;; Auto vars:     Size  Location     Type
  3256 ;;		None
  3257 ;; Return value:  Size  Location     Type
  3258 ;;                  1    wreg      void 
  3259 ;; Registers used:
  3260 ;;		None
  3261 ;; Tracked objects:
  3262 ;;		On entry : 0/0
  3263 ;;		On exit  : 0/0
  3264 ;;		Unchanged: 0/0
  3265 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3266 ;;      Params:         0       0       0       0       0       0       0       0       0
  3267 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3268 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3269 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3270 ;;Total ram usage:        0 bytes
  3271 ;; Hardware stack levels used: 1
  3272 ;; Hardware stack levels required when called: 2
  3273 ;; This function calls:
  3274 ;;		Nothing
  3275 ;; This function is called by:
  3276 ;;		_main
  3277 ;; This function uses a non-reentrant model
  3278 ;;
  3279                           
  3280                           	psect	text16
  3281   0014C8                     __ptext16:
  3282                           	callstack 0
  3283   0014C8                     _init_int:
  3284                           	callstack 28
  3285   0014C8                     
  3286                           ;Cinta.c: 59:     INTCONbits.GIEH=0;
  3287   0014C8  9EF2               	bcf	242,7,c	;volatile
  3288                           
  3289                           ;Cinta.c: 60:     INTCONbits.GIEL=0;
  3290   0014CA  9CF2               	bcf	242,6,c	;volatile
  3291                           
  3292                           ;Cinta.c: 61:     INTCONbits.RBIE=0;
  3293   0014CC  96F2               	bcf	242,3,c	;volatile
  3294                           
  3295                           ;Cinta.c: 62:     INTCONbits.RBIF=0;
  3296   0014CE  90F2               	bcf	242,0,c	;volatile
  3297                           
  3298                           ;Cinta.c: 63:     RCONbits.IPEN=0;
  3299   0014D0  9ED0               	bcf	208,7,c	;volatile
  3300                           
  3301                           ;Cinta.c: 64:     INTCON2bits.RBIP=0;
  3302   0014D2  90F1               	bcf	241,0,c	;volatile
  3303   0014D4  0012               	return		;funcret
  3304   0014D6                     __end_of_init_int:
  3305                           	callstack 0
  3306                           
  3307 ;; *************** function _Lcd_Init *****************
  3308 ;; Defined at:
  3309 ;;		line 63 in file "lcd.c"
  3310 ;; Parameters:    Size  Location     Type
  3311 ;;		None
  3312 ;; Auto vars:     Size  Location     Type
  3313 ;;		None
  3314 ;; Return value:  Size  Location     Type
  3315 ;;                  1    wreg      void 
  3316 ;; Registers used:
  3317 ;;		wreg, status,2, cstack
  3318 ;; Tracked objects:
  3319 ;;		On entry : 0/0
  3320 ;;		On exit  : 0/0
  3321 ;;		Unchanged: 0/0
  3322 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3323 ;;      Params:         0       0       0       0       0       0       0       0       0
  3324 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3325 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3326 ;;      Totals:         1       0       0       0       0       0       0       0       0
  3327 ;;Total ram usage:        1 bytes
  3328 ;; Hardware stack levels used: 1
  3329 ;; Hardware stack levels required when called: 5
  3330 ;; This function calls:
  3331 ;;		_Lcd_Clear
  3332 ;;		_Lcd_Cmd
  3333 ;;		_Lcd_Port
  3334 ;; This function is called by:
  3335 ;;		_main
  3336 ;; This function uses a non-reentrant model
  3337 ;;
  3338                           
  3339                           	psect	text17
  3340   0011AE                     __ptext17:
  3341                           	callstack 0
  3342   0011AE                     _Lcd_Init:
  3343                           	callstack 25
  3344   0011AE                     
  3345                           ;lcd.c: 65:  TRISEbits.TRISE1 = 0;
  3346   0011AE  9296               	bcf	150,1,c	;volatile
  3347                           
  3348                           ;lcd.c: 66:  TRISEbits.TRISE0 = 0;
  3349   0011B0  9096               	bcf	150,0,c	;volatile
  3350                           
  3351                           ;lcd.c: 67:  TRISDbits.TRISD4 = 0;
  3352   0011B2  9895               	bcf	149,4,c	;volatile
  3353                           
  3354                           ;lcd.c: 68:  TRISDbits.TRISD5 = 0;
  3355   0011B4  9A95               	bcf	149,5,c	;volatile
  3356                           
  3357                           ;lcd.c: 69:  TRISDbits.TRISD6 = 0;
  3358   0011B6  9C95               	bcf	149,6,c	;volatile
  3359                           
  3360                           ;lcd.c: 70:  TRISDbits.TRISD7 = 0;
  3361   0011B8  9E95               	bcf	149,7,c	;volatile
  3362   0011BA                     
  3363                           ;lcd.c: 71:     Lcd_Port(0x00);
  3364   0011BA  0E00               	movlw	0
  3365   0011BC  EC88  F009         	call	_Lcd_Port
  3366   0011C0                     
  3367                           ;lcd.c: 72:     _delay((unsigned long)((20)*(4000000/4000.0)));
  3368   0011C0  0E1A               	movlw	26
  3369   0011C2  6E06               	movwf	??_Lcd_Init^0,c
  3370   0011C4  0EF8               	movlw	248
  3371   0011C6                     u1647:
  3372   0011C6  2EE8               	decfsz	wreg,f,c
  3373   0011C8  D7FE               	bra	u1647
  3374   0011CA  2E06               	decfsz	??_Lcd_Init^0,f,c
  3375   0011CC  D7FC               	bra	u1647
  3376   0011CE  D000               	nop2	
  3377   0011D0                     
  3378                           ;lcd.c: 73:     Lcd_Cmd(0x03);
  3379   0011D0  0E03               	movlw	3
  3380   0011D2  EC48  F00A         	call	_Lcd_Cmd
  3381   0011D6                     
  3382                           ;lcd.c: 74:     _delay((unsigned long)((5)*(4000000/4000.0)));
  3383   0011D6  0E07               	movlw	7
  3384   0011D8  6E06               	movwf	??_Lcd_Init^0,c
  3385   0011DA  0E7D               	movlw	125
  3386   0011DC                     u1657:
  3387   0011DC  2EE8               	decfsz	wreg,f,c
  3388   0011DE  D7FE               	bra	u1657
  3389   0011E0  2E06               	decfsz	??_Lcd_Init^0,f,c
  3390   0011E2  D7FC               	bra	u1657
  3391   0011E4  0000               	nop	
  3392   0011E6                     
  3393                           ;lcd.c: 75:     Lcd_Cmd(0x03);
  3394   0011E6  0E03               	movlw	3
  3395   0011E8  EC48  F00A         	call	_Lcd_Cmd
  3396   0011EC                     
  3397                           ;lcd.c: 76:     _delay((unsigned long)((11)*(4000000/4000.0)));
  3398   0011EC  0E0F               	movlw	15
  3399   0011EE  6E06               	movwf	??_Lcd_Init^0,c
  3400   0011F0  0E48               	movlw	72
  3401   0011F2                     u1667:
  3402   0011F2  2EE8               	decfsz	wreg,f,c
  3403   0011F4  D7FE               	bra	u1667
  3404   0011F6  2E06               	decfsz	??_Lcd_Init^0,f,c
  3405   0011F8  D7FC               	bra	u1667
  3406   0011FA                     
  3407                           ;lcd.c: 77:     Lcd_Cmd(0x03);
  3408   0011FA  0E03               	movlw	3
  3409   0011FC  EC48  F00A         	call	_Lcd_Cmd
  3410   001200                     
  3411                           ;lcd.c: 78:     Lcd_Cmd(0x02);
  3412   001200  0E02               	movlw	2
  3413   001202  EC48  F00A         	call	_Lcd_Cmd
  3414   001206                     
  3415                           ;lcd.c: 79:     Lcd_Cmd(0x02);
  3416   001206  0E02               	movlw	2
  3417   001208  EC48  F00A         	call	_Lcd_Cmd
  3418   00120C                     
  3419                           ;lcd.c: 80:     Lcd_Cmd(0x08);
  3420   00120C  0E08               	movlw	8
  3421   00120E  EC48  F00A         	call	_Lcd_Cmd
  3422   001212                     
  3423                           ;lcd.c: 81:     Lcd_Cmd(0x00);
  3424   001212  0E00               	movlw	0
  3425   001214  EC48  F00A         	call	_Lcd_Cmd
  3426   001218                     
  3427                           ;lcd.c: 82:     Lcd_Cmd(0x0C);
  3428   001218  0E0C               	movlw	12
  3429   00121A  EC48  F00A         	call	_Lcd_Cmd
  3430   00121E                     
  3431                           ;lcd.c: 83:     Lcd_Cmd(0x00);
  3432   00121E  0E00               	movlw	0
  3433   001220  EC48  F00A         	call	_Lcd_Cmd
  3434   001224                     
  3435                           ;lcd.c: 84:     Lcd_Cmd(0x06);
  3436   001224  0E06               	movlw	6
  3437   001226  EC48  F00A         	call	_Lcd_Cmd
  3438   00122A                     
  3439                           ;lcd.c: 85:     Lcd_Clear();
  3440   00122A  EC6B  F00A         	call	_Lcd_Clear	;wreg free
  3441   00122E  0012               	return		;funcret
  3442   001230                     __end_of_Lcd_Init:
  3443                           	callstack 0
  3444                           
  3445 ;; *************** function _Lcd_Clear *****************
  3446 ;; Defined at:
  3447 ;;		line 20 in file "lcd.c"
  3448 ;; Parameters:    Size  Location     Type
  3449 ;;		None
  3450 ;; Auto vars:     Size  Location     Type
  3451 ;;		None
  3452 ;; Return value:  Size  Location     Type
  3453 ;;                  1    wreg      void 
  3454 ;; Registers used:
  3455 ;;		wreg, status,2, cstack
  3456 ;; Tracked objects:
  3457 ;;		On entry : 0/0
  3458 ;;		On exit  : 0/0
  3459 ;;		Unchanged: 0/0
  3460 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3461 ;;      Params:         0       0       0       0       0       0       0       0       0
  3462 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3463 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3464 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3465 ;;Total ram usage:        0 bytes
  3466 ;; Hardware stack levels used: 1
  3467 ;; Hardware stack levels required when called: 4
  3468 ;; This function calls:
  3469 ;;		_Lcd_Cmd
  3470 ;; This function is called by:
  3471 ;;		_mostrar_conteo
  3472 ;;		_Lcd_Init
  3473 ;; This function uses a non-reentrant model
  3474 ;;
  3475                           
  3476                           	psect	text18
  3477   0014D6                     __ptext18:
  3478                           	callstack 0
  3479   0014D6                     _Lcd_Clear:
  3480                           	callstack 25
  3481   0014D6                     
  3482                           ;lcd.c: 22:     Lcd_Cmd(0);
  3483   0014D6  0E00               	movlw	0
  3484   0014D8  EC48  F00A         	call	_Lcd_Cmd
  3485                           
  3486                           ;lcd.c: 23:     Lcd_Cmd(1);
  3487   0014DC  0E01               	movlw	1
  3488   0014DE  EC48  F00A         	call	_Lcd_Cmd
  3489   0014E2  0012               	return		;funcret
  3490   0014E4                     __end_of_Lcd_Clear:
  3491                           	callstack 0
  3492                           
  3493 ;; *************** function _Lcd_Cmd *****************
  3494 ;; Defined at:
  3495 ;;		line 11 in file "lcd.c"
  3496 ;; Parameters:    Size  Location     Type
  3497 ;;  a               1    wreg     unsigned char 
  3498 ;; Auto vars:     Size  Location     Type
  3499 ;;  a               1    4[COMRAM] unsigned char 
  3500 ;; Return value:  Size  Location     Type
  3501 ;;                  1    wreg      void 
  3502 ;; Registers used:
  3503 ;;		wreg, status,2, cstack
  3504 ;; Tracked objects:
  3505 ;;		On entry : 0/0
  3506 ;;		On exit  : 0/0
  3507 ;;		Unchanged: 0/0
  3508 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3509 ;;      Params:         0       0       0       0       0       0       0       0       0
  3510 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3511 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3512 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3513 ;;Total ram usage:        2 bytes
  3514 ;; Hardware stack levels used: 1
  3515 ;; Hardware stack levels required when called: 3
  3516 ;; This function calls:
  3517 ;;		_Lcd_Port
  3518 ;; This function is called by:
  3519 ;;		_mostrar_conteo
  3520 ;;		_main
  3521 ;;		_Lcd_Clear
  3522 ;;		_Lcd_Set_Cursor
  3523 ;;		_Lcd_Init
  3524 ;;		_Lcd_Shift_Right
  3525 ;;		_Lcd_Shift_Left
  3526 ;;		_Lcd_Blink
  3527 ;;		_Lcd_NoBlink
  3528 ;;		_Lcd_CGRAM_Init
  3529 ;;		_Lcd_CGRAM_Close
  3530 ;; This function uses a non-reentrant model
  3531 ;;
  3532                           
  3533                           	psect	text19
  3534   001490                     __ptext19:
  3535                           	callstack 0
  3536   001490                     _Lcd_Cmd:
  3537                           	callstack 25
  3538                           
  3539                           ;incstack = 0
  3540                           ;Lcd_Cmd@a stored from wreg
  3541   001490  6E05               	movwf	Lcd_Cmd@a^0,c
  3542   001492                     
  3543                           ;lcd.c: 11: void Lcd_Cmd(char a);lcd.c: 12: {;lcd.c: 13:     LATEbits.LE1 = 0;
  3544   001492  928D               	bcf	141,1,c	;volatile
  3545   001494                     
  3546                           ;lcd.c: 14:     Lcd_Port(a);
  3547   001494  5005               	movf	Lcd_Cmd@a^0,w,c
  3548   001496  EC88  F009         	call	_Lcd_Port
  3549   00149A                     
  3550                           ;lcd.c: 15:     LATEbits.LE0 = 1;
  3551   00149A  808D               	bsf	141,0,c	;volatile
  3552   00149C                     
  3553                           ;lcd.c: 16:     _delay((unsigned long)((4)*(4000000/4000.0)));
  3554   00149C  0E06               	movlw	6
  3555   00149E  6E04               	movwf	??_Lcd_Cmd^0,c
  3556   0014A0  0E30               	movlw	48
  3557   0014A2                     u1677:
  3558   0014A2  2EE8               	decfsz	wreg,f,c
  3559   0014A4  D7FE               	bra	u1677
  3560   0014A6  2E04               	decfsz	??_Lcd_Cmd^0,f,c
  3561   0014A8  D7FC               	bra	u1677
  3562   0014AA  D000               	nop2	
  3563   0014AC                     
  3564                           ;lcd.c: 17:     LATEbits.LE0 = 0;
  3565   0014AC  908D               	bcf	141,0,c	;volatile
  3566   0014AE  0012               	return		;funcret
  3567   0014B0                     __end_of_Lcd_Cmd:
  3568                           	callstack 0
  3569                           
  3570 ;; *************** function _Lcd_Port *****************
  3571 ;; Defined at:
  3572 ;;		line 3 in file "lcd.c"
  3573 ;; Parameters:    Size  Location     Type
  3574 ;;  a               1    wreg     unsigned char 
  3575 ;; Auto vars:     Size  Location     Type
  3576 ;;  a               1    2[COMRAM] unsigned char 
  3577 ;; Return value:  Size  Location     Type
  3578 ;;                  1    wreg      void 
  3579 ;; Registers used:
  3580 ;;		wreg
  3581 ;; Tracked objects:
  3582 ;;		On entry : 0/0
  3583 ;;		On exit  : 0/0
  3584 ;;		Unchanged: 0/0
  3585 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3586 ;;      Params:         0       0       0       0       0       0       0       0       0
  3587 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3588 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3589 ;;      Totals:         1       0       0       0       0       0       0       0       0
  3590 ;;Total ram usage:        1 bytes
  3591 ;; Hardware stack levels used: 1
  3592 ;; Hardware stack levels required when called: 2
  3593 ;; This function calls:
  3594 ;;		Nothing
  3595 ;; This function is called by:
  3596 ;;		_Lcd_Cmd
  3597 ;;		_Lcd_Init
  3598 ;;		_Lcd_Write_Char
  3599 ;; This function uses a non-reentrant model
  3600 ;;
  3601                           
  3602                           	psect	text20
  3603   001310                     __ptext20:
  3604                           	callstack 0
  3605   001310                     _Lcd_Port:
  3606                           	callstack 24
  3607                           
  3608                           ;incstack = 0
  3609                           ;Lcd_Port@a stored from wreg
  3610   001310  6E03               	movwf	Lcd_Port@a^0,c
  3611   001312                     
  3612                           ;lcd.c: 3: void Lcd_Port(char a);lcd.c: 4: {;lcd.c: 5:     (a & 1) ? (LATDbits.LD4 = 1) 
      +                          : (LATDbits.LD4 = 0);
  3613   001312  A003               	btfss	Lcd_Port@a^0,0,c
  3614   001314  EF8E  F009         	goto	u181
  3615   001318  EF90  F009         	goto	u180
  3616   00131C                     u181:
  3617   00131C  EF93  F009         	goto	l178
  3618   001320                     u180:
  3619   001320  888C               	bsf	140,4,c	;volatile
  3620   001322  EF94  F009         	goto	l1127
  3621   001326                     l178:
  3622   001326  988C               	bcf	140,4,c	;volatile
  3623   001328                     l1127:
  3624                           
  3625                           ;lcd.c: 6:     (a & 2) ? (LATDbits.LD5 = 1) : (LATDbits.LD5 = 0);
  3626   001328  A203               	btfss	Lcd_Port@a^0,1,c
  3627   00132A  EF99  F009         	goto	u191
  3628   00132E  EF9B  F009         	goto	u190
  3629   001332                     u191:
  3630   001332  EF9E  F009         	goto	l182
  3631   001336                     u190:
  3632   001336  8A8C               	bsf	140,5,c	;volatile
  3633   001338  EF9F  F009         	goto	l1131
  3634   00133C                     l182:
  3635   00133C  9A8C               	bcf	140,5,c	;volatile
  3636   00133E                     l1131:
  3637                           
  3638                           ;lcd.c: 7:     (a & 4) ? (LATDbits.LD6 = 1) : (LATDbits.LD6 = 0);
  3639   00133E  A403               	btfss	Lcd_Port@a^0,2,c
  3640   001340  EFA4  F009         	goto	u201
  3641   001344  EFA6  F009         	goto	u200
  3642   001348                     u201:
  3643   001348  EFA9  F009         	goto	l186
  3644   00134C                     u200:
  3645   00134C  8C8C               	bsf	140,6,c	;volatile
  3646   00134E  EFAA  F009         	goto	l1135
  3647   001352                     l186:
  3648   001352  9C8C               	bcf	140,6,c	;volatile
  3649   001354                     l1135:
  3650                           
  3651                           ;lcd.c: 8:     (a & 8) ? (LATDbits.LD7 = 1) : (LATDbits.LD7 = 0);
  3652   001354  A603               	btfss	Lcd_Port@a^0,3,c
  3653   001356  EFAF  F009         	goto	u211
  3654   00135A  EFB1  F009         	goto	u210
  3655   00135E                     u211:
  3656   00135E  EFB4  F009         	goto	l190
  3657   001362                     u210:
  3658   001362  8E8C               	bsf	140,7,c	;volatile
  3659   001364  EFB5  F009         	goto	l193
  3660   001368                     l190:
  3661   001368  9E8C               	bcf	140,7,c	;volatile
  3662   00136A                     l193:
  3663   00136A  0012               	return		;funcret
  3664   00136C                     __end_of_Lcd_Port:
  3665                           	callstack 0
  3666                           
  3667 ;; *************** function _LowISR *****************
  3668 ;; Defined at:
  3669 ;;		line 137 in file "Cinta.c"
  3670 ;; Parameters:    Size  Location     Type
  3671 ;;		None
  3672 ;; Auto vars:     Size  Location     Type
  3673 ;;  dummy           1    1[COMRAM] volatile unsigned char 
  3674 ;; Return value:  Size  Location     Type
  3675 ;;                  1    wreg      void 
  3676 ;; Registers used:
  3677 ;;		None
  3678 ;; Tracked objects:
  3679 ;;		On entry : 0/0
  3680 ;;		On exit  : 0/0
  3681 ;;		Unchanged: 0/0
  3682 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3683 ;;      Params:         0       0       0       0       0       0       0       0       0
  3684 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3685 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3686 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3687 ;;Total ram usage:        2 bytes
  3688 ;; Hardware stack levels used: 1
  3689 ;; Hardware stack levels required when called: 1
  3690 ;; This function calls:
  3691 ;;		Nothing
  3692 ;; This function is called by:
  3693 ;;		Interrupt level 1
  3694 ;; This function uses a non-reentrant model
  3695 ;;
  3696                           
  3697                           	psect	intcodelo
  3698   000018                     __pintcodelo:
  3699                           	callstack 0
  3700   000018                     _LowISR:
  3701                           	callstack 22
  3702                           
  3703                           ;incstack = 0
  3704   000018  8059               	bsf	int$flags,0,c	;set compiler interrupt flag (level 1)
  3705   00001A  CFE0 F001          	movff	bsr,??_LowISR
  3706   00001E                     
  3707                           ;Cinta.c: 138:      if (INTCONbits.RBIF){
  3708   00001E  A0F2               	btfss	242,0,c	;volatile
  3709   000020  EF14  F000         	goto	i1u57_21
  3710   000024  EF16  F000         	goto	i1u57_20
  3711   000028                     i1u57_21:
  3712   000028  EF19  F000         	goto	i1l115
  3713   00002C                     i1u57_20:
  3714   00002C                     
  3715                           ;Cinta.c: 139:        volatile unsigned char dummy = PORTB;
  3716   00002C  CF81 F002          	movff	3969,LowISR@dummy	;volatile
  3717                           
  3718                           ;Cinta.c: 140:         INTCONbits.RBIF=0;
  3719   000030  90F2               	bcf	242,0,c	;volatile
  3720   000032                     i1l115:
  3721   000032  C001  FFE0         	movff	??_LowISR,bsr
  3722   000036  9059               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  3723   000038  0010               	retfie	
  3724   00003A                     __end_of_LowISR:
  3725                           	callstack 0
  3726                           
  3727 ;; *************** function _HighISR *****************
  3728 ;; Defined at:
  3729 ;;		line 131 in file "Cinta.c"
  3730 ;; Parameters:    Size  Location     Type
  3731 ;;		None
  3732 ;; Auto vars:     Size  Location     Type
  3733 ;;		None
  3734 ;; Return value:  Size  Location     Type
  3735 ;;                  1    wreg      void 
  3736 ;; Registers used:
  3737 ;;		None
  3738 ;; Tracked objects:
  3739 ;;		On entry : 0/0
  3740 ;;		On exit  : 0/0
  3741 ;;		Unchanged: 0/0
  3742 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3743 ;;      Params:         0       0       0       0       0       0       0       0       0
  3744 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3745 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3746 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3747 ;;Total ram usage:        0 bytes
  3748 ;; Hardware stack levels used: 1
  3749 ;; This function calls:
  3750 ;;		Nothing
  3751 ;; This function is called by:
  3752 ;;		Interrupt level 2
  3753 ;; This function uses a non-reentrant model
  3754 ;;
  3755                           
  3756                           	psect	intcode
  3757   000008                     __pintcode:
  3758                           	callstack 0
  3759   000008                     _HighISR:
  3760                           	callstack 22
  3761                           
  3762                           ;incstack = 0
  3763   000008  8259               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  3764   00000A  ED72  F00A         	call	int_func,f	;refresh shadow registers
  3765                           
  3766                           	psect	intcode_body
  3767   0014E4                     __pintcode_body:
  3768                           	callstack 22
  3769   0014E4                     int_func:
  3770                           	callstack 22
  3771   0014E4  0006               	pop		; remove dummy address from shadow register refresh
  3772   0014E6  9259               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  3773   0014E8  0011               	retfie		f
  3774   0014EA                     __end_of_HighISR:
  3775                           	callstack 0
  3776                           
  3777                           	psect	rparam
  3778   000001                     ___rparam_used  equ	1
  3779   000000                     ___param_bank   equ	0
  3780   000000                     __Lparam        equ	__Lrparam
  3781   000000                     __Hparam        equ	__Hrparam
  3782                           
  3783                           	psect	temp
  3784   000059                     btemp:
  3785                           	callstack 0
  3786   000059                     	ds	1
  3787   000059                     int$flags       set	btemp
  3788   00005A                     wtemp8          set	btemp+1
  3789   00005A                     ttemp5          set	btemp+1
  3790   00005D                     ttemp6          set	btemp+4
  3791   000061                     ttemp7          set	btemp+8
  3792                           
  3793                           	psect	config
  3794                           
  3795                           ;Config register CONFIG1L @ 0x300000
  3796                           ;	PLL Prescaler Selection bits
  3797                           ;	PLLDIV = 1, No prescale (4 MHz oscillator input drives PLL directly)
  3798                           ;	System Clock Postscaler Selection bits
  3799                           ;	CPUDIV = OSC1_PLL2, [Primary Oscillator Src: /1][96 MHz PLL Src: /2]
  3800                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
  3801                           ;	USBDIV = 1, USB clock source comes directly from the primary oscillator block with no 
      +                          postscale
  3802   300000                     	org	3145728
  3803   300000  00                 	db	0
  3804                           
  3805                           ;Config register CONFIG1H @ 0x300001
  3806                           ;	Oscillator Selection bits
  3807                           ;	FOSC = INTOSCIO_EC, Internal oscillator, port function on RA6, EC used by USB (INTIO)
  3808                           ;	Fail-Safe Clock Monitor Enable bit
  3809                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  3810                           ;	Internal/External Oscillator Switchover bit
  3811                           ;	IESO = OFF, Oscillator Switchover mode disabled
  3812   300001                     	org	3145729
  3813   300001  08                 	db	8
  3814                           
  3815                           ;Config register CONFIG2L @ 0x300002
  3816                           ;	Power-up Timer Enable bit
  3817                           ;	PWRT = OFF, PWRT disabled
  3818                           ;	Brown-out Reset Enable bits
  3819                           ;	BOR = OFF, Brown-out Reset disabled in hardware and software
  3820                           ;	Brown-out Reset Voltage bits
  3821                           ;	BORV = 3, Minimum setting 2.05V
  3822                           ;	USB Voltage Regulator Enable bit
  3823                           ;	VREGEN = OFF, USB voltage regulator disabled
  3824   300002                     	org	3145730
  3825   300002  19                 	db	25
  3826                           
  3827                           ;Config register CONFIG2H @ 0x300003
  3828                           ;	Watchdog Timer Enable bit
  3829                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  3830                           ;	Watchdog Timer Postscale Select bits
  3831                           ;	WDTPS = 32768, 1:32768
  3832   300003                     	org	3145731
  3833   300003  1E                 	db	30
  3834                           
  3835                           ; Padding undefined space
  3836   300004                     	org	3145732
  3837   300004  FF                 	db	255
  3838                           
  3839                           ;Config register CONFIG3H @ 0x300005
  3840                           ;	CCP2 MUX bit
  3841                           ;	CCP2MX = OFF, CCP2 input/output is multiplexed with RB3
  3842                           ;	PORTB A/D Enable bit
  3843                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  3844                           ;	Low-Power Timer 1 Oscillator Enable bit
  3845                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  3846                           ;	MCLR Pin Enable bit
  3847                           ;	MCLRE = OFF, RE3 input pin enabled; MCLR pin disabled
  3848   300005                     	org	3145733
  3849   300005  00                 	db	0
  3850                           
  3851                           ;Config register CONFIG4L @ 0x300006
  3852                           ;	Stack Full/Underflow Reset Enable bit
  3853                           ;	STVREN = OFF, Stack full/underflow will not cause Reset
  3854                           ;	Single-Supply ICSP Enable bit
  3855                           ;	LVP = OFF, Single-Supply ICSP disabled
  3856                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
  3857                           ;	ICPRT = ON, ICPORT enabled
  3858                           ;	Extended Instruction Set Enable bit
  3859                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  3860                           ;	Background Debugger Enable bit
  3861                           ;	DEBUG = 0x1, unprogrammed default
  3862   300006                     	org	3145734
  3863   300006  A0                 	db	160
  3864                           
  3865                           ; Padding undefined space
  3866   300007                     	org	3145735
  3867   300007  FF                 	db	255
  3868                           
  3869                           ;Config register CONFIG5L @ 0x300008
  3870                           ;	Code Protection bit
  3871                           ;	CP0 = OFF, Block 0 (000800-001FFFh) is not code-protected
  3872                           ;	Code Protection bit
  3873                           ;	CP1 = OFF, Block 1 (002000-003FFFh) is not code-protected
  3874                           ;	Code Protection bit
  3875                           ;	CP2 = OFF, Block 2 (004000-005FFFh) is not code-protected
  3876                           ;	Code Protection bit
  3877                           ;	CP3 = OFF, Block 3 (006000-007FFFh) is not code-protected
  3878   300008                     	org	3145736
  3879   300008  0F                 	db	15
  3880                           
  3881                           ;Config register CONFIG5H @ 0x300009
  3882                           ;	Boot Block Code Protection bit
  3883                           ;	CPB = OFF, Boot block (000000-0007FFh) is not code-protected
  3884                           ;	Data EEPROM Code Protection bit
  3885                           ;	CPD = OFF, Data EEPROM is not code-protected
  3886   300009                     	org	3145737
  3887   300009  C0                 	db	192
  3888                           
  3889                           ;Config register CONFIG6L @ 0x30000A
  3890                           ;	Write Protection bit
  3891                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) is not write-protected
  3892                           ;	Write Protection bit
  3893                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) is not write-protected
  3894                           ;	Write Protection bit
  3895                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) is not write-protected
  3896                           ;	Write Protection bit
  3897                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) is not write-protected
  3898   30000A                     	org	3145738
  3899   30000A  0F                 	db	15
  3900                           
  3901                           ;Config register CONFIG6H @ 0x30000B
  3902                           ;	Configuration Register Write Protection bit
  3903                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
  3904                           ;	Boot Block Write Protection bit
  3905                           ;	WRTB = OFF, Boot block (000000-0007FFh) is not write-protected
  3906                           ;	Data EEPROM Write Protection bit
  3907                           ;	WRTD = OFF, Data EEPROM is not write-protected
  3908   30000B                     	org	3145739
  3909   30000B  E0                 	db	224
  3910                           
  3911                           ;Config register CONFIG7L @ 0x30000C
  3912                           ;	Table Read Protection bit
  3913                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) is not protected from table reads executed in ot
      +                          her blocks
  3914                           ;	Table Read Protection bit
  3915                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) is not protected from table reads executed in ot
      +                          her blocks
  3916                           ;	Table Read Protection bit
  3917                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) is not protected from table reads executed in ot
      +                          her blocks
  3918                           ;	Table Read Protection bit
  3919                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) is not protected from table reads executed in ot
      +                          her blocks
  3920   30000C                     	org	3145740
  3921   30000C  0F                 	db	15
  3922                           
  3923                           ;Config register CONFIG7H @ 0x30000D
  3924                           ;	Boot Block Table Read Protection bit
  3925                           ;	EBTRB = OFF, Boot block (000000-0007FFh) is not protected from table reads executed in
      +                           other blocks
  3926   30000D                     	org	3145741
  3927   30000D  40                 	db	64
  3928                           tosu	equ	0xFFF
  3929                           tosh	equ	0xFFE
  3930                           tosl	equ	0xFFD
  3931                           stkptr	equ	0xFFC
  3932                           pclatu	equ	0xFFB
  3933                           pclath	equ	0xFFA
  3934                           pcl	equ	0xFF9
  3935                           tblptru	equ	0xFF8
  3936                           tblptrh	equ	0xFF7
  3937                           tblptrl	equ	0xFF6
  3938                           tablat	equ	0xFF5
  3939                           prodh	equ	0xFF4
  3940                           prodl	equ	0xFF3
  3941                           indf0	equ	0xFEF
  3942                           postinc0	equ	0xFEE
  3943                           postdec0	equ	0xFED
  3944                           preinc0	equ	0xFEC
  3945                           plusw0	equ	0xFEB
  3946                           fsr0h	equ	0xFEA
  3947                           fsr0l	equ	0xFE9
  3948                           wreg	equ	0xFE8
  3949                           indf1	equ	0xFE7
  3950                           postinc1	equ	0xFE6
  3951                           postdec1	equ	0xFE5
  3952                           preinc1	equ	0xFE4
  3953                           plusw1	equ	0xFE3
  3954                           fsr1h	equ	0xFE2
  3955                           fsr1l	equ	0xFE1
  3956                           bsr	equ	0xFE0
  3957                           indf2	equ	0xFDF
  3958                           postinc2	equ	0xFDE
  3959                           postdec2	equ	0xFDD
  3960                           preinc2	equ	0xFDC
  3961                           plusw2	equ	0xFDB
  3962                           fsr2h	equ	0xFDA
  3963                           fsr2l	equ	0xFD9
  3964                           status	equ	0xFD8

Data Sizes:
    Strings     79
    Constant    0
    Data        0
    BSS         51
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     69      88
    BANK0           160      0      32
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    f$.$buffer	PTR unsigned char  size(1) Largest target is 20
		 -> mostrar_variable@buffer(COMRAM[20]), 

    f$.$source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(COMRAM[11]), 

    fputc@fp$.$buffer	PTR unsigned char  size(1) Largest target is 20
		 -> mostrar_variable@buffer(COMRAM[20]), 

    fputc@fp$.$source	PTR const unsigned char  size(2) Largest target is 0

    Lcd_Write_String@a	PTR const unsigned char  size(2) Largest target is 20
		 -> mostrar_variable@buffer(COMRAM[20]), STR_10(CODE[7]), STR_11(CODE[5]), STR_12(CODE[3]), 
		 -> STR_13(CODE[4]), STR_14(CODE[4]), STR_2(CODE[14]), STR_3(CODE[6]), 
		 -> STR_4(CODE[6]), STR_5(CODE[6]), STR_6(CODE[6]), STR_7(CODE[6]), 
		 -> STR_8(CODE[6]), STR_9(CODE[9]), 

    S1312$buffer	PTR unsigned char  size(1) Largest target is 20
		 -> mostrar_variable@buffer(COMRAM[20]), 

    S1312$source	PTR const unsigned char  size(2) Largest target is 0

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(COMRAM[2]), 

    sprintf@fmt	PTR const unsigned char  size(1) Largest target is 3
		 -> STR_1(CODE[3]), 

    sprintf@s	PTR unsigned char  size(1) Largest target is 20
		 -> mostrar_variable@buffer(COMRAM[20]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(COMRAM[1]), 

    vfpfcnvrt@cp	PTR unsigned char  size(1) Largest target is 3
		 -> STR_1(CODE[3]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 1
		 -> vfprintf@cfmt(COMRAM[1]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(COMRAM[11]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(COMRAM[1]), 

    vfprintf@cfmt	PTR unsigned char  size(1) Largest target is 3
		 -> STR_1(CODE[3]), 

    vfprintf@fmt	PTR const unsigned char  size(1) Largest target is 3
		 -> STR_1(CODE[3]), 

    vfprintf@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(COMRAM[11]), 


Critical Paths under _main in COMRAM

    _mostrar_conteo->_mostrar_variable
    _mostrar_variable->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_abs
    _abs->___awmod
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Clear->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port

Critical Paths under _LowISR in COMRAM

    None.

Critical Paths under _HighISR in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _LowISR in BANK0

    None.

Critical Paths under _HighISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _LowISR in BANK1

    None.

Critical Paths under _HighISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _LowISR in BANK2

    None.

Critical Paths under _HighISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _LowISR in BANK3

    None.

Critical Paths under _HighISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _LowISR in BANK4

    None.

Critical Paths under _HighISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _LowISR in BANK5

    None.

Critical Paths under _HighISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _LowISR in BANK6

    None.

Critical Paths under _HighISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _LowISR in BANK7

    None.

Critical Paths under _HighISR in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0    4034
                                             65 COMRAM     4     4      0
                            _Lcd_Cmd
                           _Lcd_Init
                     _Lcd_Set_Cursor
                           _init_int
                       _init_maqueta
                         _init_ports
                     _mostrar_conteo
 ---------------------------------------------------------------------------------
 (1) _mostrar_conteo                                       0     0      0    3079
                          _Lcd_Clear
                            _Lcd_Cmd
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
                   _mostrar_variable
 ---------------------------------------------------------------------------------
 (2) _mostrar_variable                                    22    20      2    2059
                                             43 COMRAM    22    20      2
                   _Lcd_Write_String
                            _sprintf
 ---------------------------------------------------------------------------------
 (3) _sprintf                                             18    14      4    1760
                                             27 COMRAM    16    12      4
                           _vfprintf
 ---------------------------------------------------------------------------------
 (4) _vfprintf                                             4     1      3    1559
                                             23 COMRAM     4     1      3
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (5) _vfpfcnvrt                                           11     8      3    1434
                                             12 COMRAM    11     8      3
                            ___awdiv
                            ___awmod
                                _abs
                              _fputc
 ---------------------------------------------------------------------------------
 (6) _fputc                                                8     5      3     230
                                              2 COMRAM     8     5      3
                              _putch
 ---------------------------------------------------------------------------------
 (7) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (6) _abs                                                  4     2      2      67
                                              8 COMRAM     4     2      2
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (6) ___awmod                                              6     2      4     298
                                              2 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (6) ___awdiv                                              8     4      4     302
                                              2 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (3) _Lcd_Write_String                                     6     4      2     224
                                              6 COMRAM     6     4      2
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (4) _Lcd_Write_Char                                       3     3      0     120
                                              3 COMRAM     3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (2) _Lcd_Set_Cursor                                       5     4      1     646
                                              5 COMRAM     5     4      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _init_ports                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_maqueta                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_int                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             1     1      0     210
                                              5 COMRAM     1     1      0
                          _Lcd_Clear
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (2) _Lcd_Clear                                            0     0      0      75
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (3) _Lcd_Cmd                                              2     2      0      75
                                              3 COMRAM     2     2      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (5) _Lcd_Port                                             1     1      0      60
                                              2 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (8) _LowISR                                               2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _HighISR                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Lcd_Cmd
     _Lcd_Port
   _Lcd_Init
     _Lcd_Clear
       _Lcd_Cmd
     _Lcd_Cmd
     _Lcd_Port
   _Lcd_Set_Cursor
     _Lcd_Cmd
   _init_int
   _init_maqueta
   _init_ports
   _mostrar_conteo
     _Lcd_Clear
     _Lcd_Cmd
     _Lcd_Set_Cursor
     _Lcd_Write_String
       _Lcd_Write_Char
         _Lcd_Port
     _mostrar_variable
       _Lcd_Write_String
       _sprintf
         _vfprintf
           _vfpfcnvrt
             ___awdiv
             ___awmod
             _abs
               ___awmod (ARG)
             _fputc
               _putch

 _LowISR (ROOT)

 _HighISR (ROOT)

Address spaces:
Name               Size   Autos  Total    Usage
BIGRAM            2047      0       0      0.0%
BITBANK7           256      0       0      0.0%
BANK7              256      0       0      0.0%
BITBANK6           256      0       0      0.0%
BANK6              256      0       0      0.0%
BITBANK5           256      0       0      0.0%
BANK5              256      0       0      0.0%
BITBANK4           256      0       0      0.0%
BANK4              256      0       0      0.0%
BITBANK3           256      0       0      0.0%
BANK3              256      0       0      0.0%
BITBANK2           256      0       0      0.0%
BANK2              256      0       0      0.0%
BITBANK1           256      0       0      0.0%
BANK1              256      0       0      0.0%
BITBANK0           160      0       0      0.0%
BANK0              160      0      32     20.0%
BITBIGSFRh         126      0       0      0.0%
BITCOMRAM           94      0       0      0.0%
COMRAM              94     69      88     93.6%
BITBIGSFRl          32      0       0      0.0%
STACK                0      0       0      0.0%
DATA                 0      0     120      0.0%


Microchip Technology PIC18 Macro Assembler V3.00 build 20241204225717 
Symbol Table                                                                                   Thu Sep 25 10:04:13 2025

                      l72 14C6                        l81 12CC                        l90 130E  
                      l82 12EE                        l75 14D4                        l83 12DE  
                      l85 12EC                        l69 148E                        l78 12CE  
                      l87 12FE                        l79 12BE                        l89 130C  
            ___awdiv@sign 0008                        bsr 0FE0                       l104 0D08  
                     l120 08BC                       l122 08CA                       l131 0944  
                     l123 08D8                       l212 122E                       l132 0946  
                     l205 0F92                       l221 12AC                       l141 099C  
                     l134 0954                       l126 08F6                       l215 13E0  
                     l151 0A16                       l143 09AA                       l135 0956  
                     l160 0AAE                       l128 0904                       l209 0F92  
                     l161 0AD6                       l137 0964                       l129 0936  
                     l146 09C0                       l138 0980                       l163 0AE4  
                     l164 0B0E                       l148 09CE                       l190 1368  
                     l182 133C                       l502 1054                       l158 0AA0  
                     l193 136A                       l186 1352                       l178 1326  
                     l515 1102                       l196 14AE                       l199 14E2  
                     l949 1414                       l993 13A8                       l987 0EC0  
                     l997 1430                       u200 134C                       u201 1348  
                     u210 1362                       u211 135E                       u400 12BC  
                     u401 12B8                       u410 12CC                       u411 12C8  
                     u180 1320                       u420 12DC                       u181 131C  
                     u421 12D8                       u190 1336                       u430 12EC  
                     u191 1332                       u431 12E8                       u440 12FC  
                     u441 12F8                       u450 130C                       u451 1308  
                     u900 1002                       u901 0FFE                       u910 101E  
__end_of_mostrar_variable 1490                       u911 101A                       u920 1044  
                     u921 1040                       u930 1066                       u931 1062  
                     u940 1080                       u941 107C                       u870 0FA4  
                     u950 109A                       u871 0FA0                       u951 1096  
                     u880 0FBE                       u960 10B8                       u881 0FBA  
                     u961 10B4                       u890 0FE4                       u970 10CE  
                     u891 0FE0                       u971 10CA                       u980 10F2  
                     u981 10EE                       u990 1114                       u991 1110  
                     _abs 1416              ___awmod@sign 0008                       wreg 0FE8  
                    l1000 1448                      l1012 11AC                      l1023 14EA  
                    l1201 13CE                      l2001 0ABE                      l1131 133E  
                    l1123 1312                      l1203 13D4                      l2011 0B06  
                    l2003 0AD4                      ?_abs 0009                      l1133 134C  
                    l1125 1320                      l1301 14C2                      l1205 13D6  
                    l2005 0AE6                      l1135 1354                      l1127 1328  
                    l1311 12BC                      l1303 14C4                      l1207 13DE  
                    l2007 0AFC                      l1137 1362                      l1129 1336  
                    l1241 1494                      l1401 1218                      l1313 12DC  
                    l2009 0AFE                      l1243 149A                      l1403 121E  
                    l1307 14C8                      l1315 12FC                      l1245 149C  
                    l1405 1224                      l1309 12AE                      l1247 14AC  
                    l1239 1492                      l1255 14D6                      l1407 122A  
                    l1191 13B8                      l1193 13BA                      l1291 14B4  
                    l1195 13C2                      l1381 11C0                      l1293 14BA  
                    l1197 13C4                      l1189 13AC                      l1701 10D6  
                    l1391 11FA                      l1383 11D0                      l1295 14BC  
                    l1199 13CC                      l1703 10DC                      l1393 1200  
                    l1385 11D6                      l1377 11AE                      l1297 14BE  
                    l1289 14B0                      l1641 0FB0                      l1633 0F94  
                    l1705 10E2                      l1721 114A                      l1713 1104  
                    l1395 1206                      l1387 11E6                      l1379 11BA  
                    l1299 14C0                      l1803 1230                      l1651 0FE4  
                    l1643 0FBE                      l1635 0F96                      l1707 10F2  
                    l1723 117C                      l1715 1114                      l1731 0D0A  
                    l1811 1470                      l1397 120C                      l1389 11EC  
                    l1821 0EE6                      l1805 123C                      l1661 101E  
                    l1653 0FEC                      l1645 0FC6                      l1637 0FA4  
                    l1709 10FA                      l1717 1124                      l1741 0D4E  
                    l1733 0D2C                      l1813 1484                      l1901 0CC4  
                    l1399 1212                      l1831 0F20                      l1823 0EEC  
                    l1807 126C                      l1671 1044                      l1663 1026  
                    l1655 0FF4                      l1647 0FCA                      l1639 0FAC  
                    l1727 1416                      l1719 112E                      l1751 0DC0  
                    l1743 0D6A                      l1735 0D34                      l1903 0CD0  
                    l1911 085A                      l1841 0F5E                      l1833 0F2A  
                    l1825 0EF6                      l1817 0EC4                      l1809 1270  
                    l1673 104C                      l1665 1028                      l1657 1002  
                    l1649 0FD2                      l1681 1066                      l1729 1424  
                    l1761 0E3E                      l1753 0DF0                      l1745 0D86  
                    l1737 0D40                      l1905 0CEC                      l1921 0892  
                    l1913 086C                      l1843 0F70                      l1835 0F3C  
                    l1827 0F08                      l1819 0ED4                      l1667 102E  
                    l1659 1008                      l1691 109A                      l1683 106E  
                    l1763 0E4E                      l1755 0E0C                      l1747 0D9E  
                    l1771 0E92                      l1739 0D44                      l1907 0CFC  
                    l1851 0B16                      l1931 08CC                      l1923 0896  
                    l1915 087A                      l1845 0F82                      l1837 0F4E  
                    l1829 0F1A                      l1669 1034                      l1693 10A2  
                    l1685 1072                      l1677 1056                      l1765 0E60  
                    l1757 0E1E                      l1749 0DA8                      l1781 136C  
                    l1861 0B66                      l1853 0B20                      l1941 08F4  
                    l1933 08D4                      l1925 089A                      l1917 0880  
                    l1909 0852                      l1847 0F88                      l1839 0F54  
                    l1695 10AA                      l1687 1080                      l1679 1058  
                    l1767 0E7A                      l1759 0E2E                      l1775 0E9E  
                    l1783 1374                      l1791 13E2                      l1871 0BC2  
                    l1863 0B7A                      l1855 0B32                      l1951 097E  
                    l1943 0906                      l1935 08E6                      l1927 08B0  
                    l1919 088A                      l1697 10B8                      l1689 1088  
                    l1769 0E7C                      l1785 1384                      l1793 13EA  
                    l1881 0C1C                      l1873 0BD2                      l1865 0B8A  
                    l1857 0B42                      l1849 0B12                      l1961 09DC  
                    l1953 098E                      l1945 091C                      l1937 08EE  
                    l1929 08B8                      l1699 10CE                      l1787 13A0  
                    l1795 13F2                      l1891 0C72                      l1883 0C2E  
                    l1875 0BE6                      l1867 0B9E                      l1859 0B56  
                    l1971 0A24                      l1963 09EA                      l1955 0996  
                    l1947 0934                      l1939 08F2                      l1797 13FA  
                    l1893 0C84                      l1885 0C3E                      l1877 0BF6  
                    l1869 0BAE                      l1981 0A6C                      l1965 09F2  
                    l1973 0A28                      l1957 099A                      l1949 0968  
                    l1799 140A                      l1887 0C50                      l1895 0C98  
                    l1879 0C00                      l1991 0A9C                      l1983 0A70  
                    l1975 0A44                      l1967 0A00                      l1959 09AC  
                    l1897 0CA8                      l1889 0C60                      l1993 0A9E  
                    l1985 0A82                      l1977 0A56                      l1969 0A0E  
                    l1899 0CAE                      l1995 0AB0                      l1987 0A94  
                    l1979 0A5A                      l1997 0AB8                      l1989 0A98  
                    l1999 0ABC                      STR_1 084D                      STR_2 0801  
                    STR_3 0837                      STR_4 0825                      STR_5 082B  
                    STR_6 0831                      STR_7 0825                      STR_8 081F  
                    STR_9 080F                      u1000 1124                      u1001 1120  
                    u1010 114A                      u1011 1146                      u1020 117C  
                    u1100 0E2E                      u1021 1178                      u1101 0E2A  
                    u1030 1424                      u1110 0E3E                      u1031 1420  
                    u1111 0E3A                      u1200 0F3C                      u1120 0E4E  
                    u1040 0D2C                      u1201 0F38                      u1121 0E4A  
                    u1041 0D28                      u1210 0F70                      u1130 0E8E  
                    u1050 0D6A                      u1211 0F6C                      u1131 0E8A  
                    u1051 0D66                      u1060 0D86                      u1140 13A0  
                    u1300 0C50                      u1220 0B32                      u1061 0D82  
                    u1141 139C                      u1301 0C4C                      u1221 0B2E  
                    u1150 1268                      u1070 0DBC                      u1310 0C72  
                    u1230 0B56                      u1071 0DB6                      u1311 0C6E  
                    u1231 0B52                      u1160 129C                      u1080 0DBE  
                    u1320 0C84                      u1240 0B7A                      u1400 09AA  
                    u1321 0C80                      u1241 0B76                      u1401 09A6  
                    u1170 12AC                      u1090 0E1E                      u1250 0B9E  
                    u1410 09CE                      u1330 08CA                      u1171 12A8  
                    u1091 0E1A                      u1251 0B9A                      u1411 09CA  
                    u1331 08C6                      u1180 0ED4                      u1260 0BC2  
                    u1500 0A82                      u1420 09DC                      u1340 08E6  
                    u1181 0ED0                      u1157 125E                      u1261 0BBE  
                    u1501 0A7E                      u1421 09D8                      u1341 08E2  
                    _LATA 0F89                      u1190 0F08                      u1270 0BE6  
                    u1510 0A94                      u1430 09EA                      u1350 0904  
                    u1191 0F04                      u1167 1292                      u1271 0BE2  
                    u1511 0A90                      u1431 09E6                      u1351 0900  
                    u1280 0C1C                      u1520 0AAE                      u1440 0A00  
                    u1360 0944                      u1281 0C18                      u1521 0AAA  
                    u1441 09FC                      u1361 0940                      _LATE 0F8D  
                    u1290 0C2E                      u1530 0AE4                      u1450 0A0E  
                    u1370 0954                      u1291 0C2A                      u1531 0AE0  
                    u1451 0A0A                      u1371 0950                      u1460 0A24  
                    u1380 0964                      u1461 0A20                      u1381 0960  
                    u1470 0A44                      u1390 098E                      u1607 0AC8  
                    u1471 0A40                      u1391 098A                      u1480 0A56  
                    u1617 0AF0                      u1481 0A52                      u1490 0A6C  
                    u1627 13C6                      u1491 0A68                      u1547 0872  
                    u1637 13D8                      u1557 08A4                      u1647 11C6  
                    u1567 0910                      u1657 11DC                      u1577 0928  
                    u1667 11F2                      u1587 0972                      u1677 14A2  
                    u1597 09B2                      abs@a 0009         ?_Lcd_Write_String 0007  
                    _dbuf 0060                      _main 0852                      _prec 0048  
                    fsr1h 0FE2                      fsr2h 0FDA                      indf1 0FE7  
                    indf2 0FDF                      fsr1l 0FE1                      fsr2l 0FD9  
                    btemp 0059                      start 003A        ??_Lcd_Write_String 0009  
         __end_of_Lcd_Cmd 14B0           __end_of_HighISR 14EA              ___param_bank 0000  
        ??_mostrar_conteo 0042                     ??_abs 000B                     ?_main 0001  
         __end_of___awdiv 1056                     STR_10 0818                     STR_11 083D  
                   STR_12 084A                     STR_13 0842                     STR_14 0846  
         __end_of___awmod 1104           ___awdiv@divisor 0005                     i1l115 0032  
                   i2l109 14E6           ___awdiv@counter 0007              vfpfcnvrt@fmt 000E  
                   _PORTB 0F81                     _TRISA 0F92                     _TRISB 0F93  
                   _TRISC 0F94                     _TRISD 0F95                     _TRISE 0F96  
                   _flags 0058                     _negra 0054                     _fputc 1104  
                   _width 0046                     _putch 14EA                     tablat 0FF5  
                   ttemp5 005A                     ttemp6 005D                     ttemp7 0061  
                   status 0FD8                     wtemp8 005A           __end_of_sprintf 1416  
             LowISR@dummy 0002          __end_of_Lcd_Init 1230          __end_of_Lcd_Port 136C  
         __initialization 144A              __end_of_main 0B12                    ??_main 0042  
           __activetblptr 0002                    ?_fputc 0003          ___awdiv@dividend 0003  
                  ?_putch 0001                    i1l1411 001E                    i1l1413 002C  
                  i2l1409 14E6                 ??_Lcd_Cmd 0004             vfpfcnvrt@done 0011  
               ??_HighISR 0001             ?_init_maqueta 0001                    _LowISR 0018  
            vfprintf@cfmt 001B                 ??___awdiv 0007                 ??___awmod 0007  
                  _blanca 0056                    _escena 004A          __end_of_init_int 14D6  
                  clear_0 1450                    clear_1 145C          ___awdiv@quotient 0009  
         ___awmod@divisor 0005                    isa$std 0001           ___awmod@counter 0007  
                  fputc@c 0003              __mediumconst 0800                    tblptrh 0FF7  
                  tblptrl 0FF6                    tblptru 0FF8                    putch@c 0001  
        __end_of_vfprintf 13AA                 ??_sprintf 0020           Lcd_Set_Cursor@a 0007  
         Lcd_Set_Cursor@b 0006           Lcd_Set_Cursor@y 0009           Lcd_Set_Cursor@z 0008  
          ??_init_maqueta 0003                __accesstop 0060   __end_of__initialization 1462  
       __end_of_Lcd_Clear 14E4             ___rparam_used 0001    mostrar_variable@buffer 002E  
          __pcstackCOMRAM 0001             __end_of_fputc 11AE             __end_of_putch 14EC  
          _Lcd_Set_Cursor 0EC2         ?_mostrar_variable 002C        ??_mostrar_variable 002E  
               ?_Lcd_Init 0001                 ?_Lcd_Port 0001                   ??_fputc 0006  
                 ??_putch 0003                __pbssBANK0 0060                   ?_LowISR 0001  
  __end_of_Lcd_Set_Cursor 0F94                   i1u57_20 002C                   i1u57_21 0028  
              ??_Lcd_Init 0006                ??_Lcd_Port 0003            _Lcd_Write_Char 13AA  
                 _Lcd_Cmd 1490                   _HighISR 0008                 ?_init_int 0001  
                 __Hparam 0000                   __Lparam 0000                   ___awdiv 0F94  
                 ___awmod 1056                 ?_vfprintf 0018              __psmallconst 0800  
                 __pcinit 144A                _init_ports 14B0                   __ramtop 0800  
         ?_Lcd_Set_Cursor 0006                   __ptext0 0852                   __ptext1 0B12  
                 __ptext2 1470                   __ptext3 13E2                   __ptext4 136C  
                 __ptext5 0D0A                   __ptext6 1104                   __ptext7 14EA  
                 __ptext8 1416                   __ptext9 1056      __end_of_init_maqueta 1310  
        ___awmod@dividend 0003                   _sprintf 13E2    __end_of_Lcd_Write_Char 13E2  
          __pintcode_body 14E4      end_of_initialization 1462                   fputc@fp 0005  
           __Lmediumconst 0000                ??_init_int 0003                   int_func 14E4  
       __end_of_vfpfcnvrt 0EC2                   postdec2 0FDD                   postinc0 0FEE  
                 postinc1 0FE6                   postinc2 0FDE          vfpfcnvrt@convarg 0013  
               Lcd_Port@a 0003                ??_vfprintf 001B         mostrar_variable@x 002C  
               _PORTAbits 0F80                 _PORTBbits 0F81                 _PORTCbits 0F82  
               _TRISCbits 0F94                 _TRISDbits 0F95                 _TRISEbits 0F96  
         ?_Lcd_Write_Char 0001         Lcd_Write_String@a 0007         Lcd_Write_String@i 000B  
          __end_of_LowISR 003A                 _Lcd_Clear 14D6               vfpfcnvrt@ap 000F  
             vfpfcnvrt@cp 0012               vfpfcnvrt@fp 000D          _Lcd_Write_String 1230  
             ?_init_ports 0001       start_initialization 144A               __end_of_abs 144A  
                ??_LowISR 0001               vfprintf@fmt 0019                ?_Lcd_Clear 0001  
         Lcd_Write_Char@a 0006           Lcd_Write_Char@y 0005               __pbssCOMRAM 0046  
                ?_Lcd_Cmd 0001                  ?_HighISR 0001              _init_maqueta 12AE  
        ??_Lcd_Set_Cursor 0007                 __pintcode 0008                  ?___awdiv 0003  
                ?___awmod 0003               __pintcodelo 0018               __smallconst 0800  
          _mostrar_conteo 0B12                  ?_sprintf 001C                  _LATAbits 0F89  
                _LATCbits 0F8B                  _LATDbits 0F8C                  _LATEbits 0F8D  
                Lcd_Cmd@a 0005               ??_Lcd_Clear 0006                  _RCONbits 0FD0  
               _vfpfcnvrt 0D0A    __end_of_mostrar_conteo 0D0A                _ADCON1bits 0FC1  
        ??_Lcd_Write_Char 0004                  _Lcd_Init 11AE                  _Lcd_Port 1310  
              vfpfcnvrt@c 0017               _INTCON2bits 0FF1  __end_of_Lcd_Write_String 12AE  
        _mostrar_variable 1470                  __Hrparam 0000                vfprintf@ap 001A  
                __Lrparam 0000                vfprintf@fp 0018                ?_vfpfcnvrt 000D  
            ??_init_ports 0003           ?_mostrar_conteo 0001                  _banderaB 004E  
                _banderaM 004C                  _banderaN 0050                sprintf@fmt 001D  
                __ptext10 0F94                  __ptext11 1230                  __ptext20 1310  
                __ptext12 13AA                  __ptext13 0EC2                  __ptext14 14B0  
                __ptext15 12AE                  __ptext16 14C8                  __ptext17 11AE  
                __ptext18 14D6                  __ptext19 1490                  _init_int 14C8  
                _metalica 0052        __end_of_init_ports 14C8                  isa$xinst 0000  
                int$flags 0059                  _vfprintf 136C                  main@giro 0044  
              _INTCONbits 0FF2        Lcd_Write_Char@temp 0004                  intlevel1 0000  
                intlevel2 0000                 sprintf@ap 0020               ??_vfpfcnvrt 0010  
      Lcd_Set_Cursor@temp 000A                  sprintf@f 0021                  sprintf@s 001C  
